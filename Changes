*****************************************************************************
PLPLOT 4.99a changes
*****************************************************************************

This file contains a list of the major changes in PLPLOT 4.99a.
It is best to look through this file for new features, etc, until the
new documentation is complete.

For changes from previous versions, please see Changes.old.

-----------------------------------
Plrender
-----------------------------------

 * Inserted a hack for old metafiles with bad linewidth commands (WIDTH
 * commands in the body of the metafile are now ignored for metafiles version
 * 1993a and older).  WIDTH commands prior to the INIT on old metafiles are
 * still honored.
 *
 * Changed orient-setting code to switch on the basis of orient%2 and orient%4,
 * so that any value of orient gives valid output.
 *
 * Changed to a fatal error when unrecognized metafile input is encountered.
 *
 * Converted to new plplot command-line handling functions, resulting in a
 * considerable reduction in the amount of actual code.  Miscellaneous bugs
 * in file seeking fixed.  Extraneous page printed on a -p command
 * eliminated.  Many other small improvements.
 *
 * Support for polylines (even converts connected lines while reading into
 * polylines for better response), new color model support, event handler
 * support.  New events recognized allow seeking to arbitrary locations in
 * the file (absolute or relative), and backward.  Some old capabilities (no
 * longer useful) eliminated.  
 * 
 * Seeking: when using an appropriate output driver (e.g. xwin), user
 * keyboard input results in the following:
 *
 * <Backspace>	|
 * <Delete>	| Back page
 * <Page up>	|
 *
 * +<num><CR>	Seek forward <num> pages.
 * -<num><CR>	Seek backward <num> pages.
 *
 * <num><CR>	Seek to page <num>.
 *
 * Both <BS> and <DEL> are recognized for a back-page since the target
 * system may use either as its erase key.  <Page Up> is present on some
 * keyboards (different from keypad key).  Note that <Page Down> and
 * <Return> are recognized by the driver itself to advance the page.
 *
 * Illegal input is ignored.  When using the xterm driver, <backspace>,
 * <delete>, <page up>, <page down> either are ignored or don't function
 * properly.
 *
 * Fixed orientation code, previously it rotated plot in the wrong direction.
 *
 * Gave plrender an ID tag.

-----------------------------------
Main sources
-----------------------------------

ALL CODE:

 * Massive reorganization and clean up.  Main source code now isolated to
 * about two dozen files.  Routines of similar function are stored in the
 * same file, e.g. all routines to create viewports are now in plvpor.c.
 * All support for non-ANSI (K&R) C compilers removed!  


Additional changes, listed by file: 

 * scstubs.c:
 * Converted to string-integer equivalence method for C-Fortran string
 * passing.


 * sccont.c:
 * New front-end for contours from fortran.  Does amazingly little work now,
 * just defines an appropriate function evaluator and coordinate transformers
 * and calls the main contour function.


 * plwind.c:
 * Now holds all routines dealing with window specification.


 * plvpor.c:
 * Now holds all routines dealing with viewport generation.


 * pltick.c:
 * Now holds all functions dealing with tick generation, including error
 * bars.


 * plsym.c:
 * Now holds all routines dealing with PLPLOT symbols.


 * plstring.c:
 * Added to hold all functions that deal with PLPLOT strings.
 * Split off code to write a stroke font character into its own function for
 * clarity.  Changed character-decoding routine to use stream-dependent escape
 * character in text strings.


 * plstream.c:
 * Added to hold functions that primarily deal with manipulation of stream
 * quantities, through a pointer to a stream passed as an argument.  You may
 * also think of it as a driver utility library.  Eliminated negative
 * orientations.  Changed orient-setting code to switch on the basis of
 * orient%4, so that any value of orient give valid output.


 * plsdef.c:
 * Holds functions that modify plplot defaults.  These do not need direct
 * access to the stream data.  Changed references in error messages from
 * plstar to plinit.  Also changed behavior of size-setting routines (should
 * not affect user code).  Fixed data structure initializers to be
 * ANSI-conformant.


 * plpage.c:
 * Now holds all page-related functions.
 * Changed references in error messages from plstar to plinit.  Also changed
 * pladv to call grclr and grpage (instead of gradv, now gone).


 * plot3d.c:
 * Now holds all routines dealing with 3d plots (and hence has become rather
 * large).  A capability similar to that in the contour plotter (passing
 * in function evaluators instead of 2d arrays) is planned but not in this
 * version.


 * plline.c:
 * Now holds all routines dealing with line draws, including clipping and
 * dashed line support.  Polyline capability added.


 * plfont.c:
 * Added support for device-independent font files.


 * plfill.c:
 * Now holds all routines dealing with fills.


 * plcvt.c:
 * File for holding coordinate transformers (was: convert.c).


 * plctrl.c:
 * Added for the high level routines that don't result in something being
 * plotted ("control" routines) that don't need direct access to the stream
 * or dispatch table data.  Eliminated plbeg: it is now illegal to specify
 * the device by device number.


 * plcore.c:
 * Holds "core" routines -- includes routines from what was base.c, plstar.c,
 * some others.  The stream data and dispatch table are now local to this
 * file only.  Also added support for new color model, polyline support.
 * Added plscolbg() to modify background color.  Added plgver() for
 * retrieving plplot library version.  Eliminated gradv driver function.
 * Completely rewrote initialization routines.  Now plstar and plstart are
 * merely front-ends to plinit, which does all the initialization.  Added
 * plsdev for setting the device name, and plssub for setting the subpages.
 * Added plgpls for getting the current pls pointer, for offloading
 * stream-dependent code into other files.  Added plsesc/plgesc for
 * setting/getting the escape character for text strings (can be any of
 * [!#$%&*@^~], brackets not included).  Put in some checks for routines that
 * set family file parameters.  Eliminated some unused routines.  Added
 * plflush() function.


 * plcont.c:
 * Now holds all contouring routines.  The multiple contour functions have
 * been removed, since now a function is passed in instead of an array.
 * Through use of a suitable function evaluator and array evaluator, the same
 * contouring code can now be used from Fortran (with no transpose
 * necessary), C with C-like 2d arrays, C with 2d arrays stored as 1d, etc.
 * Replaced (void *) declaration for user data structures to (PLPointer), in
 * the spirit of Xt's XtPointer.  It was hoped that this would eliminate
 * certain warnings having to do with alignment (only showing up with all
 * warnings turned on), but it didn't.


 * plbox.c:
 * Now holds all box-related routines.


 * plargs.c:
 * Added code to parse command line arguments.  Accepts a data structure with
 * argument specification, syntax, description, mode flag, and function
 * handler (called if option is found).  Usable both to parse plplot command
 * flags and user command flags.  The latter is facilitated by input of user
 * routines to handle usage and help messages.  The plplot command line
 * parser removes all arguments it recognizes, allowing the user to detect
 * invalid input.  See plrender.c for a working example of usage of the case
 * of user command flags; the simpler case with no user command flags is
 * illustrated by any of the (C) example programs.  Changed the -bg flag to
 * accept a full-color argument in the form -bg rrggbb, with rr, gg, bb
 * corresponding to the background RGB values in hex.  Example: -bg FFFF00 to
 * get a yellow background.


 * plstubs.h:
 * Reduced stub routine definition to ONE set of defines through a clever
 * macro, FNAME.  Will work in principle for all systems.


-----------------------------------
Header Files
-----------------------------------

 * plstream.h:
 * Added to hold definition of PLStream data structure.  Included by all
 * files dealing with streams (and is included by driver.h).  Added to the
 * stream data structure: a device name, and the value of the escape
 * character.  Added function prototype for plgpls and some minor
 * documentation changes.


 * plplotio.h:
 * Added to handle any data structure definitions or function prototypes that
 * need access to stdio.h, so that plplot.h could remain free of this.


 * plplot.h:
 * Elimination of many function prototypes (and a few added), caused by many
 * routines becoming static in reorganization.  Added support data structures
 * and constant definitions for plplot options handling code.  Added function
 * prototypes for new functions and deleted a couple.  Eliminated case of
 * VOID == char since that should never be necessary with ANSI C.


 * plevent.h:
 * This file added for inclusion by all user-defined event handlers to be
 * used with plplot.  It contains constant definitions used to transmit
 * info on the event that occurred (e.g. keystroke definitions).


 * plcore.h:
 * Added this file for inclusion only by plcore.c.  It declares the plstream
 * data structure, and defines, declares, and initializes the dispatch
 * table data structure.


 * pdf.h:
 * Added prototypes for functions that support polyline read/writes.


 * metadefs.h:
 * Added support for polylines and new color model.  Changed PLPLOT_HEADER
 * and PLPLOT_VERSION to PLMETA_HEADER and PLMETA_VERSION so that plplot
 * could have its own distinct version number.


 * drivers.h:
 * Added this file for inclusion by all drivers, in lieu of what was
 * previously dispatch.h.  This now has only driver prototypes -- NO data
 * structure declarations.  Eliminated references to the xxx_adv (gradv)
 * driver functions.


-----------------------------------
Drivers
-----------------------------------

ALL DRIVERS:

 * All device coordinates are now expected to fit into a 16 bit address space
 * (reasonable, and good for performance).

 * Eliminated the gradv() driver calls, as these were made obsolete by
 * recent changes to plmeta and plrender.  Also eliminated page clear commands
 * from grtidy() -- plend now calls grclr() and grtidy() explicitly.

 * Changes to support new color model, polylines, and event handler support
 * (interactive devices only).  Type flag added to device definition to
 * indicate file-based or interactive.

 * Fixed orientation operation in several files and standardized certain
 * startup operations. Fixed bugs in various drivers.

 * Dummy function added for each non-active driver to eliminate warnings.


Additional changes, listed by file: 

 * xwin.c:
 * Fixed background color setting, for color and grayscale monitors.
 * Eliminated all multiple extraneous exposures during uncover or resize
 * operations.  The X driver refresh/resize works perfectly now as far as I
 * can tell.  Added refresh & resize capability.  Also reorganized
 * substantially, to be more along the lines of the new Motif driver.  Code
 * is about 2-3x more logical and flexible now.  Some operations are slower
 * now (e.g. dashed lines) because of the large virtual address space used
 * now.  Changed cursor to cross-hair for more accurate location retrieval
 * Added crude support to have mouse button 2 return cursor postition to
 * stdout.  Swapped background/foreground colors for monochrome X output.


 * xterm.c:
 * Fixed some long-standing bugs in switching between text and graphics
 * windows (didn't affect xterms, but did affect certain vt100/tek
 * emulators).


 * ps.c:
 * Eliminated the (atend) specification for BoundingBox, since this isn't
 * recognized by some programs; instead enough space is left for it and a
 * rewind and subsequent write is done from ps_tidy().  Familying is no
 * longer directly supported by the PS driver as a result.  The output done
 * by the @end function was eliminated to reduce aggravation when viewing
 * with ghostview.


 * plmeta.c:
 * Now writes out page offsets to metafile for seeking forward/backward
 * by plrender.


 * ljii.c:
 * Actually works now.


 * plbuf.c:
 * Routines for writing to and reading from a plot buffer, as well as
 * recreating an entire plot.  The driver need merely specify
 * pls->plbuf_enable = 1 for it to be used (it must of course handle the
 * expose/resize events itself).


 * null.c:
 * Null device driver, for use when you want the graphics to disappear into
 * the bit bucket.  Always appears as the last device.


-----------------------------------
Example programs
-----------------------------------

 * Added #include <stdlib.h> since the code needs to exit(1) on some errors.
 * Changed all C examples to initialize with new plinit() function, also
 * calls to PLPLOT command-line args parser added.  


-----------------------------------
Miscellaneous
-----------------------------------

Support for VMS has been suspended (perhaps permanently), since we don't use
it anymore and it's too much of a pain to support.  If anyone fixes the
makefile and verifies the package does work, however, we will include your
fixes with the release version.
