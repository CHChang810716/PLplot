INDEX
(1) GNU Privacy Guard (gpg).
(2) A Note on Autotools.
(3) Creating a PLplot Release.


(1) GNU Privacy Guard (gpg)
A brief summary of developer relevant gpg commands, see also:
http://webber.dewinter.com/gnupg_howto/
man gpg

create a new key:
gpg --gen-key

list keys so that you can find the ID of the key you created:
gpg --list-keys

upload your (public) key to GPG key server so that others can obtain it to
verify your signature on the release tarball.
gpg --send-keys 6C58D1AC
(where 6C58D1AC is replaced with the appropriate value from the list-keys
command)


(2) A Note on Autotools

Our old autotools build system is now deprecated in favour of our new CMake
build system, but nevertheless our release tarball includes
autotools-generated files such as configure for those users who have not
made the switch yet. Since autotools users are completely dependent on the
autotools versions that you will use when running cf/bootstrap.sh (called by
make_tarball.sh below) you must have the correct autotools versions.
Currently these are:

autoconf (GNU Autoconf) 2.59
automake (GNU automake) 1.9.6
ltmain.sh (GNU libtool) 1.5.22


(3) Creating a PLplot Release

Update the docbook documentation to reflect any new drivers or new 
functionality that has been added to PLplot. Or alternatively, press those
who made the changes to update the documentation.


Update the README.release file.
  a. Append the README.release file from the last release onto the front of
     the OLD-README.release file. This is done to preserve a record of the
     significant changes between versions of PLplot.
  b. Update README.release file to reflect significant changes made between
     the current release and the last release.


Update cmake/module/plplot_version.cmake to reflect the current version. Also,
follow the instructions in this file for updating the SOVERSION, the minor
number and the patch number.


Update configure.ac to reflect the current version.


Using svn, commit the above changes & update your local working copy of
PLplot in case anyone else has made any last minute changes.


Verify that your computer has the right date and time using the command date.
The easiest way to make sure the time and date are correct is to do the 
following:
1. Install the debian ntpdate package.
2. Execute the command "/usr/sbin/ntpdate pool.ntp.org", which you will
   have to do as root.
This will immediately change your system clock. It is not recommended if you
have other apps running on your system that expect time to increase in a
smooth and linear fashion.

If you would like your computer to always have the correct time and date, you 
can install the debian ntp package, which must be properly configured to work.
Some notes about how to do this can be found in the PLplot mailing list 
archive. Look for the thread titled "PLplot 5.7.2 is now available" dated 
Jan 22/23 2007.


Change directory to your updated plplot working copy and enter the following
command: ./scripts/make_tarball.sh -c -i /a/install/directory 2>&1 | tee
build.log 

This script will take a several minutes to execute and will ask you for
your SourceForge password several times. The script does not otherwise
provide a lot of feedback so it will appear as if it is doing nothing for
long periods of time (at least on a slower computer). Be patient. When the
script is finished, the release tarball will be available in the directory
/tmp/plplot-dist-prep/

The "-c" option says to unpack the created tarball, build it with "cmake" and
"make", then test that result with ctest.

The "-i /a/install/directory" specifies the install prefix for the tarball
test configure and runs "make install" after cmake, make and ctest. When the
above command finishes executing you should go to this directory and verify
that the examples build and that plplot_test.sh executes without errors.


Install the documentation on the PLplot website:
cd /tmp/plplot-dist-prep/build_dir/doc/docbook/src
make www-install

NEEDS SVN CHANGE (create an svn tag by doing "svn copy" see the svn book).
Tag the cvs repository (go back to the cvs plplot directory):
cvs rtag -r cvs-tarball-<date>-<time> vX_X_X plplot

Where cvs-tarball-<date>-<time> was obtained earlier (you can also get
this from the build.log file).


Sign the release with your plplot Release Manager gpg key:
gpg --default-key YYYYYYYY --detach-sign --armor /tmp/plplot-dist-prep/plplot-X.X.X.tar.gz

A list of your GPG keys can be obtained using the command "gpg --list-keys".

NEEDS SVN CHANGE (use svn2cl [http://ch.tudelft.nl/~arthur/svn2cl/] instead
which has different syntax).
Prepare the ChangeLog file:
cvs2cl -l "-d< today" --stdout > ChangeLog.release

Edit ChangeLog.release to be the appropriate date range (i.e. only the
changes that were made since the last release should be included).


Upload the plplot-X.X.X.tar.gz.* files to the SF upload section

ftp upload.sourceforge.net #username is ftp, password is your e-mail address
cd incoming
bin
put plplot-X.X.X.tar.gz
put plplot-X.X.X.tar.gz.asc
quit

ftp does not provide any feedback re upload progress, so again, be patient.


Prepare a file release:

Login to sf.net.
Go to the PLplot project page.
Select file releases in the drop down admin menu at the top of the page.
Click add release at the bottom of the page.
Enter the new release name and click "create this release".

N.B. Release names guide our users to the release they want when they browse
our file release area.  The source release names should be of the form
"5.x.y Source" (e.g., "5.6.1 Source").  The reason for this suggestion is to
keep source release names distinct from binary release names.

In the file release GUI (Step1):
Browse to README.release in "Upload Release Notes".
Browse to ChangeLog.release in "Upload Change Log".
Select "preserve my pre-formatted text"
Click "Submit/Refresh"

In the file release GUI (Step2):
Select (and only select) the uploaded plplot files.
Click "Add Files and/or Refresh View"

In the edit file in release GUI (Step3):
For plplot-X.X.X.tar.gz select "any" for the processor type and "source.gz" for
the file type.
For plplot-X.X.X.tar.gz.asc select "any" for the processor type and
"other source" for the file type.

In the e-mail notification GUI (Step4):
Select that you are sure that you want to send an e-mail to those who are
monitoring the PLplot releases.

Prepare the release notes:
Return the PLplot project page
Select Admin -> News
Click on submit to create a new news item.
Load an old release news item in another browser window and use that as a 
template for creating your new release news item. Make sure that you get
the link to the release notes correct (none of the other links need to be
changed).
Click on submit.

Edit the platform-specific download pages to point to the new release:
Return the PLplot project page Select Admin -> File Releases -> Create /
Edit Download Page This page is a little confusing, but basically you have
the choice of editing any one of a number of different download platforms.
Pick the Default platform.  Then click on the pencil icons to change the
primary download file, and the corresponding armored ascii signature file.
(I would leave the references to the previous 5.6.1 files and the historical
cd release as is.) Then preview and once you are satisfied with the Default
platform, then save it.  After that, use the first menu box to change from
the Default platform to the Copy To function to copy the Default platform to
all the additional platforms (taken one at a time). N.B. I could not get any
of this functionality to work with my usual browser (konqueror) or an old
version of firefox.  But a modern version (Ubuntu Dapper) of firefox worked.

Update the project web page, including the examples:
edit www/index.html to include a link to the latest release.
edit www/examples/index.html.in to reflect the current release number.
svn commit the updated pages.

Create a directory containing a fresh svn checkout of PLplot, including the 
www scripts. Run the following commands in that directory:
./scripts/htdocs-gen_plot-examples.sh
cd www
make

NEEDS SVN CHANGE (to remove an svn tag use the svn delete command, see the
svn book).
Remove the temporary tags on the CVS archives:
./scripts/rm-cvs-tarball-tags.pl


DONE!!!

