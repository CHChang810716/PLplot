PLplot Release 5.13.0 (N.B. the wording below will be substantially
changed if the next release is a bugfix one, i.e., 5.13.1).

This is a release of the PLplot plotting package. It represents the
ongoing best efforts of the PLplot development community (roughly ???
commits since the last release) to improve this package, and it is the
only version of PLplot that we attempt to support.  Releases in the
5.x.y series should be available roughly two times per year.

Note that PLplot has been continuously developed since 1986 so it has
accumulated a lot of cruft since that time that we are now slowing
dealing with to improve the lot of both new users and new members of
the development team.  As a result virtually every PLplot release has
some backwards incompatibilities introduced to help clean it up so
please pay careful attention to the OFFICIAL NOTICES FOR USERS below
where we document such incompatibilities to make life easier
for those who have prior experience with older PLplot releases.

If you encounter a problem with this release that is not already
documented on our bug tracker, then please send bug reports to PLplot
developers via our mailing lists (preferred for initial discussion of
issues) at <http://sourceforge.net/p/plplot/mailman/>. If it turns out
no quick resolution is possible via mailing-list discussion, then the
issue should be placed on our bug tracker at
<http://sourceforge.net/p/plplot/bugs/>.

This software is primarily distributed under the LGPL.  See the
Copyright file for the licensing details.
________________________________________________________________

CONTENTS

1. OFFICIAL NOTICES FOR USERS

1.1 CMake version compatibility

2. Improvements relative to the previous release

2.1 Bug fixes
2.2 The Python binding and examples now work for both Python 2 and 3
2.3 Changed Fortran naming convention
2.4 Fixed many "space in prefix" issues

3. PLplot testing
________________________________________________________________

1. OFFICIAL NOTICES FOR USERS

1.1 CMake version compatibility

Our build system is implemented using CMake.  The minimum version of
CMake we allow is 3.6.2 on all platforms.  (And it is likely we will
bump that minimum version to at least 3.7.0 for our next release.)

This particular PLplot release has been comprehensively tested for
CMake versions 3.6.2 through 3.8.2 on a variety of platforms (see
<http://sourceforge.net/p/plplot/wiki/Testing_PLplot/#Testing%20Reports>).
So if your CMake version is <= 3.8.2 and satisfies the above minimum
CMake version requirement there is an excellent chance that our build
system will work well.  Furthermore, if you try later CMake versions
as they are released during the life of this PLplot release, our build
system might continue to work well because CMake has an excellent
reputation for preserving backwards compatibility.  But if you get
build-system trouble for versions of CMake greater than 3.8.2, the
first thing you should try is CMake-3.8.2 which has been well-tested
by PLplot builds.

________________________________________________________________

2. Improvements relative to the previous release

2.1 Bug fixes

The bug fixes in this release are noted in the ??? commit messages
collected in ChangeLog.release.

2.2 The Python binding and examples now work for both Python 2 and 3

We have generalized our previous Python 2 binding and examples so they
work now with both Python 2 and 3.  The minimum versions of Python we
support are 2.7 for Python 2 and 3.4 for Python 3.  Our build system
finds Python 3 by default, but if the user prefers Python 2, they
can arrange that by using the cmake option -DFORCE_PYTHON2=ON.

We arrived at the Python 3 default choice because I (AWI) was having
trouble with corruption of the Python-generated file
bindings/python/Plframe.pyc fairly often with Python 2 while that
corruption has never happened with Python 3.  (This result is exactly
consistent with a Python developer's prediction when consulted about
that corruption bug that it was unlikely to occur for Python 3 because
that version was better maintained in general than Python 2.)

After our build system finds the Python executable, it then
finds the Python
library and numpy versions that are consistent with whether that
Python executable corresponds to Python 2 or Python 3.

As a result of these changes we get perfect PostScript difference
reports between Python and C, i.e.,

python
  Missing examples            :
  Differing graphical output  :
  Missing stdout              :
  Differing stdout            :

for both Python 2 and 3.

2.3 Changed Fortran naming convention

Our Fortran binding and examples are written for the Fortran 2003
standard so the previous references in our build system, source code,
documentation, and even names of files and directories to "f95",
"F95", or Fortran 95 are all misnomers which we have addressed by
replacing essentially all occurrences of those with "fortran" or
"Fortran" as appropriate.  For example, our Fortran binding and
examples are now stored in the subdirectories bindings/fortran and
examples/fortran rather than bindings/f95 and examples/f95 that we
used before, and our build system enables our Fortran binding and
examples with the CMake variable ENABLE_fortran rather than the
ENABLE_f95 CMake variable that we used for this purpose before.

2.4 Fixed many "space in prefix" issues

As a result of these fixes we can execute

scripts/comprehensive_test.sh --prefix "../comprehensive_test_disposeable blank"

from a source tree whose prefix has a space in it without any errors on Linux.

This is a comprehensive test of all components of PLplot available on a fully loaded Linux platform
where the prefixes for the source, build, and install trees all contain spaces.  However, this
test does not test components of PLplot that are only available on other platforms, and does not
test the case where external libraries that PLplot depends on have spaces in their full pathnames.
So this "space" work is a large step in the right direction but is not complete.

________________________________________________________________

3. PLplot testing

Comprehensive tests of this release are documented in
<http://sourceforge.net/p/plplot/wiki/Testing_PLplot/#Testing%20Reports>
and
<https://sourceforge.net/p/plplot/wiki/Testing_PLplot/#Fortran%20Testing%20Reports>.
In addition, developers and users who have used the git master tip
version for all their plotting needs during this release cycle have
provided additional important testing of this release of PLplot.
________________________________________________________________
