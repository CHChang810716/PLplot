! Specify public Fortran types used by the examples.
! This file is automatically configured by CMake
!
! Note: these public types are only provided for backwards
! compatibility, and new applications do not need specific
! types at all (under the constraint that all real arguments
! for the f95 binding must have a consistent type for a particular
! call to a routine.)
module plplot_types

  ! Configured by CMake depending on the floating-point precision
  ! adopted for the core C PLplot library.
  integer, parameter :: plflt  = kind(@ONE_IN_DEFAULT_PRECISION@)

  ! The idea here is to match the Fortran 4-byte integer with
  ! the corresponding C types for PLINT (normally int32_t) and
  ! PLUNICODE (normally uint32_t).  According to websites I have
  ! read, Fortran has no unsigned integer types and
  ! using 4 here is safer than anything more complicated.
  integer, parameter :: plunicode  = 4
end module
