Oct 23, 1996
Geoffrey Furnish

How to build yourself a python with PLplot support
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

There are two possibilities.  You can try to build a dynamically
loadable python module, or you can modify the python build to include
the plplot module.  The former is what configure will try to do if you
use --enable-python (which is the default).  Currently this does not
work very well.  I have had some success with this plan on Linux, but
not on other Unices yet.  So, I suggest, and this document describes,
to modify the python and rebuild it.  Configure plplot with
--disable-python, and follow these steps.  This will be a little bit
of work, and you may have to think on your feet...

1) Build python in the usual way.  PLplot has been tested with:
	python 1.4b3
	NumPy-1.0a5
	NumPyLib-1.0a5
	Tcl 7.5
	Tk 4.1

   For least hassle, I suggest duplicating this slection of tool
   versions, and building python with both Numerical extension and Tk
   support. Note in particular that the Numerical Extension
   instructions are not quite fully detailed.  You may have to "help"
   it out a little.  You should be able to do:
	% python
	>>> from Numeric import *
   If you can do that, you are probably okay.

   Be sure to use the same --prefix when configure Tcl/Tk and Python,
   and install them all.  For example, use for all three packages:
	% configure --prefix=$HOME/test
	% make
	% make install

2) Configure PLplot against this toolset.  Use the same --prefix when
   configuring PLplot.  For example, 
	% configure --prefix=$HOME/test --with-double --disable-python
	% make
	% make install

3) Now you are ready to hack PLplot support into python, and rebuild
   it.  Start by copying the PLplot plmodule stuff into the Python
   build tree's Module directory.  That is the files:
	plplot/bindings/python/plmodule.c
	plplot/bindings/python/plmodule2.c
	plplot/bindings/python/plmodule.h

   And edit Python's Setup file to include plmodule.  For example, you
   could add the liine:

pl plmodule.c plmodule2.c -DDOUBLE -I$HOME/test/include $HOME/test/lib/libplplotdtk.a

   (Replace "$HOME/test" above with whatever prefix you gave when
   configuring python/tcl/tk/plplot).

   In order to get PLplot's plframe support, you'll also have to
   modify the tkinter module, and get PLplot's *.py Tk support files
   installed.  I suggest making a subdirectory Lib/plplot, and putting
   the plplot/bindings/python/*.py files into it.  Then edit Python's
   top level Makefile to include the plplot subdirectory in the list
   of things to install.  Search on "tkinter", and add plplot to that
   line.  If you haven't already, you'll probably want to add
   "Numeric" there as well.  Now you also need to add the plplot
   support files to the python path, just as is done for Tkinter, and
   as ought to be done for Numeric.  Look in Modules/Setup at how
   TKPATH is handled, and do the same thing for PLPLOTPATH, or
   suchlike. 

   Now you also need to change the Modules/Setup line for the _tkinter
   module:

_tkinter _tkinter.c -DWITH_PLFRAME -I$HOME/test/include -L$HOME/test/lib -ltk4.1 -ltcl7.5 -lX11

   And edit the actual _tkinter.c itself, so that it recognizes
   WITH_PLFRAME and will call the PLplot Tk initialization routine.
   For example, from _tkinter.c:


blah blah

   Now you can rebuild the python and reinstall:
	% make
	% make install

   At this point, you should be able to start python, import Numeric,
   import pl, and also check your sys.path to be sure that the plplot
   Tk support directory is included.

4) If you get through all that, you should be all set.  You could go
   to the python examples directory, soft link your new python in, and
   run pytkdemo.



If you want to dynamically load:

<No clear plan for this yet>

If you are willing to statically bind plplot into your python:

Build PLplot --with-double

Build a python, be sure to include numeric extension.

Copy plmodule.c plmodule2.c and plmodule.h to python_root/Modules

Edit Setup:

add a line:

pl plmodule.c plmodule2.c -DDOUBLE -I/home/furnish/devel/plplot/tmp /home/furnish/devel/plplot/tmp2/libplplotdtk.a

Make a directory python_rro/Lib/plplot

copy bindings/python/*.py to python_rro/Lib/plplot

Fix the python path in Setup to include the plplot .py directory.

Fix the line for building _tkinter as follows:

_tkinter _tkinter.c -DWITH_PLFRAME -I/home/furnish/j2/include -L/home/furnish/j2/lib -ltk4.1 -ltcl7.5 -L/usr/X11R6/lib -lX11

edit _tkinter so it runs Pltk_Init().

make

make install

python :-).
