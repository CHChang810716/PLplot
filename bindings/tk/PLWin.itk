# PLWin.itk
# Geoffrey Furnish
# 18 September 1995
#
# @> [incr Tk] revamp of the old itcl PLWin class.
#
# $Id$
#
# $Log$
# Revision 1.3  1998/11/18 06:03:44  furnish
# Mindless hacks to convert to Itcl 3.x.
#
# Revision 1.2  1995/10/26  07:12:03  furnish
# Hacked in a very hacky hack which seems to bring back the plxframe
# menus.  Not much testing done yet though.
#
# Revision 1.1  1995/09/18  20:17:08  furnish
# New [incr Tk] reincarnations of the old versions.  Unfortunately,
# PLXWin doesn't work quite right.  All that crudy Tcl code which
# expects to be able to much with widgets all over the widget tree, will
# have to be fixed.
#
# Revision 1.11  1995/07/27  21:17:38  furnish
# Some manually generated entry points got neglected in the prior update.
#
# Revision 1.10  1995/07/19  18:02:16  furnish
# Completely overhauled.  Now mirrors all Tcl API commands which make
# any sense on a widget, 83 in all, plus a "cmd" proxy so that code
# written for a bare Tk plframe can work unmodified on a PLWin.
#
# Revision 1.9  1995/07/04  21:53:43  furnish
# plcont and plshade now have long, complex argument lists.  Moreover,
# since they support defaulting of arguments, not all args even have to
# be specified.  So we convert to using the [incr Tcl] args metaphor so
# that we don't have to worry about exactly how these shadow methods
# were called.  Note that this object needs major fleshing out now that
# the entire Tcl API is implemented.
#
# Revision 1.8  1995/06/09  22:48:07  mjl
# Lots of fleshing out.  Now supports every Tcl API call available so far.
#
# Revision 1.7  1994/10/10  19:44:45  furnish
# Stub method for plshade.
#
# Revision 1.6  1994/10/10  17:22:32  furnish
# New method, but need many more.
#
# Revision 1.5  1994/06/16  18:33:51  mjl
# Modified argument lists for plline and plpoin methods to use matrix names.
#
# Revision 1.4  1994/06/10  20:46:58  furnish
# Mirror plpoin.  More of the API still needs doing.
#
# Revision 1.3  1994/06/09  20:07:13  mjl
# Cleaned up and switched to plplot direct commands embedded in plframe
# widget (through "<widget> cmd <command> <args>" syntax).
#
# Revision 1.2  1994/05/11  08:07:30  furnish
# Debugging.  Needs to do own toprow for some reason.
#
# Revision 1.1  1994/05/09  17:59:19  furnish
# The new [incr Tcl] interface to the PLplot Tcl extensions.
#
###############################################################################

itcl::class PLWin {
    inherit itk::Widget

    protected variable hull
#    protected variable oldthis

    protected variable width 20c
    protected variable height 15c

    protected variable plwin

    constructor {args} {
	set hull $itk_component(hull)
#	set oldthis [info namespace tail $this]

	eval itk_initialize $args

#	itk_component add plwin {
#	    eval plframe $hull.plwin $args
#	    pack $hull.plwin
#	} {
#	    keep -width -height -background
#	    rename -background -plwinbg plwinbg Background
#	}
#	set plwin $itk_component(plwin)

	uplevel \#0 plframe $hull.plwin $args -width $width -height $height
	set plwin $hull.plwin
	pack $plwin -side bottom -expand 1 -fill both
    }

    itk_option define -width width Width 20c {
	set width $itk_option(-width)
    }

    itk_option define -height height Height 15c {
	set height $itk_option(-height)
    }

# We add this one just so that user code can be oblivious as to
# whether or not it is driving a PLWin object, or just a plframe.  In
# other words, Tcl code which works fine on a plframe or the "loopback
# widget", can work unmodified with the PLWin [incr Tcl] object.

    method cmd {args} {
	eval $plwin cmd $args
    }

# A useful convenience which is similar to what is done in C.

    method plcol {args} {
        eval $plwin cmd plcol0 $args
    }

# Command which aren't generated by pltclgen, and so aren't done by
# plitclgen either.

    method plcont {args} {
	eval $plwin cmd plcont $args
    }

    method plshade {args} {
	eval $plwin cmd plshade $args
    }

# From here on down, we just insert what comes out of plitclgen (file
# gen.itcl).  If you don't like the handling of one of these for some
# reason, then add the method name to the ignore list in plitclgen,
# and provide an explicit coding, ABOVE THIS LINE.

    method pladv {args} {
        eval $plwin cmd pladv $args
    }

    method plaxes {args} {
        eval $plwin cmd plaxes $args
    }

    method plbin {args} {
        eval $plwin cmd plbin $args
    }

    method plbop {args} {
        eval $plwin cmd plbop $args
    }

    method plbox {args} {
        eval $plwin cmd plbox $args
    }

    method plbox3 {args} {
        eval $plwin cmd plbox3 $args
    }

    method plcol0 {args} {
        eval $plwin cmd plcol0 $args
    }

    method plcol1 {args} {
        eval $plwin cmd plcol1 $args
    }

    method pldid2pc {args} {
        eval $plwin cmd pldid2pc $args
    }

    method pldip2dc {args} {
        eval $plwin cmd pldip2dc $args
    }

    method plenv {args} {
        eval $plwin cmd plenv $args
    }

    method pleop {args} {
        eval $plwin cmd pleop $args
    }

    method plerrx {args} {
        eval $plwin cmd plerrx $args
    }

    method plerry {args} {
        eval $plwin cmd plerry $args
    }

    method plfill {args} {
        eval $plwin cmd plfill $args
    }

    method plfont {args} {
        eval $plwin cmd plfont $args
    }

    method plfontld {args} {
        eval $plwin cmd plfontld $args
    }

    method plgchr {args} {
        eval $plwin cmd plgchr $args
    }

    method plgcol0 {args} {
        eval $plwin cmd plgcol0 $args
    }

    method plgdidev {args} {
        eval $plwin cmd plgdidev $args
    }

    method plgdiori {args} {
        eval $plwin cmd plgdiori $args
    }

    method plgdiplt {args} {
        eval $plwin cmd plgdiplt $args
    }

    method plgpage {args} {
        eval $plwin cmd plgpage $args
    }

    method plgra {args} {
        eval $plwin cmd plgra $args
    }

    method plgspa {args} {
        eval $plwin cmd plgspa $args
    }

    method plgstrm {args} {
        eval $plwin cmd plgstrm $args
    }

    method plgxax {args} {
        eval $plwin cmd plgxax $args
    }

    method plgyax {args} {
        eval $plwin cmd plgyax $args
    }

    method plgzax {args} {
        eval $plwin cmd plgzax $args
    }

    method plhist {args} {
        eval $plwin cmd plhist $args
    }

    method plhls {args} {
        eval $plwin cmd plhls $args
    }

    method pljoin {args} {
        eval $plwin cmd pljoin $args
    }

    method pllab {args} {
        eval $plwin cmd pllab $args
    }

    method plline {args} {
        eval $plwin cmd plline $args
    }

    method plline3 {args} {
        eval $plwin cmd plline3 $args
    }

    method pllsty {args} {
        eval $plwin cmd pllsty $args
    }

    method plmtex {args} {
        eval $plwin cmd plmtex $args
    }

    method plpat {args} {
        eval $plwin cmd plpat $args
    }

    method plpoin {args} {
        eval $plwin cmd plpoin $args
    }

    method plpoin3 {args} {
        eval $plwin cmd plpoin3 $args
    }

    method plpoly3 {args} {
        eval $plwin cmd plpoly3 $args
    }

    method plprec {args} {
        eval $plwin cmd plprec $args
    }

    method plpsty {args} {
        eval $plwin cmd plpsty $args
    }

    method plptex {args} {
        eval $plwin cmd plptex $args
    }

    method plreplot {args} {
        eval $plwin cmd plreplot $args
    }

    method plrgb {args} {
        eval $plwin cmd plrgb $args
    }

    method plrgb1 {args} {
        eval $plwin cmd plrgb1 $args
    }

    method plschr {args} {
        eval $plwin cmd plschr $args
    }

    method plscmap0n {args} {
        eval $plwin cmd plscmap0n $args
    }

    method plscmap1n {args} {
        eval $plwin cmd plscmap1n $args
    }

    method plscmap0 {args} {
        eval $plwin cmd plscmap0 $args
    }

    method plscmap1 {args} {
        eval $plwin cmd plscmap1 $args
    }

    method plscmap1l {args} {
        eval $plwin cmd plscmap1l $args
    }

    method plscol0 {args} {
        eval $plwin cmd plscol0 $args
    }

    method plscolbg {args} {
        eval $plwin cmd plscolbg $args
    }

    method plscolor {args} {
        eval $plwin cmd plscolor $args
    }

    method plsdidev {args} {
        eval $plwin cmd plsdidev $args
    }

    method plsdimap {args} {
        eval $plwin cmd plsdimap $args
    }

    method plsdiori {args} {
        eval $plwin cmd plsdiori $args
    }

    method plsdiplt {args} {
        eval $plwin cmd plsdiplt $args
    }

    method plsdiplz {args} {
        eval $plwin cmd plsdiplz $args
    }

    method plsmaj {args} {
        eval $plwin cmd plsmaj $args
    }

    method plsmin {args} {
        eval $plwin cmd plsmin $args
    }

    method plsori {args} {
        eval $plwin cmd plsori $args
    }

    method plspage {args} {
        eval $plwin cmd plspage $args
    }

    method plspause {args} {
        eval $plwin cmd plspause $args
    }

    method plssub {args} {
        eval $plwin cmd plssub $args
    }

    method plssym {args} {
        eval $plwin cmd plssym $args
    }

    method plstyl {args} {
        eval $plwin cmd plstyl $args
    }

    method plsvpa {args} {
        eval $plwin cmd plsvpa $args
    }

    method plsxax {args} {
        eval $plwin cmd plsxax $args
    }

    method plsxwin {args} {
        eval $plwin cmd plsxwin $args
    }

    method plsyax {args} {
        eval $plwin cmd plsyax $args
    }

    method plsym {args} {
        eval $plwin cmd plsym $args
    }

    method plszax {args} {
        eval $plwin cmd plszax $args
    }

    method pltext {args} {
        eval $plwin cmd pltext $args
    }

    method plvasp {args} {
        eval $plwin cmd plvasp $args
    }

    method plvpas {args} {
        eval $plwin cmd plvpas $args
    }

    method plvpor {args} {
        eval $plwin cmd plvpor $args
    }

    method plvsta {args} {
        eval $plwin cmd plvsta $args
    }

    method plw3d {args} {
        eval $plwin cmd plw3d $args
    }

    method plwid {args} {
        eval $plwin cmd plwid $args
    }

    method plwind {args} {
        eval $plwin cmd plwind $args
    }
}
