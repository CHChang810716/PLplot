dnl cf/freetype.ac for PLplot  -*- autoconf -*-
dnl
dnl ------------------------------------------------------------------------
dnl Find freetype 2 library and header required for enabling
dnl driver options for handling the fonts with the freetype library.
dnl Written by Alan W. Irwin.
dnl ------------------------------------------------------------------------
dnl
dnl Copyright (C) 1994, 2004  Maurice LeBrun
dnl Copyright (C) 2002, 2003, 2004  Rafael Laboissiere
dnl Copyright (C) 2002, 2003, 2004  Alan W. Irwin
dnl Copyright (C) 2003, 2004  Joao Cardoso
dnl Copyright (C) 2004  Andrew Ross
dnl
dnl This file is part of PLplot.
dnl
dnl PLplot is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU Library General Public License as published
dnl by the Free Software Foundation; version 2 of the License.
dnl
dnl PLplot is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU Library General Public License for more details.
dnl
dnl You should have received a copy of the GNU Library General Public License
dnl along with the file PLplot; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA

PL_ARG_WITH(freetype,
  [enable driver options for using freetype library for fonts],
  yes)

PL_ARG_WITH(freetype2-incdir, [User-specified path to the libfreetype2 header files], [])
if test "$with_freetype" = "yes"; then
    if test -z "$with_freetype2_incdir"; then
        AC_MSG_CHECKING(for freetype library header files)
        AC_PREPROC_IFELSE([#include <freetype/config/ftheader.h>],
	                  [ with_freetype2_incdir=default
			    AC_MSG_RESULT([found in $with_freetype2_incdir]) ], [
        incdirs="\
        /usr/include/freetype2 \
        /usr/local/include/freetype2"

        for dir in $incdirs; do
            if test -r "$dir/freetype/config/ftheader.h"; then
               with_freetype2_incdir="$dir"
               break
            fi
        done
        if test -z "$with_freetype2_incdir"; then
            AC_MSG_RESULT(not found)
	    AC_MSG_WARN([freetype header files not found,])
	    AC_MSG_WARN([setting with_freetype=no])
            with_freetype2_incdir=default
            with_freetype=no
	else
            AC_MSG_RESULT([found in $with_freetype2_incdir])
        fi ])
    else
    	AC_MSG_NOTICE("User-specified path to the libfreetype2 header files is $with_freetype2_incdir")
    fi
    if test "$with_freetype2_incdir" = "/usr/include"; then
        with_freetype2_incdir=default
    fi
    FREETYPEINCCMD=""
    FREETYPEINCPATH=""
    PL_ADD_TO_INCS($with_freetype2_incdir, FREETYPEINCCMD, FREETYPEINCPATH)
fi

PL_ARG_WITH(freetype2-libdir, [User-specified path to libfreetype2], [])
if test "$with_freetype" = "yes"; then
    if test -z "$with_freetype2_libdir"; then
        AC_CHECK_LIB(freetype, main, [ with_freetype2_libdir=default ], [
        libdirs="\
        /usr/lib \
        /usr/local/lib"

        for dir in $libdirs; do
            if test -r "$dir/libfreetype.so" -o -r "$dir/libfreetype.a"; then
                with_freetype2_libdir="$dir"
                break
            fi
        done
        if test -z "$with_freetype2_libdir"; then
	    AC_MSG_WARN([freetype library not found, setting with_freetype=no])
            with_freetype2_libdir=default
            with_freetype=no
        fi ])
    else
    	AC_MSG_NOTICE("User-specified path to libfreetype2 is $with_freetype2_libdir")
    fi
    if test "$with_freetype2_libdir" = "/usr/lib"; then
        with_freetype2_libdir=default
    fi
    FREETYPELIBSTR=-lfreetype
    FREETYPELIBCMD=""
    FREETYPELIBPATH=""
    PL_ADD_TO_LIBS($with_freetype2_libdir, $FREETYPELIBSTR, FREETYPELIBCMD, FREETYPELIBPATH)
fi

PL_ARG_WITH(freefont,
  [use free fonts rather than MS fonts],
  yes)
PL_ARG_WITH(freetype-font-dir,
  [user-specified directory for freetype fonts],
  [])
PL_ARG_WITH(freetype-normal-font,
  [user-specified normal freetype font],
  [])
PL_ARG_WITH(freetype-roman-font,
  [user-specified roman freetype font],
  [])
PL_ARG_WITH(freetype-italic-font,
  [user-specified italic freetype font],
  [])
PL_ARG_WITH(freetype-script-font,
  [user-specified script freetype font],
  [])
PL_ARG_WITH(freetype-symbol-font,
  [user-specified symbol freetype font],
  [])

# Check which fonts to use and warn if they are not found
if test "$with_freetype" = "yes"; then
    AC_MSG_CHECKING(for freetype fonts)
    if test -z "$with_freetype_normal_font" ; then
        if test "$with_freefont" = "yes" ; then
            freetype_normal="FreeSans.ttf"
	else
	    freetype_normal="Arial.ttf"
	fi
    else
        freetype_normal="$with_freetype_normal_font"
    fi
    if test -z "$with_freetype_roman_font" ; then
        if test "$with_freefont" = "yes" ; then
            freetype_roman="FreeSerif.ttf"
	else
	    freetype_roman="Times_New_Roman.ttf"
	fi
    else
        freetype_roman="$with_freetype_roman_font"
    fi
    if test -z "$with_freetype_italic_font" ; then
        if test "$with_freefont" = "yes" ; then
            freetype_italic="FreeSerifItalic.ttf"
	else
	    freetype_italic="Times_New_Roman_Italic.ttf"
	fi
    else
        freetype_italic="$with_freetype_roman_font"
    fi
    if test -z "$with_freetype_script_font" ; then
        if test "$with_freefont" = "yes" ; then
            freetype_script="FreeSerif.ttf"
	else
	    freetype_script="Comic_Sans_MS.ttf"
	fi
    else
        freetype_script="$with_freetype_script_font"
    fi
    if test -z "$with_freetype_symbol_font" ; then
        if test "$with_freefont" = "yes" ; then
            freetype_symbol="FreeSans.ttf"
	else
	    freetype_symbol="Arial.ttf"
	fi
    else
        freetype_symbol="$with_freetype_symbol_font"
    fi
	    
    if test -z "$with_freetype_font_dir" ; then
        if test "$with_freefont" = "yes"; then
            fontdirs="/usr/share/fonts/truetype/freefont" 
	else
            fontdirs="\
      	        /usr/share/fonts/truetype \
    	        /usr/share/fonts/truetype/msttcorefonts"
	fi
    else
       fontdirs="$with_freetype_font_dir"
    fi
    
    for dir in $fontdirs ; do
        if test -e "$dir/$freetype_normal"; then
	     freetype_font_dir="$dir"
             break
        fi
    done
    if test -z "$freetype_font_dir" ; then
        AC_MSG_WARN(["freetype fonts not found - please check fonts",])
	if test "$with_freefont" = "yes" ; then
	    freetype_font_dir="/usr/share/fonts/truetype/freefont"
        else 
	    freetype_font_dir="/usr/share/fonts/truetype/msttcorefonts"
        fi 
    else
        AC_MSG_RESULT([fonts found in $freetype_font_dir])
    fi
    AC_DEFINE_UNQUOTED(PL_FREETYPE_FONT_DIR, "$freetype_font_dir/", [Directory containing freetype fonts])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_NORMAL, "$freetype_normal", [Normal freetype font])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_ROMAN, "$freetype_roman", [Roman freetype font])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_ITALIC, "$freetype_italic", [Italic freetype font])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SCRIPT, "$freetype_script", [Script freetype font])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SYMBOL, "$freetype_symbol", [Symbol freetype font])
fi

if test "$with_freetype" = "yes"; then
    AC_DEFINE(HAVE_FREETYPE, [], [Define if [freetype] is available])
fi
AC_SUBST(FREETYPEINCCMD)
AC_SUBST(FREETYPELIBCMD)

AC_SUBST(PL_FREETYPE_NORMAL)
AC_SUBST(PL_FREETYPE_ROMAN)
AC_SUBST(PL_FREETYPE_ITALIC)
AC_SUBST(PL_FREETYPE_SCRIPT)
AC_SUBST(PL_FREETYPE_SYMBOL)
