# -----------------------------------------------------------------------
# $Id$
#
# Maurice LeBrun
# IFS, University of Texas at Austin
# 14-Jul-1994
#
# Make assignments and targets for installation under Unix.
#
# It is recommended that you use a dedicated directory such as
# /usr/local/plplot (read the FAQ on this topic).  The install directory
# will be created if necessary, as will all required subdirectories.
#
# If support for <pkg> is not included, $(<PKG>_INSTALL) will be null.
#
# If a shared library was built, rebuild executables before installing.
# -----------------------------------------------------------------------

install: install_lib install_demos install_utils \
	$(F77_INSTALL) \
	$(PYTHON_INSTALL) \
	$(TCL_INSTALL) \
	$(TK_INSTALL) \
	$(CXX_INSTALL)

install_lib:
	-if test ! -d $(INCLUDE_DIR); then mkdir -p $(INCLUDE_DIR); fi
	-if test ! -d $(LIB_DIR); then mkdir -p $(LIB_DIR); fi
	-if test ! -d $(DOC_DIR); then mkdir -p $(DOC_DIR); fi
	-if test ! -d $(BIN_DIR); then mkdir -p $(BIN_DIR); fi
	-if test ! -d $(INFO_DIR); then mkdir -p $(INFO_DIR); fi
	-cd $(top_srcdir)/lib; cp *.fnt *.map $(LIB_DIR)
	-cp $(PLLIB_BASE)* $(LIB_DIR); \
	 for file in $(PLLIB_BASE)*; do $(RANLIB) $(LIB_DIR)/$$file; done
	-cd $(top_srcdir); \
	 cp README NEWS CHANGES Copyright COPYING.LIB FAQ ToDo \
	    mklinks $(DOC_DIR)
	-if test ! -f $(DOC_DIR)/README.local; then \
	 cp $(top_srcdir)/doc/README.local $(DOC_DIR); fi
	-cp $(top_srcdir)/doc/*.info $(INFO_DIR)
	-cd $(top_srcdir)/scripts; cp pl* $(BIN_DIR)
	-cd $(top_srcdir)/include; \
	 cp plplotP.h plplot.h plxwd.h plevent.h plstrm.h pdf.h \
	    $(INCLUDE_DIR)

install_demos:
	-if test ! -d $(DEMOS_DIR); then mkdir -p $(DEMOS_DIR); fi
	-if test ! -d $(DEMOS_DIR)/c; then mkdir -p $(DEMOS_DIR)/c; fi
	-cp Makedemo $(DEMOS_DIR)/Makefile
	-$(LN) $(DEMOS_DIR)/Makefile $(DEMOS_DIR)/c
	-cd $(top_srcdir)/examples/c; cp * $(DEMOS_DIR)/c

install_utils:
	-if test $(SHARED) = 1; then \
	 $(LDC) $(LDC_FLAGS) plrender$O $(LIB_INSTALL) \
		-o plrender$E $(LDC_LIBS); \
	 fi
	-if test $(SHARED) = 1; then \
	 $(LDC) $(LDC_FLAGS) pltek$O $(LIB_INSTALL) \
		-o pltek$E; \
	 fi
	-strip plrender$E pltek$E
	-cp plrender$E pltek$E $(BIN_DIR)

install_python:
	 $(LDSHARED) $(LDC_FLAGS) plmodule$O $(LIB_INSTALL) \
		-o $(PYTHON_EXE) $(LDC_LIBS)
	-if test ! -d $(PYTHON_DIR); then mkdir -p $(PYTHON_DIR); fi
	-cp $(PYTHON_EXE) $(PYTHON_DIR)
	-if test ! -d $(DEMOS_DIR)/python; then mkdir -p $(DEMOS_DIR)/python; fi
	-cd $(top_srcdir)/examples/python; cp * $(DEMOS_DIR)/python

install_f77:
	-if test ! -d $(DEMOS_DIR)/f77; then mkdir -p $(DEMOS_DIR)/f77; fi
	-$(LN) $(DEMOS_DIR)/Makefile $(DEMOS_DIR)/f77
	-cd $(top_srcdir)/examples/f77; cp * $(DEMOS_DIR)/f77

install_tcl:
	-if test $(SHARED) = 1; then \
	 $(LDC) $(LDC_FLAGS) pltcl$O $(LIB_INSTALL) \
		-o pltcl$E $(LDC_LIBS); \
	 fi
	-strip pltcl$E
	-cp pltcl$E $(BIN_DIR)
	-cd $(top_srcdir)/bindings/tcl; \
	 cp pltcl.h tclMatrix.h $(INCLUDE_DIR)
	-if test ! -d $(DEMOS_DIR)/tcl; then mkdir -p $(DEMOS_DIR)/tcl; fi
	-cd $(top_srcdir)/examples/tcl; cp * $(DEMOS_DIR)/tcl

install_tk:
	-if test ! -d $(TCL_DIR); then mkdir -p $(TCL_DIR); fi
	-if test $(SHARED) = 1; then \
	 $(LDC) $(LDC_FLAGS) plserver$O $(LIB_INSTALL) \
		-o plserver$E $(LDC_LIBS); \
	 fi
	-strip plserver$E
	-cp plserver$E $(BIN_DIR)
	-cd $(top_srcdir)/bindings/tk; \
	 cp pltk.h $(INCLUDE_DIR); \
	 cp *.tcl *.pal tclIndex $(TCL_DIR)
	-if test ! -d $(DEMOS_DIR)/tk; then mkdir -p $(DEMOS_DIR)/tk; fi
	-$(LN) $(DEMOS_DIR)/Makefile $(DEMOS_DIR)/tk
	-cd $(top_srcdir)/examples/tk; cp * $(DEMOS_DIR)/tk
	-$(LN) $(DEMOS_DIR)/tcl/x??.tcl $(DEMOS_DIR)/tk

install_cxx:
	-cd $(top_srcdir)/bindings/c++; cp plstream.h $(INCLUDE_DIR)
	-if test ! -d $(DEMOS_DIR)/cxx; then mkdir -p $(DEMOS_DIR)/cxx; fi
	-$(LN) $(DEMOS_DIR)/Makefile $(DEMOS_DIR)/cxx
	-cd $(top_srcdir)/examples/cxx; cp * $(DEMOS_DIR)/cxx
