# -*-makefile-*--------------------------------------------------------------
# $Id$
#
# Geoffrey Furnish
# IFS, University of Texas at Austin
# 6-Jun-1995
#
# PLplot build rules for archive and shared library under Linux.
# Based on prior work by Maurice.
# -----------------------------------------------------------------------------

# Need to figure this out in a more conclusive manner.  Someone out
# there might be using icc or pgicc or something.
with_gcc := yes

ifeq ($(with_gcc),yes)
# Need to figure out if this is GCC version 3 or not.
gcc_major := $(shell gcc -v 2>&1 | grep version | \
			cut '-d ' -f 3 | cut -d. -f 1 )
gcc_v3 := $(shell expr $(gcc_major) \>= 3)

ifeq ($(gcc_v3),1)
define compile-c-and-emit-deps
$(CC) $(1) -MD -MF $(3:$(2).o=.d.$(2)) -MP -c $(2).c -o $(3)
endef
automatic_deps := yes
else
define compile-c-and-emit-deps
$(CC) $(1) -c $(2).c -o $(3)
$(CC) $(1) -MM $(2).c | \
	 sed -e 's|$(2)$O:|$@:|g' > $(@:$(2)$O=.d.$(2)) 
endef
automatic_deps := yes
endif

else
# Define the simple forms.
endif

# -----------------------------------------------------------------------------
# Set up inference rules appropriate for building both archive and shared
# libraries. 
# -----------------------------------------------------------------------------

.cc.o:
	$(CXX) $(CXX_FLAGS) $<

.c.o:
	$(call compile-c-and-emit-deps,$(CC_FLAGS),$*,$@)

.f.o:
	$(F77) $(F77_FLAGS) $<

shared/%.o : %.f
	$(F77) $(SHLIB_F77FLAGS) $(F77_FLAGS) $*.f -o $@

shared/%.o : %.c
	$(call compile-c-and-emit-deps,$(SHLIB_CCFLAGS) $(CC_FLAGS),$*,$@)

shared/%.o : %.cc
	$(CXX) $(SHLIB_CXXFLAGS) $(CXX_FLAGS) $*.cc -o $@

# -----------------------------------------------------------------------------
# Library dependency list and targets
# -----------------------------------------------------------------------------

# Redefine CP so we preserve symlinks on library installs.
CP	= cp -p -a

SOVERSION	= @SOVERSION@

PLLIB_SO	= $(PLLIB_PATH)$(PLLIB_BASE)$(LIB_TAG).so.$(SOVERSION)
SONAME		= $(PLLIB_BASE)$(LIB_TAG).so.$(MAJOR_VERSION)
LINKNAME	= $(PLLIB_BASE)$(LIB_TAG).so

MATLIB_SO	= $(PLLIB_PATH)$(MATLIB_BASE)$(LIB_TAG).so.$(SOVERSION)
MAT_SONAME     	= $(MATLIB_BASE)$(LIB_TAG).so.$(MAJOR_VERSION)
MAT_LINKNAME   	= $(MATLIB_BASE)$(LIB_TAG).so

TCLLIB_SO	= $(PLLIB_PATH)$(TCLLIB_BASE)$(LIB_TAG).so.$(SOVERSION)
TCL_SONAME     	= $(TCLLIB_BASE)$(LIB_TAG).so.$(MAJOR_VERSION)
TCL_LINKNAME   	= $(TCLLIB_BASE)$(LIB_TAG).so

CXXLIB_SO	= $(PLLIB_PATH)$(CXXLIB_BASE)$(LIB_TAG).so.$(SOVERSION)
CXX_SONAME	= $(CXXLIB_BASE)$(LIB_TAG).so.$(MAJOR_VERSION)
CXX_LINKNAME	= $(CXXLIB_BASE)$(LIB_TAG).so

# These need to use the BLD_ prefix so they can be left out.
MATLIBS = $(BLD_MATLIB_AR) $(BLD_MATLIB_SO)
TCLLIBS = $(BLD_TCLLIB_AR) $(BLD_TCLLIB_SO)
CXXLIBS = $(BLD_CXXLIB_AR) $(BLD_CXXLIB_SO)

PLLIBS = $(PLLIB_AR) $(PLLIB_SO) $(MATLIBS) $(TCLLIBS) $(CXXLIBS)

PLLINKS = $(LINKNAME) $(SONAME) \
	  $(MAT_SONAME) $(MAT_LINKNAME) \
	  $(TCL_SONAME) $(TCL_LINKNAME) \
	  $(CXX_SONAME) $(CXX_LINKNAME)

libs:	$(PLLIBS)

$(PLLIB_AR):	$(LIB_OBJS)
	-$(RM) $(PLLIB_AR)
	@echo ""; echo "Building archive library"; echo ""
	$(ARLIB_BUILD) $(PLLIB_AR) $(LIB_OBJS)
	$(RANLIB) $(PLLIB_AR)
	@echo ""

$(MATLIB_AR): $(MAT_OBJS)
	-$(RM) $(MATLIB_AR)
	@echo ""; echo "Building archive library"; echo ""
	$(ARLIB_BUILD) $(MATLIB_AR) $(MAT_OBJS)
	$(RANLIB) $(MATLIB_AR)
	@echo ""

$(TCLLIB_AR): $(TCL_OBJS)
	-$(RM) $(TCLLIB_AR)
	@echo ""; echo "Building archive library"; echo ""
	$(ARLIB_BUILD) $(TCLLIB_AR) $(TCL_OBJS)
	$(RANLIB) $(TCLLIB_AR)
	@echo ""

$(CXXLIB_AR): $(CXX_OBJS)
	-$(RM) $(CXXLIB_AR)
	@echo ""; echo "Building archive library"; echo ""
	$(ARLIB_BUILD_CXX) $(CXXLIB_AR) $(CXX_OBJS)
	$(RANLIB) $(CXXLIB_AR)
	@echo ""

# The following rules based on discussion in
# http://www.linuxdoc.org/HOWTO/Program-Library-HOWTO/shared-libraries.html

$(PLLIB_SO):	$(LIB_OBJS:%=shared/%) $(PLLIB_LIBRARIES)
	-$(RM) $(PLLIB_SO)
	@echo ""; echo "Building shared library"; echo ""
	cd shared; \
	$(SHLIB_BUILD) ../$(PLLIB_SO) \
		-Wl,-soname -Wl,$(SONAME) \
		$(LIB_OBJS) -L.. $(PLLIB_LINKS) @PLF77LIBS@
	ln -sf $(PLLIB_SO) $(SONAME)
	ln -sf $(SONAME) $(LINKNAME)
	@echo ""


$(MATLIB_SO): $(MAT_OBJS:%=shared/%)
	-$(RM) $(MATLIB_SO)
	@echo ""; echo "Building shared library"; echo ""
	cd shared; \
	$(SHLIB_BUILD) ../$(MATLIB_SO) \
		-Wl,-soname -Wl,$(MAT_SONAME) \
		$(MAT_OBJS)
	ln -sf $(MATLIB_SO) $(MAT_SONAME)
	ln -sf $(MAT_SONAME) $(MAT_LINKNAME)
	@echo ""

$(TCLLIB_SO): $(TCL_OBJS:%=shared/%) $(XWINDRV_SO) $(TKWINDRV_SO)
	-$(RM) $(TCLLIB_SO)
	@echo ""; echo "Building shared library"; echo ""
	cd shared; \
	$(SHLIB_BUILD) ../$(TCLLIB_SO) \
		-Wl,-soname -Wl,$(TCL_SONAME) \
		$(TCL_OBJS) @PLTCLLIBS@ -L.. $(XWINDRV_LINK) $(TKWINDRV_LINK)
	ln -sf $(TCLLIB_SO) $(TCL_SONAME)
	ln -sf $(TCL_SONAME) $(TCL_LINKNAME)
	@echo ""

$(CXXLIB_SO): $(CXX_OBJS:%=shared/%)
	-$(RM) $(CXXLIB_SO)
	@echo ""; echo "Building shared library"; echo ""
	cd shared; \
	$(SHLIB_BUILD_CXX) ../$(CXXLIB_SO) \
		$(SONAME_FLAGS)$(CXX_SONAME) \
		$(CXX_OBJS)
	ln -sf $(CXXLIB_SO) $(CXX_SONAME)
	ln -sf $(CXX_SONAME) $(CXX_LINKNAME)
	@echo ""

