#!/usr/bin/env python

from distutils.core import setup, Extension

# Hacked special plplot logic at start of setup.py to sort out different
# behaviour for tmp location (special *last* option of --flat) and install 
# location (special *last* option of relocatable PREFIX).
import sys
if sys.argv[-1] == "--flat":
    del sys.argv[-1]
    import os
    include_directory = os.getcwd()
    library_directory = include_directory
else:
    # We use last argument (which is set to $(PREFIX) in Makefile when
    # building for install) because it is relocatable (which allows
    # ordinary users to build the rpm's and deb's) while the
    # configurable "prefix" refers just to the final install location.
    include_directory = sys.argv[-1] + "/@INCLUDE_DIR@/.."
    library_directory = sys.argv[-1] + "/@LIB_DIR@"
    del sys.argv[-1]

# Some systems do not accept -rpath option to ld in which case the next
# two variables will be empty strings
RPATH = "@RPATH@"
INSTALL_RPATH = "@INSTALL_RPATH@"
if RPATH != "" and INSTALL_RPATH != "":
    extra_link_args = ["-Wl,-rpath", "-Wl," + library_directory]
else:
    # Don't worry about bizarre case when RPATH is defined and
    # INSTALL_RPATH is not or vice versa.  If either undefined, forget
    # it!
    extra_link_args = []
include_dirs = [include_directory]
# Only needed because arrayobject.h not necessarily in Numeric subdirectory 
# in python-1.5.  Once we drop support for python-1.5, then we can change 
# the include to standard Numeric/ form and drop this append 
# altogether.
include_dirs.append("@PYTHON_NUM_DIR@")

library_dirs = [library_directory]
libraries = ["@PLLIB_NAME@@LIB_TAG@"]

# Done with --flat or not plplot logic to decide extra_link_args, include_dirs,
# library_dirs and libraries.

# Now sort out the LIBS mixture of -l and -L options
#libs = "@LIBS@"
# Only need this to support legacy python 1.5.  Once we drop that support
# and go to pure python 2 use libs.split method here and below for incs_list.
import string
libs = ""
libs_list = string.split(libs," ")
#python 2.x libs_list = libs.split(" ")
for option in libs_list:
    if option == "":
	# Do nothing if any extra blank space makes for empty string
	continue
    elif option[0:2] == "-L":
	library_dirs.append(option[2:len(option)])
    elif option[0:2] =="-l":
	libraries.append(option[2:len(option)])
    else:
	raise "bad LIBS"

# Now sort out other additions to include_dirs
incs = "@INCS@"
incs_list = string.split(incs," ")
#python 2.x incs_list = incs.split(" ")
for option in incs_list:
    if option == "":
	# Do nothing if any extra blank space makes for empty string
	continue
    elif option[0:2] == "-I":
	include_dirs.append(option[2:len(option)])
    else:
	raise "bad INCS"

#Now get on with usual setup.py stuff.
module1 = Extension( "plplotcmodule", 
		     extra_link_args = extra_link_args,
                     include_dirs = include_dirs,
		     library_dirs = library_dirs,
		     libraries = libraries,
		     sources = ["plplotcmodule.c"]
		     )

module2 = Extension( "plplot_widgetmodule", 
		     extra_link_args = extra_link_args,
                     include_dirs = include_dirs,
		     library_dirs = library_dirs,
		     libraries = libraries,
		     sources = ["plplot_widgetmodule.c"]
		     )

setup( name = "plplot",
       version = "5.1",
       description = "PLplot Python extension modules",
       author = "Alan W. Irwin",
       author_email = "irwin@beluga.phys.uvic.ca",
       url = "http://www.plplot.org",
       license = "LGPL",
       ext_modules = [module1,module2]
       )
