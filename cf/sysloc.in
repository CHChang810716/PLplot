# sysloc.in   --*-Autoconf-*--
#
# Maurice LeBrun
# IFS, University of Texas at Austin
# 14-Jul-1994
#
# Copyright (C) 2003, 2004  Maurice LeBrun
# Copyright (C) 2003, 2004  Rafael Laboissiere
# Copyright (C) 2003, 2004  Alan W. Irwin
# Copyright (C) 2003, 2004  Joao Cardoso
#
# This file is part of PLplot.
#
# PLplot is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Library Public License as published
# by the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# PLplot is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with PLplot; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

# This script sets up config variables for a Unix-like system.
# The stuff set here is fairly generic and can be automated.
# This includes how to find required header files and libraries.
# Includes code and ideas taken from the BLT (Tk extension) configure.
# ----------------------------------------------------------------------------

# Default linker library commands.  These may need version numbers
# appended to them though.

ITKLIBSTR=-litk
TKLIBSTR=-ltk
ITCLLIBSTR=-litcl
TCLLIBSTR=-ltcl
GDLIBSTR=-lgd
CDLIBSTR=-lcd
PNGLIBSTR=-lpng
JPEGLIBSTR=-ljpeg
ZLIBLIBSTR=-lz
FREETYPELIBSTR=-lfreetype
PTHREADLIBS=""
QHULLLIBS=""
NNLIBS=""
CSALIBS=""

# ----------------------------------------------------------------------------
# Attempt to find jni.h, if java support is enabled.
# ----------------------------------------------------------------------------

if test "$enable_java" = "yes"; then
    if test "$enable_shared" != "yes"; then
        AC_MSG_WARN([Java support requires enable_shared=yes,])
	AC_MSG_WARN([setting enable_java=no])
        enable_java=no
    fi

fi

if test "$enable_java" = "yes"; then
    AC_MSG_CHECKING([for jni.h (Java Native Interface)])
    if test -n "$JAVA_HOME"; then
        if test -r "$JAVA_HOME/include/jni.h"; then
            JAVAINCDIR="$JAVA_HOME/include"
	    AC_MSG_RESULT(yes)
        fi
    else
        # Should make token effort to find jni.h anyway, presumably
        # employing AC_TRY_CPP.  Later...
        AC_MSG_RESULT(no)
    fi

    if test -n "$JAVAINCDIR"; then
        AC_MSG_CHECKING([machine dependent include files for Java (J2RE/IBM)])
        # See if machine dependent files exist in JAVAINCDIR (J2RE 1.3.0 IBM)
        if test -r "$JAVA_HOME/include/jni_md.h"; then
            JAVAMDINCDIR="$JAVA_HOME/include"
	    AC_MSG_RESULT(yes)
        else
        # Now we need to find the machine dependent directory.
            case $system in
                Linux* )
                    JAVAMDINCDIR="$JAVAINCDIR/linux"
		    AC_MSG_RESULT(yes)
                ;;
                SunOS-5* )
                    JAVAMDINCDIR="$JAVAINCDIR/solaris"
		    AC_MSG_RESULT(yes)
                ;;
                * )
                    AC_MSG_RESULT(no)
		    AC_MSG_WARN([Cannot find Java machine dependent includes])
                ;;
            esac
        fi
        if test ! -r "$JAVAMDINCDIR/jni_md.h"; then
            JAVAMDINCDIR="$JAVAINCDIR/genunix"
            if test ! -r "$JAVAMDINCDIR/jni_md.h"; then
                JAVAMDINCDIR=""
            fi
        fi

        if test -z "$JAVAMDINCDIR"; then
            AC_MSG_WARN(Missing jni_md.h, disabling Java support.)
            enable_java=no
        fi

    else
        AC_MSG_WARN([Java Native Interface include file not found,])
	AC_MSG_WARN([setting enable_java=no])
        enable_java=no
    fi
fi

# ----------------------------------------------------------------------------
# Find freetype 2 library and header required for enabling
# driver options for handling the fonts with the freetype library.
# Written by Alan W. Irwin.
# ----------------------------------------------------------------------------

if test "$with_freetype" = "yes"; then
    AC_MSG_CHECKING(for freetype library header files)
    if test -z "$FREETYPEINCDIR"; then
        AC_PREPROC_IFELSE([#include <freetype/config/ftheader.h>],
	                  [ FREETYPEINCDIR=default
			    AC_MSG_RESULT([found in $FREETYPEINCDIR]) ], [
        incdirs="\
        /usr/include/freetype2 \
        /usr/local/include/freetype2"

        for dir in $incdirs; do
            if test -r "$dir/freetype/config/ftheader.h"; then
               FREETYPEINCDIR="$dir"
               break
            fi
        done
        if test -z "$FREETYPEINCDIR"; then
            AC_MSG_RESULT(not found)
	    AC_MSG_WARN([freetype header files not found,])
	    AC_MSG_WARN([setting with_freetype=no])
            FREETYPEINCDIR=default
            with_freetype=no
	else
            AC_MSG_RESULT([found in $FREETYPEINCDIR])
        fi ])
    fi
    if test "$FREETYPEINCDIR" = "/usr/include"; then
        FREETYPEINCDIR=default
    fi

    if test -z "$FREETYPELIBDIR"; then
        AC_CHECK_LIB(freetype, main, [ FREETYPELIBDIR=default ], [
        libdirs="\
        /usr/lib \
        /usr/local/lib"

        for dir in $libdirs; do
            if test -r "$dir/libfreetype.so" -o -r "$dir/libfreetype.a"; then
                FREETYPELIBDIR="$dir"
                break
            fi
        done
        if test -z "$FREETYPELIBDIR"; then
	    AC_MSG_WARN([freetype library not found, setting with_freetype=no])
            FREETYPELIBDIR=default
            with_freetype=no
        fi ])
    fi
    if test "$FREETYPELIBDIR" = "/usr/lib"; then
        FREETYPELIBDIR=default
    fi
fi

FREETYPEINCCMD=""
FREETYPEINCPATH=""
FREETYPELIBCMD=""
FREETYPELIBPATH=""
if test "$with_freetype" = "yes"; then
    AC_DEFINE(HAVE_FREETYPE, [], [Define if [freetype] is available])
    PL_ADD_TO_INCS($FREETYPEINCDIR, FREETYPEINCCMD, FREETYPEINCPATH)
    PL_ADD_TO_LIBS($FREETYPELIBDIR, $FREETYPELIBSTR, FREETYPELIBCMD, FREETYPELIBPATH)
fi
AC_SUBST(FREETYPEINCCMD)
AC_SUBST(FREETYPELIBCMD)

PL_INCLUDE(octave.ac)

# -----------------------------------------------------------------------
# Python include and machdep directories
# -----------------------------------------------------------------------

if test "$enable_python" = "yes"; then
    # Check whether a working Python has been found (by AM_PATH_PYTHON)
    if test -z "$PYTHON_VERSION" ; then
        enable_python=no
	AC_MSG_WARN([Python version not found, setting enable_python=no])
    else
        if test "$enable_shared" != "yes"; then
            AC_MSG_RESULT([warning: python support requires enable_shared=yes, setting enable_python=no])
            enable_python=no
        fi
    fi
fi

if test "$enable_python" = "yes"; then
    if test -z "$PYTHON_INC_DIR" -o ! -d "$PYTHON_INC_DIR"; then
        incdirs="$prefix/include/python$PYTHON_VERSION \
	         /usr/include/python$PYTHON_VERSION"
        PL_FIND_INC(Python, PYTHON_INC_DIR, enable_python)

	if test "$enable_python" = no ; then
	    AC_MSG_WARN([Header file for Python version $PYTHON_VERSION has not been found.])
            AC_MSG_WARN([This probably means that an appropriate Python])
            AC_MSG_WARN([development package needs to be installed.])
	fi

    fi

# This needs to be a separate test in case PYTHON_INC_DIR is specified by the
# user, to pick up a particular version.  Numeric should be either in the same
# or a subdir of PYTHON_INC_DIR else version mismatch could occur.

    if test "$enable_python" = "yes"; then
        incdirs="\
        $PYTHON_INC_DIR \
        $PYTHON_INC_DIR/Numeric"
        PL_FIND_INC(arrayobject, PYTHON_NUM_DIR, numeric_python)
        if test "$numeric_python" = "no"; then
            AC_MSG_RESULT([plplot module needs Python numeric extension.])
            AC_MSG_RESULT([Setting enable_python to no])
            enable_python=no
        fi
    fi
fi

AC_SUBST(PYTHON_INC_DIR)
AC_SUBST(PYTHON_NUM_DIR)

PL_INCLUDE(swig.ac)

# ----------------------------------------------------------------------------
# Check for pthreads
# ----------------------------------------------------------------------------

if test "$with_pthreads" = "yes" -a "$enable_xwin" = "yes"; then
    AC_CHECK_LIB(pthread, pthread_create, [
        AC_DEFINE(HAVE_PTHREAD, [], [Define if pthreads is available])
        PTHREADLIBS="-lpthread" ], [ with_pthreads="no"])

    case "$host_os" in
        linux*)
            PLPLOT_MUTEX_RECURSIVE=PTHREAD_MUTEX_RECURSIVE_NP
	;;
	*)
            PLPLOT_MUTEX_RECURSIVE=PTHREAD_MUTEX_RECURSIVE
        ;;
    esac

    AC_DEFINE_UNQUOTED(PLPLOT_MUTEX_RECURSIVE, $PLPLOT_MUTEX_RECURSIVE,
              [Portable definition for PTHREAD_MUTEX_RECURSIVE])

fi

# ----------------------------------------------------------------------------
# C(XX)FLAGS to use ieee because of NaN issues in libcsironn and libcsirocsa
# this must be done prior to the NaN awarenedd test that follows
# ----------------------------------------------------------------------------

if test "$with_qhull" = "yes" -o "$with_csa" = "yes"; then
    case "$host_cpu" in
	i*86 )
            CFLAGS="$CFLAGS -mieee-fp"
            CXXFLAGS="$CXXFLAGS -mieee-fp"
	;;
	alpha* )
            if test "$GCC" = yes; then
                CFLAGS="$CFLAGS -mieee"
                CXXFLAGS="$CXXFLAGS -mieee"
            else
		CFLAGS="$CFLAGS -ieee"
                CXXFLAGS="$CXXFLAGS -ieee"
            fi
	;;
    esac
fi

# ----------------------------------------------------------------------------
# Check for NaN awareness
# this must be done prior to the following csa and qhull test
# ----------------------------------------------------------------------------

# make test on simple NaN operations

AC_MSG_CHECKING([for NaN awareness in C compiler])
AC_RUN_IFELSE(
    [AC_LANG_PROGRAM([[
	#include <stdio.h>
	#if defined(__GNUC__)
	static const double NaN = 0.0 / 0.0;
	#elif defined(BIG_ENDIAN) || defined(_BIG_ENDIAN)
	static const long long lNaN = 0x7fffffffffffffff;
	#define NaN (*(double*)&lNaN)
	#else
	static const long long lNaN = 0xfff8000000000000;
	#define NaN (*(double*)&lNaN)
	#endif
    ]],[[
	double x = NaN;
	if (x != x) return 0;
	else return 1;
    ]])],
    [AC_MSG_RESULT(yes)],
    [AC_MSG_RESULT(no)
     AC_MSG_WARN([System is not NaN aware, setting with_csa=no and with_qhull=no]);
     with_csa="no";
     with_qhull="no";])

# ----------------------------------------------------------------------------
# Check for csa
# ----------------------------------------------------------------------------

if test "$with_csa" = "yes"; then
	AC_DEFINE(WITH_CSA, [], [Define if csa is desired])
	CSALIBS='$(top_builddir)/lib/csa/libcsirocsa.la'
fi

# ----------------------------------------------------------------------------
# Check for QHull
# ----------------------------------------------------------------------------

if test "$with_qhull" = "yes"; then
    AC_CHECK_LIB(qhull, qh_new_qhull, [
        AC_DEFINE(HAVE_QHULL, [], [Define if Qhull is available])
        QHULLLIBS="-lqhull"
        NNLIBS='$(top_builddir)/lib/nn/libcsironn.la' ], [ with_qhull="no" ])
fi

# ----------------------------------------------------------------------------
# Automake conditionals for the qhull and csa libraries (to be used
# primarily in bindings/octave/Makefile.am)
# ----------------------------------------------------------------------------

AM_CONDITIONAL(with_csa, [test "$with_csa" = yes])
AM_CONDITIONAL(with_qhull, [test "$with_qhull" = yes])

# ----------------------------------------------------------------------------
# Check for inclusion of sys/types.h before dirent.h in broken MacOSX systems
# ----------------------------------------------------------------------------

case "$host_os" in
    darwin*)
        AC_DEFINE(NEED_SYS_TYPE_H, [], [Include sys/type.h if needed])
    ;;
esac

# ----------------------------------------------------------------------------
# Now do the variable substitutions.
# ----------------------------------------------------------------------------

AC_SUBST(ARLIB_BUILD)
AC_SUBST(ARLIB_BUILD_CXX)
AC_SUBST(SHLIB_BUILD)
AC_SUBST(SHLIB_BUILD_CXX)
AC_SUBST(SONAME_FLAGS)
AC_SUBST(SA)
AC_SUBST(SO)
AC_SUBST(LDSHARED)

AC_SUBST(SHLIB_CCFLAGS)
AC_SUBST(SHLIB_CXXFLAGS)
AC_SUBST(SHLIB_F77FLAGS)
AC_SUBST(SHLIB_LIBS)

# Substitutions for the dynamic drivers.
# if enable-dynamic-drivers is enabled, those libs don't go to "LIBS"
#
# GNOMELIBS all libs needed by the gnome driver.

AC_SUBST(PTHREADLIBS)
AC_SUBST(QHULLLIBS)
AC_SUBST(NNLIBS)
AC_SUBST(CSALIBS)
