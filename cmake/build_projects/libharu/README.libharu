The manifest of these changes is as follows:

This file:

README.libharu

CMake logic that automatically builds libharu as part of the "Build
Projects" project (see CMakeLists.txt file in the parent directory)
that uses ExternalProject_Add to build projects that have a ep.cmake
file:

ep.cmake

Improved build system (Werner's build system culled from the
git version of libharu with additional improvements by me):

CMakeLists.txt
cmake/modules/haru.cmake
cmake/modules/summary.cmake
src/CMakeLists.txt
include/CMakeLists.txt
demo/CMakeLists.txt
include/hpdf_config.h.cmake

Support for larger font sizes (without this, example 24 does not work):

include/hpdf_consts.h
src/hpdf_page_operator.c

Support for gcc visibility:

include/hpdf.h

Bug fix for the case where zlib is not available.

include_hpdf_config.h.patch

(1) copy selected files from here on top of a pre-existing freshly
unpacked version of libharu-2.1.0, e.g.,

mkdir -p /home/software/libharu/libharu-2.1.0/cmake/modules
cp -f libharu/CMakeLists.txt /home/software/libharu/libharu-2.1.0
cp -f libharu/demo/CMakeLists.txt /home/software/libharu/libharu-2.1.0/demo
cp -f libharu/src/hpdf_page_operator.c libharu/src/CMakeLists.txt \
/home/software/libharu/libharu-2.1.0/src
cp -f libharu/cmake/modules/haru.cmake libharu/cmake/modules/summary.cmake \
/home/software/libharu/libharu-2.1.0/cmake/modules
cp -f libharu/include/hpdf_consts.h libharu/include/hpdf_config.h.cmake \
libharu/include/hpdf.h libharu/include/CMakeLists.txt \
/home/software/libharu/libharu-2.1.0/include

N.B. libharu-2.1.0 has no cmake-based build-system at all (unlike the
git version) so this cp operation installs that as well as changes to
implement the larger font size support and gcc visibility.

(2) Fix bug for case when zlib is not available.
patch -d /home/software/libharu/libharu-2.1.0 -p1 < libharu/include_hpdf_config.h.patch

(3) configure, build, and install libharu starting with an empty build tree
and empty install tree, e.g.,

rm -rf /home/software/libharu/build_dir/* /home/software/libharu/install
cd /home/software/libharu/build_dir
cmake -DCMAKE_INSTALL_PREFIX=/home/software/libharu/install \
-DPOST_2.1.0=OFF -DLIBHARU_EXAMPLES=ON \
../libharu-2.1.0 >& cmake.out
make -j4 install >& make_install.out

The above step works fine on Linux with

export CFLAGS='-g -fvisibility=hidden'

set before the "cmake" invocation to test the new gcc visibility support
in hpdf.h.  Note -DPOST_2.1.0=OFF is essential for the 2.1.0
version, but you should drop this option for anything after 2.1.0.
Also note that -DLIBHARU_EXAMPLES=ON builds the demos, but does not
test them.

N.B. This improved CMake-based build system has been tested for both
Linux and MinGW/MSYS now using the "Build Projects" project (see the
CMakeLists.txt file in the parent directory).  As far as I know, this
improved build system _should_ also work on Mac OS X.
