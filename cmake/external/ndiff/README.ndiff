The ndiff application is a useful fuzzy diff that can be used to
analyze, for example, the most significant differences between the C
and Python PostScript results without having those important
differences obscured by minor numerical differences.

ndiff was last released in 2000, and its build system is beginning to
show the signs of bit-rot.  For example, building from a separate
build tree does not work, and you must create _all_ the required
subdirectories of the install tree using repeated runs of mkdir before
"make install" will work.

AWI got tired of dealing with those issues so he made with help from
Andrew Ross a CMake-based build system consisting of the two other
files in this directory whose names are CMakeLists.txt and
config.h.cmake.

Here is the recommended way to use these files:


download, verify, and signature check
the last (2000) release of ndiff using

wget ftp://ftp.math.utah.edu/pub/misc/ndiff-2.00.tar.gz
wget ftp://ftp.math.utah.edu/pub/misc/ndiff-2.00.tar.gz.sig
gpg --verify ndiff-2.00.tar.gz.sig

Copy CMakeLists.txt and config.h.cmake into the top
of the ndiff-2.0.0 source tree then build and install ndiff using

mkdir build_dir
cmake -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX
../ndiff-2.0.0
make
make install

where $INSTALL_PREFIX stands for the top-level directory of
the install tree that the user decides to use, e.g., /usr/local/ndiff.

The present build system should be sufficient for most people's needs, but
AWI is currently working on finishing it by, e.g., implementing all
the tests that are available in the previous build system.

Note AWI has recently been in touch with the ndiff author, and
he appears to be the kind of developer that likes to muck with
machine language because you know exactly what you get than
rather than actually using compilers which might produce obfuscated
machine language.  So he has absolutely no use for CMake because
it is difficult to debug the resulting Makefiles (!)  To be fair,
he also has some advantages of perfectionism which is why he
goes to the trouble of testing the C ndiff against
an alternative awk-based implementation in his tests of ndiff.
AWI will also be implementing (see above) the same tests
using CMake facilities.

So this CMake-based build system will likely always be external to the
ndiff project.  Nevertheless, ndiff is extremely useful to PLplot
developers who are all fairly expert with CMake so this new build
system should save some time and effort for PLplot developers.
