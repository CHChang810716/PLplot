#! /bin/sh -e
## octave-2.1.53-demos.dpatch by Rafael Laboissiere <rafael@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Port PLplot Octave demos to Octave 2.1.53

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch}"

if [ $# -ne 1 ]; then
  echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
  exit 1
fi
case "$1" in
  -patch)
    patch $patch_opts -p1 < $0;;
  -unpatch)
    patch $patch_opts -p1 -R < $0;;
  *)
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1;;
esac

exit 0
diff -u -w -r1.6 x03c.m
--- plplot-orig/bindings/octave/demos/x03c.m	11 Dec 2002 17:12:25 -0000	1.6
+++ plplot/bindings/octave/demos/x03c.m	14 Feb 2004 13:35:24 -0000
@@ -46,7 +46,7 @@
     y(:) = 0.1 * i * y0(:);
     
     ## Draw circles for polar grid */
-    plline(x, y);
+    plline(x', y');
   endfor
 
   plcol0(2);
diff -u -w -r1.10 x08c.m
--- plplot-orig/bindings/octave/demos/x08c.m	27 Sep 2003 00:20:49 -0000	1.10
+++ plplot/bindings/octave/demos/x08c.m	14 Feb 2004 13:35:25 -0000
@@ -77,10 +77,14 @@
 
     if (rosen)
       z = (1 - xx) .^ 2 + 100 .* (yy - xx .^ 2) .^ 2;
+      if exist ("do_fortran_indexing")
       of = do_fortran_indexing;
       do_fortran_indexing = 1;
+      endif
       z(z <= 0) = exp(-5); # make sure the minimum after applying log() is -5
+      if exist ("do_fortran_indexing")      
       do_fortran_indexing = of;
+      endif
       z = log(z);
     else
       r = sqrt(xx .* xx + yy .* yy);
diff -u -w -r1.5 x12c.m
--- plplot-orig/bindings/octave/demos/x12c.m	11 Dec 2002 17:12:28 -0000	1.5
+++ plplot/bindings/octave/demos/x12c.m	14 Feb 2004 13:35:25 -0000
@@ -69,10 +69,10 @@
   y(3) = y0;
   x(4) = x0 + 1.;
   y(4) = 0.;
-  plfill(x, y);
+  plfill(x', y');
   plcol(1);
   pllsty(1);
-  plline(x, y);
+  plline(x', y');
   
 endfunction
 
diff -u -w -r1.6 x13c.m
--- plplot-orig/bindings/octave/demos/x13c.m	11 Dec 2002 17:12:28 -0000	1.6
+++ plplot/bindings/octave/demos/x13c.m	14 Feb 2004 13:35:25 -0000
@@ -68,9 +68,9 @@
     plpsty(rem((i + 3), 8) + 1);
     x(j+1:rows(x))=[];
     y(j+1:rows(y))=[];
-    plfill(x, y);
+    plfill(x', y');
     plcol(1);
-    plline(x, y);
+    plline(x', y');
     just = (theta0 + theta1) / 2.;
     dx = .25 * cos(just); dy = .25 * sin(just);
     if ((just < pi / 2) || (just > 3 * pi / 2) )
diff -u -w -r1.5 x15c.m
--- plplot-orig/bindings/octave/demos/x15c.m	11 Dec 2002 17:12:28 -0000	1.5
+++ plplot/bindings/octave/demos/x15c.m	14 Feb 2004 13:35:25 -0000
@@ -97,7 +97,7 @@
   s(3) = 1;		### maximum saturation */
   s(4) = 1;		### maximum saturation */
 
-  plscmap1l(0, i, h, l, s, zeros(4,1));
+  plscmap1l(0, i', h', l', s', zeros(4,1));
 endfunction
 
 ### Initializes color map 1 in HLS space.
@@ -132,7 +132,7 @@
   s(3) = 0.5;		### saturation -- center */
   s(4) = 1;		### saturation -- high */
 
-  plscmap1l(0, i, h, l, s, [ 0 0 0 0]');
+  plscmap1l(0, i', h', l', s', [ 0 0 0 0]');
 endfunction
 
 ### Illustrates a single shaded region.
@@ -158,7 +158,7 @@
   max_width = 2;
 
   plpsty(8);
-  plshade(z, "0", -1., 1., -1., 1., 
+  plshade(z, 0, -1., 1., -1., 1., 
 	  shade_min, shade_max, 
 	  sh_cmap, sh_color, sh_width,
 	  min_color, min_width, max_color, max_width, 1, tr);
@@ -189,7 +189,7 @@
     sh_width = 2;
     plpsty( rem((i + 2), 8) + 1);
 
-    plshade(z, "0", -1., 1., -1., 1., 
+    plshade(z, 0, -1., 1., -1., 1., 
 	    shade_min, shade_max, 
 	    sh_cmap, sh_color, sh_width,
 	    min_color, min_width, max_color, max_width,1,tr);
diff -u -w -r1.6 x18c.m
--- plplot-orig/bindings/octave/demos/x18c.m	11 Dec 2002 17:12:30 -0000	1.6
+++ plplot/bindings/octave/demos/x18c.m	14 Feb 2004 13:35:25 -0000
@@ -73,9 +73,9 @@
     plcol(2);
 
     if (opt(k+1))
-      plline3( x, y, z );
+      plline3( x', y', z' );
     else
-      plpoin3( x, y, z, 1 );
+      plpoin3( x', y', z', 1 );
     endif
 
     plcol(3);
@@ -145,7 +145,7 @@
       y(5) = sin( pj ) * sin( ti );
       z(5) = cos( pj );
 
-      plpoly3(x, y, z, draw(k+1,:)', -1); ## added an extra argument, with the sign 
+      plpoly3(x', y', z', draw(k+1,:)', -1); ## added an extra argument, with the sign 
     endfor
   endfor
 
