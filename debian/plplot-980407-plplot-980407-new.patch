diff -cbNr plplot-980407/bindings/tcl/matrixInit.c plplot-980407-new/bindings/tcl/matrixInit.c
*** plplot-980407/bindings/tcl/matrixInit.c	Tue Apr  7 20:02:41 1998
--- plplot-980407-new/bindings/tcl/matrixInit.c	Thu May  7 18:23:54 1998
***************
*** 8,13 ****
--- 8,16 ----
      Tcl_CreateCommand(interp, "matrix",	Tcl_MatrixCmd,
  		      (ClientData) NULL, (void (*)(ClientData))	NULL);
  
+ #if ( TCL_MAJOR_VERSION == 7 && TCL_MINOR_VERSION > 4 )	// jc:
      Tcl_PkgProvide(interp, "Matrix", "0.1");
+ #endif
+ 
      return TCL_OK;
  }
diff -cbNr plplot-980407/bindings/tk/help_keys.tcl plplot-980407-new/bindings/tk/help_keys.tcl
*** plplot-980407/bindings/tk/help_keys.tcl	Tue Apr  7 20:02:46 1998
--- plplot-980407-new/bindings/tk/help_keys.tcl	Thu May  7 16:31:21 1998
***************
*** 27,34 ****
  its remote TK driver.  The default actions of the keyboard handler are as
  follows:
  
! "Q"				Terminate program
  <Return> or <Page Down>		Advance to the next page
  
  The user code can supply its own keyboard handler, and thereby add to
  or modify these actions (this is in fact what is done by plrender).
--- 27,44 ----
  its remote TK driver.  The default actions of the keyboard handler are as
  follows:
  
! 	"Q" | <Ctrl-x>			Terminate program
  <Return> or <Page Down>		Advance to the next page
+ 	"z"			enter zoom	(Cliking once zooms x 2)
+ 	"b"			back zoom
+ 	"f"			forward zoom
+ 	"z"			reset zoom
+ 	"P"			print
+ 	"s"			save again
+ 	"5"			scroll magnification factor ??
+ 	"1"			scroll speed	??
+ 	<left><right><up><down>	scroll after zoom
+ 	<Alt><key>	increase scroll speed
  
  The user code can supply its own keyboard handler, and thereby add to
  or modify these actions (this is in fact what is done by plrender).
diff -cbNr plplot-980407/bindings/tk/pldefaults.tcl plplot-980407-new/bindings/tk/pldefaults.tcl
*** plplot-980407/bindings/tk/pldefaults.tcl	Tue Apr  7 20:02:47 1998
--- plplot-980407-new/bindings/tk/pldefaults.tcl	Thu May  7 16:31:21 1998
***************
*** 239,244 ****
--- 239,246 ----
  # Turn them into an empty string to disable.
  
      global key_zoom_select;	set key_zoom_select	"z"
+     global key_zoom_back;	set key_zoom_back	"b"
+     global key_zoom_forward;	set key_zoom_forward	"f"    
      global key_zoom_reset;	set key_zoom_reset	"r"
      global key_print;		set key_print		"P"
      global key_save_again;	set key_save_again	"s"
diff -cbNr plplot-980407/bindings/tk/plframe.c plplot-980407-new/bindings/tk/plframe.c
*** plplot-980407/bindings/tk/plframe.c	Tue Apr  7 20:02:48 1998
--- plplot-980407-new/bindings/tk/plframe.c	Thu May  7 18:23:54 1998
***************
*** 317,323 ****
  	TK_CONFIG_COLOR_ONLY},
  	*/
  #ifndef	MAC_TCL	    
!     {TK_CONFIG_COLOR, "-plbg", (char *) NULL, (char *) NULL,
  	DEF_PLFRAME_BG_COLOR, Tk_Offset(PlFrame, bgColor),
  	TK_CONFIG_COLOR_ONLY},
  #endif
--- 317,324 ----
  	TK_CONFIG_COLOR_ONLY},
  	*/
  #ifndef	MAC_TCL	    
! // jc:    {TK_CONFIG_COLOR, "-plbg", (char *) NULL, (char *) NULL,
!     {TK_CONFIG_COLOR, "-plbg", "plbackground", "Plbackground",
  	DEF_PLFRAME_BG_COLOR, Tk_Offset(PlFrame, bgColor),
  	TK_CONFIG_COLOR_ONLY},
  #endif
diff -cbNr plplot-980407/bindings/tk/plserver.tcl plplot-980407-new/bindings/tk/plserver.tcl
*** plplot-980407/bindings/tk/plserver.tcl	Tue Apr  7 20:02:49 1998
--- plplot-980407-new/bindings/tk/plserver.tcl	Thu May  7 16:31:21 1998
***************
*** 54,60 ****
--- 54,62 ----
      plstdwin .
  
  # Create the window for the menu bar
+ # jc: top menu, with file and help submenus removed to save ploting space
  
+ if { 0 } {
      frame .menu -relief raised -borderwidth 1
      pack append . .menu {top fillx}
  
***************
*** 132,137 ****
--- 134,142 ----
  	-underline 3
  
      pack append .menu .menu.help {right}
+ }
+ 
+     bind . <Control-x> exit
  
  # Set up for keyboard-based menu traversal
  
***************
*** 170,176 ****
      if { $dp } then {
  	after 1 catch [list "dp_RDO [list $client] $msg"]
      } else {
! 	after 1 catch [list "send [list $client] after 1 $msg"]
      }
  }
  
--- 175,184 ----
      if { $dp } then {
  	after 1 catch [list "dp_RDO [list $client] $msg"]
      } else {
! # jc:	after 1 catch [list "send [list $client] after 1 $msg"]
! # try to avoid the server hanging; related with zoom/buttonpress problem
! # Side effects ??
! 	after 1 catch [list "send -async [list $client] $msg"]
      }
  }
  
diff -cbNr plplot-980407/bindings/tk/plwidget.tcl plplot-980407-new/bindings/tk/plwidget.tcl
*** plplot-980407/bindings/tk/plwidget.tcl	Tue Apr  7 20:02:50 1998
--- plplot-980407-new/bindings/tk/plwidget.tcl	Thu May  7 16:31:21 1998
***************
*** 111,116 ****
--- 111,118 ----
  
  proc plw_create {w {client_id {}}} {
      plxframe $w $client_id
+ # jc: puts name into window decoration frame
+     wm title . [string trim $w .]
  }
  
  #----------------------------------------------------------------------------
***************
*** 341,351 ****
--- 343,380 ----
      plw_create_pmenu_zoom    $w
      plw_create_pmenu_page    $w
      plw_create_pmenu_options $w
+     plw_create_pmenu_help    $w
+     plw_create_pmenu_exit    $w
  
      return $pmbut
  }
  
  #----------------------------------------------------------------------------
+ # plw_create_pmenu_exit
+ #----------------------------------------------------------------------------
+ 
+ proc plw_create_pmenu_exit {w} {
+ 
+     global pmenu
+ 
+     $pmenu($w) add command -label "Exit" \
+ 	-command exit
+ 	
+ }
+ 
+ #----------------------------------------------------------------------------
+ # plw_create_pmenu_help
+ #----------------------------------------------------------------------------
+ 
+ proc plw_create_pmenu_help {w} {
+ 
+     global pmenu
+ 
+     $pmenu($w) add command -label "Help" \
+ 	-command "help_keys"
+ }
+ 
+ #----------------------------------------------------------------------------
  # plw_create_pmenu_print
  #
  # Create plot-print menu
***************
*** 644,649 ****
--- 673,680 ----
      global user_key_filter
  
      global key_zoom_select
+     global key_zoom_back
+     global key_zoom_forward    
      global key_zoom_reset
      global key_print
      global key_save_again
***************
*** 664,671 ****
  
      switch $keyname \
  	$key_zoom_select	"plw_zoom_select $w" \
! 	"b"			"plw_zoom_back $w" \
! 	"f"			"plw_zoom_forward $w" \
  	$key_zoom_reset		"plw_zoom_reset $w" \
  	$key_print		"plw_print $w" \
  	$key_save_again		"plw_save_again $w" \
--- 695,702 ----
  
      switch $keyname \
  	$key_zoom_select	"plw_zoom_select $w" \
! 	$key_zoom_back		"plw_zoom_back $w" \
! 	$key_zoom_forward	"plw_zoom_forward $w" \
  	$key_zoom_reset		"plw_zoom_reset $w" \
  	$key_print		"plw_print $w" \
  	$key_save_again		"plw_save_again $w" \
diff -cbNr plplot-980407/cf/configure.in plplot-980407-new/cf/configure.in
*** plplot-980407/cf/configure.in	Tue Apr  7 20:02:52 1998
--- plplot-980407-new/cf/configure.in	Thu May  7 16:31:21 1998
***************
*** 490,495 ****
--- 490,498 ----
  	Linux* )
  	    cat $srcdir/cf/lib_sh_linux.in	>>Makefile.in
  	;;
+ 	SCO* )
+ 	    cat $srcdir/cf/lib_sh_sco.in	>>Makefile.in
+ 	;;
  	* )
  	    cat $srcdir/cf/lib_sh.in	>>Makefile.in
  	;;
diff -cbNr plplot-980407/cf/dist.in plplot-980407-new/cf/dist.in
*** plplot-980407/cf/dist.in	Tue Apr  7 20:02:52 1998
--- plplot-980407-new/cf/dist.in	Thu May  7 16:31:21 1998
***************
*** 34,40 ****
  	plsym.c \
  	pltick.c \
  	plvpor.c \
! 	plwind.c 
  
  CORE_OBJ = \
  	pdfutils$O \
--- 34,41 ----
  	plsym.c \
  	pltick.c \
  	plvpor.c \
! 	plwind.c \
! 	plstripc.c
  
  CORE_OBJ = \
  	pdfutils$O \
***************
*** 56,62 ****
  	plsym$O \
  	pltick$O \
  	plvpor$O \
! 	plwind$O 
  
  # Support files for font generators.
  
--- 57,64 ----
  	plsym$O \
  	pltick$O \
  	plvpor$O \
! 	plwind$O \
! 	plstripc$O
  
  # Support files for font generators.
  
diff -cbNr plplot-980407/cf/initlib.in plplot-980407-new/cf/initlib.in
*** plplot-980407/cf/initlib.in	Tue Apr  7 20:02:53 1998
--- plplot-980407-new/cf/initlib.in	Thu May  7 17:13:24 1998
***************
*** 64,70 ****
  # (Must relink after installing shared library!)
  
  LIB_INSTALL	= -L$(LIB_DIR) -l$(PLLIB_NAME)$(LIB_TAG) $(MAT_LINK)
- LIB_INSTALL	= -L$(LIB_DIR) -l$(PLLIB_NAME) $(MAT_LINK)
  
  # These are what we link against.
  
--- 64,69 ----
diff -cbNr plplot-980407/cf/inst_lib.in plplot-980407-new/cf/inst_lib.in
*** plplot-980407/cf/inst_lib.in	Tue Apr  7 20:02:53 1998
--- plplot-980407-new/cf/inst_lib.in	Thu May  7 16:31:21 1998
***************
*** 15,25 ****
  	-if test ! -d $(INFO_DIR); then mkdir -p $(INFO_DIR); fi
  	-cd $(top_srcdir)/lib; cp *.fnt *.map $(LIB_DIR)
  	-cp $(PLLIB_BASE)* $(LIB_DIR); \
! 	 for file in $(PLLIB_BASE)*; do $(RANLIB) $(LIB_DIR)/$$file; done
  	-cp libMatrix.* $(LIB_DIR); \
! 	 if test -r libMatrix.a; then $(RANLIB)) $(LIB_DIR)/libMatrix.a; done
  	-cp libPLcxx.* $(LIB_DIR); \
! 	 if test -r libPLcxx.a; then $(RANLIB)) $(LIB_DIR)/libPLcxx.a; done
  	-cd $(top_srcdir); \
  	 cp README NEWS CHANGES Copyright COPYING.LIB FAQ ToDo \
  	    mklinks $(DOC_DIR)
--- 15,25 ----
  	-if test ! -d $(INFO_DIR); then mkdir -p $(INFO_DIR); fi
  	-cd $(top_srcdir)/lib; cp *.fnt *.map $(LIB_DIR)
  	-cp $(PLLIB_BASE)* $(LIB_DIR); \
! 	 for file in $(PLLIB_BASE)*.a; do $(RANLIB) $(LIB_DIR)/$$file; done
  	-cp libMatrix.* $(LIB_DIR); \
! 	 if test -r libMatrix.a; then $(RANLIB) $(LIB_DIR)/libMatrix.a; fi
  	-cp libPLcxx.* $(LIB_DIR); \
! 	 if test -r libPLcxx.a; then $(RANLIB) $(LIB_DIR)/libPLcxx.a; fi
  	-cd $(top_srcdir); \
  	 cp README NEWS CHANGES Copyright COPYING.LIB FAQ ToDo \
  	    mklinks $(DOC_DIR)
diff -cbNr plplot-980407/cf/lib_sh.in plplot-980407-new/cf/lib_sh.in
*** plplot-980407/cf/lib_sh.in	Tue Apr  7 20:02:54 1998
--- plplot-980407-new/cf/lib_sh.in	Thu May  7 16:31:21 1998
***************
*** 55,61 ****
  	$(RANLIB) $(MATLIB_AR)
  
  $(MATLIB_SO):	$(MAT_OBJS)
! 	-$(RM) $(PLLIB_SO)
  	@echo ""; echo "Building shared library"; echo ""
  	cd shared; \
  	$(SHLIB_BUILD) ../$(MATLIB_SO) $(MAT_OBJS)
--- 55,61 ----
  	$(RANLIB) $(MATLIB_AR)
  
  $(MATLIB_SO):	$(MAT_OBJS)
! 	-$(RM) $(MATLIB_SO)
  	@echo ""; echo "Building shared library"; echo ""
  	cd shared; \
  	$(SHLIB_BUILD) ../$(MATLIB_SO) $(MAT_OBJS)
diff -cbNr plplot-980407/cf/lib_sh_sco.in plplot-980407-new/cf/lib_sh_sco.in
*** plplot-980407/cf/lib_sh_sco.in	Thu Jan  1 00:00:00 1970
--- plplot-980407-new/cf/lib_sh_sco.in	Thu May  7 16:31:21 1998
***************
*** 0 ****
--- 1,110 ----
+ # -*-makefile-*--------------------------------------------------------------
+ # $Id$
+ #
+ # Geoffrey Furnish
+ # IFS, University of Texas at Austin
+ # 6-Jun-1995
+ #
+ # PLplot build rules for archive and shared library under Linux.
+ # Based on prior work by Maurice.
+ # -----------------------------------------------------------------------------
+ 
+ # -----------------------------------------------------------------------------
+ # Set up inference rules appropriate for building both archive and shared
+ # libraries. 
+ # -----------------------------------------------------------------------------
+ 
+ .cc.o:
+ 	$(CXX) $(CXX_FLAGS) $<
+ 	cd shared; $(CXX) $(SHLIB_CXXFLAGS) $(CXX_FLAGS) ../$<
+ 
+ .c.o:
+ 	$(CC) $(CC_FLAGS) $<
+ 	cd shared; $(CC) $(SHLIB_CCFLAGS) $(CC_FLAGS) ../$<
+ 
+ .f.o:
+ 	$(F77) $(F77_FLAGS) $<
+ 	cd shared; $(F77) $(SHLIB_F77FLAGS) $(F77_FLAGS) ../$<
+ 
+ # -----------------------------------------------------------------------------
+ # Library dependency list and targets
+ # -----------------------------------------------------------------------------
+ 
+ SOVERSION	= @SOVERSION@
+ 
+ PLLIB_SO	= $(PLLIB_PATH)$(PLLIB_BASE)$(LIB_TAG).so.$(SOVERSION)
+ SONAME		= $(PLLIB_BASE)$(LIB_TAG).so
+ 
+ 
+ PLLIBS = $(PLLIB_AR) $(PLLIB_SO)
+ MATLIBS = $(MATLIB_AR) $(MATLIB_SO)
+ CXXLIBS = $(CXXLIB_AR) $(CXXLIB_SO)
+ 
+ libs:	$(PLLIBS) $(MATLIBS) $(CXXLIBS)
+ 
+ $(PLLIB_AR):	$(LIB_OBJS)
+ 	-$(RM) $(PLLIB_AR)
+ 	@echo ""; echo "Building archive library"; echo ""
+ 	$(ARLIB_BUILD) $(PLLIB_AR) $(LIB_OBJS)
+ 	$(RANLIB) $(PLLIB_AR)
+ 
+ $(MATLIB_AR): $(MAT_OBJS)
+ 	-$(RM) $(MATLIB_AR)
+ 	@echo ""; echo "Building archive library"; echo ""
+ 	$(ARLIB_BUILD) $(MATLIB_AR) $(MAT_OBJS)
+ 	$(RANLIB) $(MATLIB_AR)
+ 	@echo ""
+ 
+ $(CXXLIB_AR): $(CXX_OBJS)
+ 	-$(RM) $(CXXLIB_AR)
+ 	@echo ""; echo "Building archive library"; echo ""
+ 	$(ARLIB_BUILD) $(CXXLIB_AR) $(CXX_OBJS)
+ 	$(RANLIB) $(CXXLIB_AR)
+ 	@echo ""
+ 
+ # The following rule based (very) loosely on what I see David Engel
+ # did in his Linux Tcl/Tk port.  
+ 
+ # NOTE: We have to link with iostream in order to satisfy the
+ # references to cout and friends in the C++ interface class.  And we
+ # do /not/ link with libg++ so as to avoid conflicts between the
+ # libg++ String class and the DS++ String class.  Oh, but for C++
+ # namespace support...
+ 
+ $(PLLIB_SO):	$(LIB_OBJS) stupidtk.o
+ 	-$(RM) $(PLLIB_SO)
+ 	@echo ""; echo "Building shared library"; echo ""
+ 	cd shared; \
+ 	$(SHLIB_BUILD) ../$(PLLIB_SO) \
+ 		$(LIB_OBJS) stupidtk.o
+ 	ln -sf $(PLLIB_SO) $(SONAME)
+ 	@echo ""
+ 
+ $(MATLIB_SO): $(MAT_OBJS)
+ 	-$(RM) $(MATLIB_SO)
+ 	@echo ""; echo "Building shared library"; echo ""
+ 	cd shared; \
+ 	$(SHLIB_BUILD) ../$(MATLIB_SO) $(MAT_OBJS)
+ 	@echo ""
+ 
+ $(CXXLIB_SO): $(CXX_OBJS)
+ 	-$(RM) $(CXXLIB_SO)
+ 	@echo ""; echo "Building shared library"; echo ""
+ 	cd shared; \
+ 	$(SHLIB_BUILD) ../$(CXXLIB_SO) $(CXX_OBJS)
+ 	@echo ""
+ 
+ # -----------------------------------------------------------------------------
+ # Sick hacks.
+ # -----------------------------------------------------------------------------
+ 
+ # Needs to be compiled using K&R C.
+ 
+ tcpip.o:
+ 	$(OCC) $(CC_FLAGS) tcpip.c
+ 	cd shared; $(OCC) $(SHLIB_CCFLAGS) $(CC_FLAGS) ../tcpip.c
+ 
+ stupidtk.o:
+ 	$(CC) $(CC_FLAGS) stupidtk.c
+ 	cd shared; $(CC) $(SHLIB_CCFLAGS) $(CC_FLAGS) ../stupidtk.c
+ 
diff -cbNr plplot-980407/cf/pkg_tcl.in plplot-980407-new/cf/pkg_tcl.in
*** plplot-980407/cf/pkg_tcl.in	Tue Apr  7 20:02:56 1998
--- plplot-980407-new/cf/pkg_tcl.in	Thu May  7 16:31:21 1998
***************
*** 35,41 ****
  tclAPI.c: tclgen.h tclgen_s.h tclgen.c
  
  tclgen.h tclgen_s.h tclgen.c : plapi.tpl
! 	pltclgen
  
  #tclIndex:
  #	mktclidx *.tcl
--- 35,41 ----
  tclAPI.c: tclgen.h tclgen_s.h tclgen.c
  
  tclgen.h tclgen_s.h tclgen.c : plapi.tpl
! 	./pltclgen
  
  #tclIndex:
  #	mktclidx *.tcl
diff -cbNr plplot-980407/cf/sysloc.in plplot-980407-new/cf/sysloc.in
*** plplot-980407/cf/sysloc.in	Tue Apr  7 20:02:57 1998
--- plplot-980407-new/cf/sysloc.in	Thu May  7 16:31:21 1998
***************
*** 635,640 ****
--- 635,648 ----
  		SHLIB_BUILD="ld -assert pure-text -o"
  	    fi
  	;;
+ 	SCO* ) 
+ #	    SO='.so.$(MAJOR_VERSION).$(MINOR_VERSION)'
+ #	    SA='.sa.$(MAJOR_VERSION).$(MINOR_VERSION)'
+ 	    AC_MSG_RESULT([Assuming sco-3.2v5 with gcc. Otherwise, reconfigure --without-shlib])
+ 		SOVERSION='$(MAJOR_VERSION).$(MINOR_VERSION)'
+ 		LDSHARED='gcc -fpic -shared'
+ 		SHLIB_BUILD="gcc -shared -fpic -o"
+ 	;;
  	Linux* )
  	    # Should do something to make sure this is an ELF system, as
  	    # don't have patience for DLL...
diff -cbNr plplot-980407/confdefs.h plplot-980407-new/confdefs.h
*** plplot-980407/confdefs.h	Thu Jan  1 00:00:00 1970
--- plplot-980407-new/confdefs.h	Thu May  7 17:13:37 1998
***************
*** 0 ****
--- 1 ----
+ 
diff -cbNr plplot-980407/config.log plplot-980407-new/config.log
*** plplot-980407/config.log	Thu Jan  1 00:00:00 1970
--- plplot-980407-new/config.log	Thu May  7 17:13:38 1998
***************
*** 0 ****
--- 1,3 ----
+ This file contains any messages produced by compilers while
+ running configure, to aid debugging if configure makes a mistake.
+ 
diff -cbNr plplot-980407/configure plplot-980407-new/configure
*** plplot-980407/configure	Tue Apr  7 20:02:33 1998
--- plplot-980407-new/configure	Thu May  7 16:31:22 1998
***************
*** 3685,3690 ****
--- 3685,3698 ----
  		SHLIB_BUILD="ld -assert pure-text -o"
  	    fi
  	;;
+ 	SCO* ) 
+ #	    SO='.so.$(MAJOR_VERSION).$(MINOR_VERSION)'
+ #	    SA='.sa.$(MAJOR_VERSION).$(MINOR_VERSION)'
+ 	    echo "$ac_t""Assuming sco-3.2v5 with gcc. Otherwise, reconfigure --without-shlib" 1>&6
+ 		SOVERSION='$(MAJOR_VERSION).$(MINOR_VERSION)'
+ 		LDSHARED='gcc -fpic -shared'
+ 		SHLIB_BUILD="gcc -shared -fpic -o"
+ 	;;
  	Linux* )
  	    # Should do something to make sure this is an ELF system, as
  	    # don't have patience for DLL...
***************
*** 4250,4261 ****
  
  
  echo $ac_n "checking for ANSI C header files""... $ac_c" 1>&6
! echo "configure:4254: checking for ANSI C header files" >&5
  if eval "test \"`echo '$''{'ac_cv_header_stdc'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
    cat > conftest.$ac_ext <<EOF
! #line 4259 "configure"
  #include "confdefs.h"
  #include <stdlib.h>
  #include <stdarg.h>
--- 4258,4269 ----
  
  
  echo $ac_n "checking for ANSI C header files""... $ac_c" 1>&6
! echo "configure:4262: checking for ANSI C header files" >&5
  if eval "test \"`echo '$''{'ac_cv_header_stdc'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
    cat > conftest.$ac_ext <<EOF
! #line 4267 "configure"
  #include "confdefs.h"
  #include <stdlib.h>
  #include <stdarg.h>
***************
*** 4263,4269 ****
  #include <float.h>
  EOF
  ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
! { (eval echo configure:4267: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
  ac_err=`grep -v '^ *+' conftest.out`
  if test -z "$ac_err"; then
    rm -rf conftest*
--- 4271,4277 ----
  #include <float.h>
  EOF
  ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
! { (eval echo configure:4275: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
  ac_err=`grep -v '^ *+' conftest.out`
  if test -z "$ac_err"; then
    rm -rf conftest*
***************
*** 4280,4286 ****
  if test $ac_cv_header_stdc = yes; then
    # SunOS 4.x string.h does not declare mem*, contrary to ANSI.
  cat > conftest.$ac_ext <<EOF
! #line 4284 "configure"
  #include "confdefs.h"
  #include <string.h>
  EOF
--- 4288,4294 ----
  if test $ac_cv_header_stdc = yes; then
    # SunOS 4.x string.h does not declare mem*, contrary to ANSI.
  cat > conftest.$ac_ext <<EOF
! #line 4292 "configure"
  #include "confdefs.h"
  #include <string.h>
  EOF
***************
*** 4298,4304 ****
  if test $ac_cv_header_stdc = yes; then
    # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.
  cat > conftest.$ac_ext <<EOF
! #line 4302 "configure"
  #include "confdefs.h"
  #include <stdlib.h>
  EOF
--- 4306,4312 ----
  if test $ac_cv_header_stdc = yes; then
    # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.
  cat > conftest.$ac_ext <<EOF
! #line 4310 "configure"
  #include "confdefs.h"
  #include <stdlib.h>
  EOF
***************
*** 4319,4325 ****
    :
  else
    cat > conftest.$ac_ext <<EOF
! #line 4323 "configure"
  #include "confdefs.h"
  #include <ctype.h>
  #define ISLOWER(c) ('a' <= (c) && (c) <= 'z')
--- 4327,4333 ----
    :
  else
    cat > conftest.$ac_ext <<EOF
! #line 4331 "configure"
  #include "confdefs.h"
  #include <ctype.h>
  #define ISLOWER(c) ('a' <= (c) && (c) <= 'z')
***************
*** 4330,4336 ****
  exit (0); }
  
  EOF
! if { (eval echo configure:4334: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null
  then
    :
  else
--- 4338,4344 ----
  exit (0); }
  
  EOF
! if { (eval echo configure:4342: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null
  then
    :
  else
***************
*** 4357,4373 ****
  do
  ac_safe=`echo "$ac_hdr" | sed 'y%./+-%__p_%'`
  echo $ac_n "checking for $ac_hdr""... $ac_c" 1>&6
! echo "configure:4361: checking for $ac_hdr" >&5
  if eval "test \"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
    cat > conftest.$ac_ext <<EOF
! #line 4366 "configure"
  #include "confdefs.h"
  #include <$ac_hdr>
  EOF
  ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
! { (eval echo configure:4371: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
  ac_err=`grep -v '^ *+' conftest.out`
  if test -z "$ac_err"; then
    rm -rf conftest*
--- 4365,4381 ----
  do
  ac_safe=`echo "$ac_hdr" | sed 'y%./+-%__p_%'`
  echo $ac_n "checking for $ac_hdr""... $ac_c" 1>&6
! echo "configure:4369: checking for $ac_hdr" >&5
  if eval "test \"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
    cat > conftest.$ac_ext <<EOF
! #line 4374 "configure"
  #include "confdefs.h"
  #include <$ac_hdr>
  EOF
  ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
! { (eval echo configure:4379: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
  ac_err=`grep -v '^ *+' conftest.out`
  if test -z "$ac_err"; then
    rm -rf conftest*
***************
*** 4396,4402 ****
  # Extract the first word of "ranlib", so it can be a program name with args.
  set dummy ranlib; ac_word=$2
  echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
! echo "configure:4400: checking for $ac_word" >&5
  if eval "test \"`echo '$''{'ac_cv_prog_RANLIB'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
--- 4404,4410 ----
  # Extract the first word of "ranlib", so it can be a program name with args.
  set dummy ranlib; ac_word=$2
  echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
! echo "configure:4408: checking for $ac_word" >&5
  if eval "test \"`echo '$''{'ac_cv_prog_RANLIB'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
***************
*** 4423,4434 ****
  fi
  
  echo $ac_n "checking for pid_t""... $ac_c" 1>&6
! echo "configure:4427: checking for pid_t" >&5
  if eval "test \"`echo '$''{'ac_cv_type_pid_t'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
    cat > conftest.$ac_ext <<EOF
! #line 4432 "configure"
  #include "confdefs.h"
  #include <sys/types.h>
  #if STDC_HEADERS
--- 4431,4442 ----
  fi
  
  echo $ac_n "checking for pid_t""... $ac_c" 1>&6
! echo "configure:4435: checking for pid_t" >&5
  if eval "test \"`echo '$''{'ac_cv_type_pid_t'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
    cat > conftest.$ac_ext <<EOF
! #line 4440 "configure"
  #include "confdefs.h"
  #include <sys/types.h>
  #if STDC_HEADERS
***************
*** 4457,4473 ****
  
  ac_safe=`echo "vfork.h" | sed 'y%./+-%__p_%'`
  echo $ac_n "checking for vfork.h""... $ac_c" 1>&6
! echo "configure:4461: checking for vfork.h" >&5
  if eval "test \"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
    cat > conftest.$ac_ext <<EOF
! #line 4466 "configure"
  #include "confdefs.h"
  #include <vfork.h>
  EOF
  ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
! { (eval echo configure:4471: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
  ac_err=`grep -v '^ *+' conftest.out`
  if test -z "$ac_err"; then
    rm -rf conftest*
--- 4465,4481 ----
  
  ac_safe=`echo "vfork.h" | sed 'y%./+-%__p_%'`
  echo $ac_n "checking for vfork.h""... $ac_c" 1>&6
! echo "configure:4469: checking for vfork.h" >&5
  if eval "test \"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
    cat > conftest.$ac_ext <<EOF
! #line 4474 "configure"
  #include "confdefs.h"
  #include <vfork.h>
  EOF
  ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
! { (eval echo configure:4479: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
  ac_err=`grep -v '^ *+' conftest.out`
  if test -z "$ac_err"; then
    rm -rf conftest*
***************
*** 4492,4509 ****
  fi
  
  echo $ac_n "checking for working vfork""... $ac_c" 1>&6
! echo "configure:4496: checking for working vfork" >&5
  if eval "test \"`echo '$''{'ac_cv_func_vfork_works'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
    if test "$cross_compiling" = yes; then
    echo $ac_n "checking for vfork""... $ac_c" 1>&6
! echo "configure:4502: checking for vfork" >&5
  if eval "test \"`echo '$''{'ac_cv_func_vfork'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
    cat > conftest.$ac_ext <<EOF
! #line 4507 "configure"
  #include "confdefs.h"
  /* System header to define __stub macros and hopefully few prototypes,
      which can conflict with char vfork(); below.  */
--- 4500,4517 ----
  fi
  
  echo $ac_n "checking for working vfork""... $ac_c" 1>&6
! echo "configure:4504: checking for working vfork" >&5
  if eval "test \"`echo '$''{'ac_cv_func_vfork_works'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
    if test "$cross_compiling" = yes; then
    echo $ac_n "checking for vfork""... $ac_c" 1>&6
! echo "configure:4510: checking for vfork" >&5
  if eval "test \"`echo '$''{'ac_cv_func_vfork'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
    cat > conftest.$ac_ext <<EOF
! #line 4515 "configure"
  #include "confdefs.h"
  /* System header to define __stub macros and hopefully few prototypes,
      which can conflict with char vfork(); below.  */
***************
*** 4526,4532 ****
  
  ; return 0; }
  EOF
! if { (eval echo configure:4530: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then
    rm -rf conftest*
    eval "ac_cv_func_vfork=yes"
  else
--- 4534,4540 ----
  
  ; return 0; }
  EOF
! if { (eval echo configure:4538: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then
    rm -rf conftest*
    eval "ac_cv_func_vfork=yes"
  else
***************
*** 4547,4553 ****
  
  else
    cat > conftest.$ac_ext <<EOF
! #line 4551 "configure"
  #include "confdefs.h"
  /* Thanks to Paul Eggert for this test.  */
  #include <stdio.h>
--- 4555,4561 ----
  
  else
    cat > conftest.$ac_ext <<EOF
! #line 4559 "configure"
  #include "confdefs.h"
  /* Thanks to Paul Eggert for this test.  */
  #include <stdio.h>
***************
*** 4642,4648 ****
    }
  }
  EOF
! if { (eval echo configure:4646: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null
  then
    ac_cv_func_vfork_works=yes
  else
--- 4650,4656 ----
    }
  }
  EOF
! if { (eval echo configure:4654: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null
  then
    ac_cv_func_vfork_works=yes
  else
***************
*** 4665,4676 ****
  fi
  
  echo $ac_n "checking for popen""... $ac_c" 1>&6
! echo "configure:4669: checking for popen" >&5
  if eval "test \"`echo '$''{'ac_cv_func_popen'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
    cat > conftest.$ac_ext <<EOF
! #line 4674 "configure"
  #include "confdefs.h"
  /* System header to define __stub macros and hopefully few prototypes,
      which can conflict with char popen(); below.  */
--- 4673,4684 ----
  fi
  
  echo $ac_n "checking for popen""... $ac_c" 1>&6
! echo "configure:4677: checking for popen" >&5
  if eval "test \"`echo '$''{'ac_cv_func_popen'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
    cat > conftest.$ac_ext <<EOF
! #line 4682 "configure"
  #include "confdefs.h"
  /* System header to define __stub macros and hopefully few prototypes,
      which can conflict with char popen(); below.  */
***************
*** 4693,4699 ****
  
  ; return 0; }
  EOF
! if { (eval echo configure:4697: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then
    rm -rf conftest*
    eval "ac_cv_func_popen=yes"
  else
--- 4701,4707 ----
  
  ; return 0; }
  EOF
! if { (eval echo configure:4705: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then
    rm -rf conftest*
    eval "ac_cv_func_popen=yes"
  else
***************
*** 4724,4735 ****
  # systems (unless it is set already), whether it will be needed or not.
  
  echo $ac_n "checking for caddr_t""... $ac_c" 1>&6
! echo "configure:4728: checking for caddr_t" >&5
  if eval "test \"`echo '$''{'ac_cv_type_caddr_t'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
    cat > conftest.$ac_ext <<EOF
! #line 4733 "configure"
  #include "confdefs.h"
  #include <sys/types.h>
  #if STDC_HEADERS
--- 4732,4743 ----
  # systems (unless it is set already), whether it will be needed or not.
  
  echo $ac_n "checking for caddr_t""... $ac_c" 1>&6
! echo "configure:4736: checking for caddr_t" >&5
  if eval "test \"`echo '$''{'ac_cv_type_caddr_t'+set}'`\" = set"; then
    echo $ac_n "(cached) $ac_c" 1>&6
  else
    cat > conftest.$ac_ext <<EOF
! #line 4741 "configure"
  #include "confdefs.h"
  #include <sys/types.h>
  #if STDC_HEADERS
***************
*** 4869,4874 ****
--- 4877,4885 ----
  	;;
  	Linux* )
  	    cat $srcdir/cf/lib_sh_linux.in	>>Makefile.in
+ 	;;
+ 	SCO* )
+ 	    cat $srcdir/cf/lib_sh_sco.in	>>Makefile.in
  	;;
  	* )
  	    cat $srcdir/cf/lib_sh.in	>>Makefile.in
diff -cbNr plplot-980407/doc/Makefile plplot-980407-new/doc/Makefile
*** plplot-980407/doc/Makefile	Tue Apr  7 20:02:59 1998
--- plplot-980407-new/doc/Makefile	Thu May  7 18:46:10 1998
***************
*** 44,50 ****
  default: info dvi
  
  info:
! 	emacs -batch -l buildinfo.el
  	cp plplot.info $(HOME)/info
  	@echo "PLPLOT info file created and moved to info directory."
  
--- 44,50 ----
  default: info dvi
  
  info:
! 	xemacs -batch -l buildinfo.el
  	cp plplot.info $(HOME)/info
  	@echo "PLPLOT info file created and moved to info directory."
  
diff -cbNr plplot-980407/drivers/plbuf.c plplot-980407-new/drivers/plbuf.c
*** plplot-980407/drivers/plbuf.c	Tue Apr  7 20:03:08 1998
--- plplot-980407-new/drivers/plbuf.c	Thu May  7 18:23:54 1998
***************
*** 615,623 ****
--- 615,626 ----
  	break;
  
      default:
+ 	pldebug("plbuf_control", "Unrecognized command %d, previous %d\n", c, c_old);
+ /* jc: modified for pldebug
  	fprintf(stderr,
  		"plbuf_control: Unrecognized command %d, previous %d\n",
  		c, c_old);
+ */		
      }
      c_old = c;
  }
diff -cbNr plplot-980407/drivers/tk.c plplot-980407-new/drivers/tk.c
*** plplot-980407/drivers/tk.c	Tue Apr  7 20:03:09 1998
--- plplot-980407-new/drivers/tk.c	Thu May  7 18:23:54 1998
***************
*** 94,100 ****
  #include <fcntl.h>
  #include <errno.h>
  #include <signal.h>
! 
  #ifdef PLD_dp
  #include <dp.h>
  #endif
--- 94,101 ----
  #include <fcntl.h>
  #include <errno.h>
  #include <signal.h>
! #include <sys/wait.h>	// jc: waitpid
! extern pid_t    vfork(void);	// jc:
  #ifdef PLD_dp
  #include <dp.h>
  #endif
***************
*** 224,229 ****
--- 225,231 ----
      pls->dev_flush = 1;		/* Handle our own flushes */
      pls->dev_fill0 = 1;		/* Handle solid fills */
      pls->dev_fill1 = 1;		/* Handle pattern fills */
+     pls->server_nokill = 1; /* jc: dont kill if ^C */
  
  /* Specify buffer size if not yet set (can be changed by -bufmax option).  */
  /* A small buffer works best for socket communication */
***************
*** 704,709 ****
--- 706,717 ----
  /* Instantiate a TCL interpreter, and get rid of the exec command */
  
      dev->interp = Tcl_CreateInterp();
+ #if (TCL_MAJOR_VERSION == 7 && TCL_MINOR_VERSION > 4 )    
+     if (Tcl_Init(dev->interp) != TCL_OK) {	// jc:
+     fprintf(stderr, "%s\n", dev->interp->result);
+     abort_session(pls, "Unable to initialize Tcl");
+     }
+ #endif
      tcl_cmd(pls, "rename exec {}");
  
  /* Initialize top level window */
***************
*** 720,725 ****
--- 728,734 ----
  	char name[80];
  	sprintf(name, "_%s_%02d", pls->program, pls->ipls); 
  	Tcl_SetVar(dev->interp, "dp", "0", TCL_GLOBAL_ONLY);
+ 	Tcl_SetVar2(dev->interp, "env", "DISPLAY", getenv("DISPLAY"), TCL_GLOBAL_ONLY); // jc: tk_init need this
  	dev->updatecmd = "update";
  	if (pltk_toplevel(&dev->w, dev->interp, pls->FileName, name, name))
  	    abort_session(pls, "Unable to create top-level window");
***************
*** 1092,1097 ****
--- 1101,1119 ----
      argv[i++] = "-e";			/* Startup script */
      argv[i++] = "plserver_init";
  
+ /* jc: Haaaaa. This is it! Without the next two statements, control is either
+  * in tk or octave, because tcl/tk was in interative mode (I think).
+  * This had the inconvenient of having to press the enter key or cliking a
+  * mouse button in the plot window after every plot.
+  *
+  * This couldn't be done with
+  *	Tcl_SetVar(dev->interp, "tcl_interactive", "0", TCL_GLOBAL_ONLY);
+  * after plserver has been launched? It doesnt work, hoewever.
+  */
+ 
+     argv[i++] = "-file";			/* Startup file */
+     argv[i++] = "/dev/null";
+ 
      if (pls->auto_path != NULL) {
  	argv[i++] = "-auto_path";	/* Additional directory(s) */
  	argv[i++] = pls->auto_path;	/* to autoload */
***************
*** 1294,1299 ****
--- 1316,1322 ----
      bg = pls->cmap0[0].b | (pls->cmap0[0].g << 8) | (pls->cmap0[0].r << 16);
      if (bg > 0) {
  	sprintf(command, "$plwidget configure -bg #%06x", bg);
+ 	sprintf(command, "$plwidget configure -plbg #%06x", bg);	// jc:
  	server_cmd( pls, command, 0 );
      }
  
***************
*** 1966,1972 ****
  	return 1;
      }
  #else
!     Tk_Init( interp );
  #endif
  
      Tcl_VarEval(interp, wcmd, (char *) NULL);
--- 1989,1998 ----
  	return 1;
      }
  #else
!     if (Tk_Init( interp )) {	// jc: if added
!     fprintf(stderr,"tk_init:%s\n", interp->result); // jc:
!     return 1;
!     }
  #endif
  
      Tcl_VarEval(interp, wcmd, (char *) NULL);
diff -cbNr plplot-980407/drivers/xwin.c plplot-980407-new/drivers/xwin.c
*** plplot-980407/drivers/xwin.c	Tue Apr  7 20:03:10 1998
--- plplot-980407-new/drivers/xwin.c	Thu May  7 18:23:54 1998
***************
*** 933,938 ****
--- 933,942 ----
  
  /* Window title */
  
+     if (plsc->plwindow){    // jc:
+       sprintf(header, "%s", plsc->plwindow);
+     }
+     else
      sprintf(header, "PLplot");
  
  /* Window creation */
diff -cbNr plplot-980407/examples/c/x17c.c plplot-980407-new/examples/c/x17c.c
*** plplot-980407/examples/c/x17c.c	Tue Apr  7 20:03:14 1998
--- plplot-980407-new/examples/c/x17c.c	Thu May  7 18:23:54 1998
***************
*** 1,8 ****
! /* $Id$
   * $Log$
   * Revision 1.1.2.1  2001/01/22 09:05:31  rlaboiss
   * Debian stuff corresponding to package version 4.99j-11
   *
-  * Revision 1.6  1998/04/07  17:34:52  furnish
-  * Fixed comment bug which annoyed fussy C compiler.
-  *
   * Revision 1.5  1995/06/01  21:40:14  mjl
   * All C demo files: changed file inclusion to use quotes instead of angle
   * brackets so that dependencies are retained during development.
--- 1,9 ----
! /* jc: This is a much reworked version of x17c.c, a non-working demo
!  * on the distribution.
!  */
! 
! /* $Id$
   * $Log$
   * Revision 1.1.2.1  2001/01/22 09:05:31  rlaboiss
   * Debian stuff corresponding to package version 4.99j-11
   *
   * Revision 1.5  1995/06/01  21:40:14  mjl
   * All C demo files: changed file inclusion to use quotes instead of angle
   * brackets so that dependencies are retained during development.
***************
*** 21,27 ****
   * Preliminary stab at a strip chart demo (doesn't work yet).
  */
  
! /* Plots a simple stripchart.
   * Eventually I want a really cool demo here: slowly evolving plots of
   * say density and temperature.  These only need to get updated every so
   * often.  And then at the bottom some strip charts of energy or such
--- 22,28 ----
   * Preliminary stab at a strip chart demo (doesn't work yet).
  */
  
! /* Plots a simple stripchart with four pens.
   * Eventually I want a really cool demo here: slowly evolving plots of
   * say density and temperature.  These only need to get updated every so
   * often.  And then at the bottom some strip charts of energy or such
***************
*** 29,72 ****
   */
  
  #include "plcdemos.h"
! 
! /* Data declarations for stripcharts. */
! 
! typedef struct {
!     PLINT npts, nptsmax;
!     PLFLT *x, *y;
!     PLFLT xmin, xmax, ymin, ymax, xjump, xlen;
! 
!     char *xspec, *yspec, *labx, *laby, *labtop;
!     PLINT colbox, colline, collab;
! } PLStrip;
! 
! static int sid;				/* strip id number */
! static PLStrip *strip[100];		/* Array of pointers */
! static PLStrip *stripc;			/* current strip chart */
! 
! /* Create 1d stripchart */
! 
! void
! plstripc(PLINT *id, char *xspec, char *yspec,
! 	 PLFLT xmin, PLFLT xmax, PLFLT xjump, PLFLT ymin, PLFLT ymax,
! 	 PLINT colbox, PLINT colline, PLINT collab,
! 	 char *labx, char *laby, char *labtop);
! 
! /* Generates a complete stripchart plot.  */
! 
! void
! plstrip_gen(PLStrip *strip);
! 
! /* Add a point to a stripchart.  */
! 
! void
! plstripa(PLINT id, PLFLT x, PLFLT y);
! 
! /* Deletes and releases memory used by a stripchart.  */
! 
! void
! plstripd(PLINT id);
  
  /*--------------------------------------------------------------------------*\
   * main program
--- 30,36 ----
   */
  
  #include "plcdemos.h"
! #include <poll.h>
  
  /*--------------------------------------------------------------------------*\
   * main program
***************
*** 75,114 ****
  int
  main(int argc, char *argv[])
  {
!     PLINT id, n, nsteps = 1000;
!     PLFLT y, ymin, ymax;
!     PLFLT t, tmin, tmax, tjump, dt;
!     PLINT colbox, collab, colline;
! 
!     fprintf(stderr, "Sorry, this demo not yet in working order\n");
!     exit(1);
  
  /* plplot initialization */
  /* Parse and process command line arguments */
  
      (void) plParseOpts(&argc, argv, PL_PARSE_FULL);
  
!     plSetOpt("db", "");
      plSetOpt("np", "");
  
- /* Initialize plplot */
- 
-     plinit();
- 
- /* Create strip chart */
- 
  /* User sets up plot completely except for window and data 
   * Eventually settings in place when strip chart is created will be
   * remembered so that multiple strip charts can be used simultaneously.
   */
  
-     pladv(0);
- 
- /* For now just a standard viewport */
- 
-     plvsta();
-     plcol(4);
- 
  /* Specify some reasonable defaults for ymin and ymax */
  /* The plot will grow automatically if needed (but not shrink) */
  
--- 39,65 ----
  int
  main(int argc, char *argv[])
  {
!     PLINT id1, id2, n, autoy, acc, nsteps = 1000;
!     PLFLT y1, y2, y3, y4, ymin, ymax, xlab, ylab;
!     PLFLT t, tmin, tmax, tjump, dt, noise;
!     PLINT colbox, collab, colline[4], styline[4];
!     char *legline[4], toplab[20];
  
  /* plplot initialization */
  /* Parse and process command line arguments */
  
      (void) plParseOpts(&argc, argv, PL_PARSE_FULL);
  
! // If db is used the plot is much more smooth. However, because of the
! // async X behaviour, one does not have a real-time scripcharter.
! //    plSetOpt("db", ""); 
      plSetOpt("np", "");
  
  /* User sets up plot completely except for window and data 
   * Eventually settings in place when strip chart is created will be
   * remembered so that multiple strip charts can be used simultaneously.
   */
  
  /* Specify some reasonable defaults for ymin and ymax */
  /* The plot will grow automatically if needed (but not shrink) */
  
***************
*** 120,328 ****
  /* This can accomodate adaptive timesteps */
  
      tmin = 0.;
!     tmax = 100.;
!     tjump = 25.;
  
  /* Axes options same as plbox. */
  /* Only automatic tick generation and label placement allowed */
  /* Eventually I'll make this fancier */
  
      colbox = 1;
-     colline = 4;
      collab = 3;
  
!     plstripc(&id, "bcnst", "bcnstv",
  	     tmin, tmax, tjump, ymin, ymax,
! 	     colbox, colline, collab,
! 	     "t", "d", "displacement vs time");
  
  /* This is to represent a loop over time */
  /* Let's try a random walk process */
  
!     y = 0.0;
      dt = 0.1;
-     for (n = 0; n < nsteps; n++) {
- 	t = n * dt;
- 	y = y + rand();
  
! 	plstripa(id, t, y);
      }
  
  /* Destroy strip chart and it's memory */
  
!     plstripd(id);
! 
      plend();
      exit(0);
- }
- 
- /*--------------------------------------------------------------------------*\
-  * plstripc
-  *
-  * Create 1d stripchart.
- \*--------------------------------------------------------------------------*/
- 
- void
- plstripc(PLINT *id, char *xspec, char *yspec,
- 	 PLFLT xmin, PLFLT xmax, PLFLT xjump, PLFLT ymin, PLFLT ymax,
- 	 PLINT colbox, PLINT colline, PLINT collab,
- 	 char *labx, char *laby, char *labtop)
- {
-     int i;
- 
- /* Get a free strip id and allocate it */
- 
-     for (i = 0; i < 100; i++) {
- 	if (strip[i] == NULL)
- 	    break;
-     }
- 
-     if (i == 0) {
- 	fprintf(stderr, "plstripc: Cannot create new strip chart\n");
- 	*id = -1;
- 	return;
-     }
-     else {
- 	sid = *id = i;
- 	strip[sid] = (PLStrip *) malloc((size_t) sizeof(PLStrip));
- 	if (strip[sid] == NULL)
- 	    plexit("plstripc: Out of memory.");
- 
- 	memset((char *) strip[sid], 0, sizeof(PLStrip));
-     }
- 
- /* Fill up the struct with all relevant info */
- 
-     stripc = strip[sid];
- 
-     stripc->npts = 0;
-     stripc->nptsmax = 100;
-     stripc->x = (PLFLT *) malloc((size_t) sizeof(PLFLT) * stripc->nptsmax);;
-     stripc->y = (PLFLT *) malloc((size_t) sizeof(PLFLT) * stripc->nptsmax);;
-     if (stripc->x == NULL || stripc->y == NULL)
- 	plexit("plstripc: Out of memory.");
- 
-     stripc->xmin = xmin;
-     stripc->xmax = xmax;
-     stripc->ymin = ymin;
-     stripc->ymax = ymax;
-     stripc->xjump = xjump;
-     stripc->xlen = xmax - xmin;
-     stripc->xspec = xspec;
-     stripc->yspec = yspec;
-     stripc->labx = labx;
-     stripc->laby = laby;
-     stripc->labtop = labtop;
-     stripc->colbox = colbox;
-     stripc->colline = colline;
-     stripc->collab = collab;
- 
- /* Generate the plot */
- 
-     plstrip_gen(stripc);
- }
- 
- /*--------------------------------------------------------------------------*\
-  * plstrip_gen
-  *
-  * Generates a complete stripchart plot.  Used either initially or
-  * during rescaling.
- \*--------------------------------------------------------------------------*/
- 
- void
- plstrip_gen(PLStrip *strip)
- {
- 
- /* Set up window */
- 
-     plwind(strip->xmin, strip->xmax, strip->ymin, strip->ymax);
- 
- /* Draw box */
- 
-     plcol(strip->colbox);
-     plbox(strip->xspec, 0.0, 0, strip->yspec, 0.0, 0);
- 
-     plcol(strip->collab);
-     pllab(strip->labx, strip->laby, strip->labtop);
- 
-     if (strip->npts > 0) {
- 	plcol(strip->colline);
- 	plline(strip->npts, strip->x, strip->y);
-     }
- }
- 
- /*--------------------------------------------------------------------------*\
-  * plstripa
-  *
-  * Add a point to a stripchart.  
-  * Allocates memory and rescales as necessary.
- \*--------------------------------------------------------------------------*/
- 
- void
- plstripa(PLINT id, PLFLT x, PLFLT y)
- {
-     int i, istart;
- 
-     stripc = strip[id];
- 
- /* Add new point, allocating memory if necessary */
- 
-     if (++stripc->npts > stripc->nptsmax) {
- 	stripc->nptsmax += 32;
- 	stripc->x = (PLFLT *) realloc((void *) stripc->x, stripc->nptsmax);
- 	stripc->y = (PLFLT *) realloc((void *) stripc->y, stripc->nptsmax);
-     }
-     stripc->x[stripc->npts-1] = x;
-     stripc->y[stripc->npts-1] = y;
- 
-     stripc->xmax = x;
-     stripc->ymax = MAX(y, stripc->ymax);
-     stripc->ymin = MIN(y, stripc->ymin);
- 
- /* Now either plot new point or regenerate plot */
- 
-     if (stripc->xmax - stripc->xmin < stripc->xlen) {
- 	plP_movwor(stripc->x[stripc->npts-2], stripc->y[stripc->npts-2]);
- 	plP_drawor(stripc->x[stripc->npts-1], stripc->y[stripc->npts-1]);
-     }
-     else {
- 
- /* Regenerating plot */
- /* First push back the x scale */
- 
- 	stripc->xmin -= stripc->xjump;
- 	stripc->xmax -= stripc->xjump;
- 	istart = 0;
- 	while (stripc->x[istart] - stripc->xjump < 0.)
- 	    istart++;
- 
- 	stripc->npts -= istart;
- 	for (i = 0; i < stripc->npts; i++) {
- 	    stripc->x[i] = stripc->x[i+istart];
- 	    stripc->y[i] = stripc->y[i+istart];
- 	}
- 
- 	stripc->xmin = stripc->x[0];
- 	stripc->xmax = stripc->x[stripc->npts];
- 
- /* Now do the real work */
- 
- 	plstrip_gen(stripc);
-     }
- }
- 
- /*--------------------------------------------------------------------------*\
-  * plstripd
-  *
-  * Deletes and releases memory used by a stripchart.  
- \*--------------------------------------------------------------------------*/
- 
- void
- plstripd(PLINT id)
- {
-     stripc = strip[id];
- 
-     free((void *) stripc->x);
-     free((void *) stripc->y);
-     free((void *) stripc);
  }
--- 71,148 ----
  /* This can accomodate adaptive timesteps */
  
      tmin = 0.;
!     tmax = 10.;
!     tjump = 0.3;	// percentage of plot to jump
  
  /* Axes options same as plbox. */
  /* Only automatic tick generation and label placement allowed */
  /* Eventually I'll make this fancier */
  
      colbox = 1;
      collab = 3;
+     styline[0] = colline[0] = 2;	// pens color and line style
+     styline[1] = colline[1] = 3;
+     styline[2] = colline[2] = 4;
+     styline[3] = colline[3] = 5;    
+ 
+     legline[0] = "sum";				// pens legend
+     legline[1] = "sin";
+     legline[2] = "sin*noi";
+     legline[3] = "sin+noi";
+ 
+     xlab = 0.; ylab = 0.25;	// legend position 
+ 
+     autoy = 0;	// autoscale y
+     acc = 1;	// dont scrip, accumulate
+ 
+ /* Initialize plplot */
  
!     plinit();
!     pladv(0);    
!     plvsta();    
! 
!     plstripc(&id1, "bcnst", "bcnstv",
  	     tmin, tmax, tjump, ymin, ymax,
! 		xlab, ylab,
! 		autoy, acc,
! 	    colbox, collab,
! 		colline, styline, legline, 
! 	    "t", "", "Strip chart demo"); 
! 
!     autoy = 0;	// autoscale y
!     acc = 1;	// accumulate
  
  /* This is to represent a loop over time */
  /* Let's try a random walk process */
  
!     y1 = y2 = y3 = y4 = 0.0;
      dt = 0.1;
  
!     for (n = 0; n < nsteps; n++) {
! 		poll(0,0,10);	// wait a little (10 ms) to simulate time elapsing
! 		t = (double)n * dt;
! 		noise = drand48() - 0.5;
! 		y1 = y1 + noise;
! 		y2 = sin(t*3.1415926/18.);
! 		y3 = y2 * noise;
! 		y4 = y2 + noise/3.;
! 	
! 	// there is no need for all pens to have the same number of points
! 	// or beeing equally time spaced.
! 		
! 		if (n%2)	
! 			plstripa(id1, 0, t, y1);
! 		if (n%3)
! 			plstripa(id1, 1, t, y2);
! 		if (n%4)
! 			plstripa(id1, 2, t, y3);
! 		if (n%5)
! 			plstripa(id1, 3, t, y4);
      }
  
  /* Destroy strip chart and it's memory */
  
!     plstripd(id1);
      plend();
      exit(0);
  }
diff -cbNr plplot-980407/examples/c/x18c.c plplot-980407-new/examples/c/x18c.c
*** plplot-980407/examples/c/x18c.c	Tue Apr  7 20:03:14 1998
--- plplot-980407-new/examples/c/x18c.c	Thu May  7 18:23:54 1998
***************
*** 121,128 ****
  
  void test_poly(int k)
  {
!     float *x, *y, *z;
!     float theta, phi;
      int i, j;
      float pi, two_pi;
      int draw[][4] = { { 1, 1, 1, 1 },
--- 121,128 ----
  
  void test_poly(int k)
  {
!     PLFLT *x, *y, *z;
!     PLFLT theta, phi;
      int i, j;
      float pi, two_pi;
      int draw[][4] = { { 1, 1, 1, 1 },
diff -cbNr plplot-980407/include/plplot.h plplot-980407-new/include/plplot.h
*** plplot-980407/include/plplot.h	Tue Apr  7 20:03:34 1998
--- plplot-980407-new/include/plplot.h	Thu May  7 16:31:22 1998
***************
*** 546,551 ****
--- 546,554 ----
  #define    plssym	c_plssym
  #define    plstar	c_plstar
  #define    plstart	c_plstart
+ #define    plstripa	c_plstripa
+ #define    plstripc	c_plstripc
+ #define    plstripd	c_plstripd
  #define    plstyl	c_plstyl
  #define    plsvpa	c_plsvpa
  #define    plsxax	c_plsxax
***************
*** 656,661 ****
--- 659,667 ----
  #define    c_plssym	plssym
  #define    c_plstar	plstar
  #define    c_plstart	plstart
+ #define    c_plstripa	plstripa
+ #define    c_plstripc	plstripc
+ #define    c_plstripd	plstripd
  #define    c_plstyl	plstyl
  #define    c_plsvpa	plsvpa
  #define    c_plsxax	plsxax
***************
*** 1239,1244 ****
--- 1245,1271 ----
  
  void
  c_plstart(const char *devname, PLINT nx, PLINT ny);
+ 
+ /* Create 1d stripchart */
+ 
+ void
+ c_plstripc(PLINT *id, char *xspec, char *yspec,
+ 	PLFLT xmin, PLFLT xmax, PLFLT xjump, PLFLT ymin, PLFLT ymax,
+ 	PLFLT xlpos, PLFLT ylpos,
+ 	PLINT y_ascl, PLINT acc,
+ 	PLINT colbox, PLINT collab,
+ 	PLINT colline[], PLINT styline[], char *legline[],
+ 	char *labx, char *laby, char *labtop);
+ 
+ /* Add a point to a stripchart.  */
+ 
+ void
+ c_plstripa(PLINT id, PLINT pen, PLFLT x, PLFLT y);
+ 
+ /* Deletes and releases memory used by a stripchart.  */
+ 
+ void
+ c_plstripd(PLINT id);
  
  /* Set up a new line style */
  
diff -cbNr plplot-980407/src/plargs.c plplot-980407-new/src/plargs.c
*** plplot-980407/src/plargs.c	Tue Apr  7 20:03:43 1998
--- plplot-980407-new/src/plargs.c	Thu May  7 18:23:54 1998
***************
*** 176,181 ****
--- 176,183 ----
  
      See plrender.c for examples of actual usage.  */
  
+ #include <stdio.h>		// jc: popen
+ #include  <string.h>	// jc: strdup
  #include "plplotP.h"
  #include <ctype.h>
  
***************
*** 1803,1809 ****
  static int
  opt_plwindow(char *opt, char *optarg, void *client_data)
  {
!     plsc->plwindow = optarg;
      return 0;
  }
  
--- 1805,1813 ----
  static int
  opt_plwindow(char *opt, char *optarg, void *client_data)
  {
! 
! // jc:    plsc->plwindow = optarg;
!     plsc->plwindow = strdup(optarg);	// jc: somehow the original string is lost
      return 0;
  }
  
diff -cbNr plplot-980407/src/plctrl.c plplot-980407-new/src/plctrl.c
*** plplot-980407/src/plctrl.c	Tue Apr  7 20:03:44 1998
--- plplot-980407-new/src/plctrl.c	Thu May  7 18:23:54 1998
***************
*** 83,89 ****
  	don't know where it should go, put it here.  
  */
  
! #define DEBUG
  
  #include "plplotP.h"
  
--- 83,89 ----
  	don't know where it should go, put it here.  
  */
  
! int readlink (char *path, char *buf, int bufsiz); // jc:
  
  #include "plplotP.h"
  
diff -cbNr plplot-980407/src/plstripc.c plplot-980407-new/src/plstripc.c
*** plplot-980407/src/plstripc.c	Thu Jan  1 00:00:00 1970
--- plplot-980407-new/src/plstripc.c	Thu May  7 18:23:54 1998
***************
*** 0 ****
--- 1,354 ----
+ /* jc: This is a much reworked version of x17c.c, a non-working demo
+  * on the distribution.
+  *
+  * ToDo: better way of clearing plot. search for `plvsta'.
+  */
+ 
+ /* $Id$
+  * $Log$
+  * Revision 1.1.2.1  2001/01/22 09:05:31  rlaboiss
+  * Debian stuff corresponding to package version 4.99j-11
+  *
+  * Revision 1.5  1995/06/01  21:40:14  mjl
+  * All C demo files: changed file inclusion to use quotes instead of angle
+  * brackets so that dependencies are retained during development.
+  *
+  * Revision 1.4  1995/04/12  08:19:02  mjl
+  * Changes to all C demos: now include "plcdemos.h" to get all startup
+  * definitions and includes that are useful to share between them.
+  *
+  * Revision 1.3  1995/03/16  23:18:59  mjl
+  * All example C programs: changed plParseInternalOpts() call to plParseOpts().
+  *
+  * Revision 1.2  1994/08/05  09:28:42  mjl
+  * Put in an early bail-out since it's not working yet.
+  *
+  * Revision 1.1  1994/04/08  12:08:54  mjl
+  * Preliminary stab at a strip chart demo (doesn't work yet).
+ */
+ 
+ /* Plots a simple stripchart.
+  * Eventually I want a really cool demo here: slowly evolving plots of
+  * say density and temperature.  These only need to get updated every so
+  * often.  And then at the bottom some strip charts of energy or such
+  * that are continually updated.
+  */
+ 
+ #include "plplotP.h"
+ #include "plplot.h"
+ 
+ /* Data declarations for stripcharts. */
+ 
+ #define PEN	4
+ 
+ typedef struct {
+     PLFLT xmin, xmax, ymin, ymax, xjump, xlen;
+     PLFLT wxmin, wxmax, wymin, wymax;	// FIXME - some redundancy might exist
+     char *xspec, *yspec, *labx, *laby, *labtop;
+     PLINT y_ascl, acc, colbox, collab;
+     PLFLT xlpos, ylpos;
+     PLFLT *x[PEN], *y[PEN];
+     PLINT npts[PEN], nptsmax[PEN];
+ 	PLINT colline[PEN], styline[PEN];
+ 	char *legline[PEN];
+ } PLStrip;
+ 
+ static int sid;					/* strip id number */
+ static PLStrip *strip[100];		/* Array of pointers */
+ static PLStrip *stripc;			/* current strip chart */
+ 
+ /* Generates a complete stripchart plot.  */
+ 
+ static void
+ plstrip_gen(PLStrip *strip);
+ 
+ /* draw legend */
+ 
+ static void
+ plstrip_legend(PLStrip *strip, int flag);
+ 
+ char *strdup(char *);
+ /*--------------------------------------------------------------------------*\
+  * plstripc
+  *
+  * Create 1d stripchart.
+ \*--------------------------------------------------------------------------*/
+ 
+ void
+ plstripc(PLINT *id, char *xspec, char *yspec,
+ 	PLFLT xmin, PLFLT xmax, PLFLT xjump, PLFLT ymin, PLFLT ymax,
+ 	PLFLT xlpos, PLFLT ylpos,
+ 	PLINT y_ascl, PLINT acc,
+ 	PLINT colbox,  PLINT collab,
+ 	PLINT *colline,  PLINT *styline, char *legline[],
+ 	char *labx, char *laby, char *labtop)
+ {
+     int i;
+ 
+ /* Get a free strip id and allocate it */
+ 
+     for (i = 0; i < 100; i++)
+ 		if (strip[i] == NULL)
+ 		    break;
+ 
+     if (i == 100) {
+ 		plabort("plstripc: Cannot create new strip chart");
+ 		*id = -1;
+ 		return;
+     }
+     else {
+ 		sid = *id = i;
+ 		strip[sid] = (PLStrip *) calloc(1, (size_t) sizeof(PLStrip));
+ 		if (strip[sid] == NULL) {
+ 	    	plabort("plstripc: Out of memory.");
+ 	    	*id = -1;
+ 	    	return;
+ 	    }
+     }
+ 
+ /* Fill up the struct with all relevant info */
+ 
+     stripc = strip[sid];
+ 
+     for (i=0; i<PEN; i++) {
+ 	    stripc->npts[i] =  0;
+ 	    stripc->nptsmax[i] =  100;
+ 	    stripc->colline[i] = colline[i];
+ 	    stripc->styline[i] = styline[i];
+ 		stripc->legline[i] = strdup(legline[i]); // strdup() is needed because value must persist after call has finished
+ 	    stripc->x[i] = (PLFLT *) malloc((size_t) sizeof(PLFLT) * stripc->nptsmax[i]);;
+ 	    stripc->y[i] = (PLFLT *) malloc((size_t) sizeof(PLFLT) * stripc->nptsmax[i]);;
+ 	    if (stripc->x[i] == NULL || stripc->y[i] == NULL) {
+ 			plabort("plstripc: Out of memory.");
+ 			plstripd(sid);
+ 			*id = -1;
+ 			return;
+ 		}
+ 	}
+ 
+ 	stripc->xlpos = xlpos;		// legend position [0..1]
+ 	stripc->ylpos = ylpos;	
+     stripc->xmin = xmin;		// initial bounding box
+     stripc->xmax = xmax;
+     stripc->ymin = ymin;
+     stripc->ymax = ymax;
+     stripc->xjump = xjump;		// jump x step(%) when x attains xmax (xmax is then set to xmax+xjump)
+     stripc->xlen = xmax - xmin;	// lenght of x scale
+     stripc->y_ascl = y_ascl;	// autoscale y between x jump scale
+     stripc->acc = acc;			// accumulate plot (not really stripchart)
+     stripc->xspec = strdup(xspec);	// x axis specification
+     stripc->yspec = strdup(yspec);	// strdup() is needed because value must persist after call has finished
+     stripc->labx = strdup(labx);		// x label
+     stripc->laby = strdup(laby);
+     stripc->labtop = strdup(labtop);	// title 
+     stripc->colbox = colbox;	// box color
+     stripc->collab = collab;	// label color
+ 
+ /* Generate the plot */
+ 
+     plstrip_gen(stripc);
+ 	plstrip_legend(stripc,1);
+ }
+ 
+ void plstrip_legend(PLStrip *stripc, int first)
+ {
+ 	int i;
+ 	PLFLT sc, dy;
+ 	
+     // draw legend
+ 	
+ 	plgchr(&sc, &dy);
+ 	sc = dy = dy/100;
+ 	plwind(-0.01, 1.01, -0.01, 1.01);
+ 	for (i=0; i<PEN; i++) {
+ 		if (stripc->npts[i] || first) {
+ 			plcol(stripc->colline[i]); pllsty(stripc->styline[i]);
+ 			pljoin(stripc->xlpos, stripc->ylpos - sc, stripc->xlpos + 0.1, stripc->ylpos - sc);
+ 			plcol(stripc->collab);
+ 			plptex(stripc->xlpos + 0.11, stripc->ylpos - sc, 0., 0., 0, stripc->legline[i]);sc += dy;
+ 		}
+ 	}
+     plwind(stripc->xmin, stripc->xmax, stripc->ymin, stripc->ymax);
+     plflush();
+ }
+ 
+ /*--------------------------------------------------------------------------*\
+  * plstrip_gen
+  *
+  * Generates a complete stripchart plot.  Used either initially or
+  * during rescaling.
+ \*--------------------------------------------------------------------------*/
+ PLFLT oxm,oxM, oym,oyM;
+ void
+ plstrip_gen(PLStrip *strip)
+ {
+ 	int i;
+ 	PLFLT x[]={0.,1.,1.,0.}, y[]={0.,0.,1.,1.};
+ 
+ /* Set up window */
+ 
+ /*	dont know how to clear only one subwindow. Any hints?) */
+  
+ //	plbop();
+ //	pleop();
+ //	pladv(0);
+ 
+ //	what about this way? 
+ 
+ 		plvpor(0,1,0,1);
+ 		plwind(0,1,0,1);
+ 		plcol(0);plpsty(0);
+ 		plfill(4, &x[0], &y[0]);
+ 		plvsta();
+ 
+ /* Draw box and same window dimensions */
+ strip->wxmin=strip->xmin; strip->wxmax=strip->xmax;
+ strip->wymin=strip->ymin; strip->wymax=strip->ymax; // FIXME - can exist some redundancy here
+ 
+     plwind(strip->xmin, strip->xmax, strip->ymin, strip->ymax);
+     
+ 	pllsty(1);
+     plcol(strip->colbox);
+     plbox(strip->xspec, 0.0, 0, strip->yspec, 0.0, 0);
+ 
+     plcol(strip->collab);
+     pllab(strip->labx, strip->laby, strip->labtop);
+ 	 
+     for (i=0; i<PEN; i++) {
+ 	    if (strip->npts[i] > 0) {
+ 			plcol(strip->colline[i]);pllsty(strip->styline[i]);
+ 			plline(strip->npts[i], strip->x[i], strip->y[i]);
+ 	    }
+     }
+ 
+ 	plstrip_legend(strip,0);
+ }
+ 
+ /*--------------------------------------------------------------------------*\
+  * plstripa
+  *
+  * Add a point to a stripchart.  
+  * Allocates memory and rescales as necessary.
+ \*--------------------------------------------------------------------------*/
+ 
+ void
+ plstripa(PLINT id, PLINT p, PLFLT x, PLFLT y)
+ {
+     int j, yasc=0, istart;
+ 
+     if (p >= PEN) {
+     	plabort("Non existent pen");
+     	return;
+     }
+ 
+     if (strip[id] == NULL) {
+     	plabort("Non existent stripchart");
+     	return;
+     }
+ 
+     stripc = strip[id];
+ 
+ /* Add new point, allocating memory if necessary */
+ 
+     if (++stripc->npts[p] > stripc->nptsmax[p]) {
+ 		stripc->nptsmax[p] += 32;
+ 		stripc->x[p] = (PLFLT *) realloc((void *) stripc->x[p], sizeof(PLFLT)*stripc->nptsmax[p]);
+ 		stripc->y[p] = (PLFLT *) realloc((void *) stripc->y[p], sizeof(PLFLT)*stripc->nptsmax[p]);
+ 		if (stripc->x[p] == NULL || stripc->y[p] == NULL) {
+ 			plabort("plstripc: Out of memory.");
+ 			plstripd(id);
+ 			return;
+ 		}
+     }
+     
+     stripc->x[p][stripc->npts[p]-1] = x;
+     stripc->y[p][stripc->npts[p]-1] = y;
+ 
+ //    if ( x > stripc->xmax)
+ 	    stripc->xmax = x;
+ 	    
+ 	if (stripc->y_ascl == 1 && (y > stripc->ymax || y < stripc->ymin))
+ 		yasc=1;
+ 		
+     stripc->ymax = MAX(y, stripc->ymax);
+     stripc->ymin = MIN(y, stripc->ymin);
+ 	
+ /* Now either plot new point or regenerate plot */
+ 
+     if (stripc->xmax - stripc->xmin < stripc->xlen) {
+ 		if( yasc == 0) {
+ 
+ // If user has changed subwindow, make shure we have the correct one
+ plvsta();
+ plwind(stripc->wxmin, stripc->wxmax, stripc->wymin, stripc->wymax); // FIXME - can exist some redundancy here
+ 
+ 		plcol(stripc->colline[p]); pllsty(stripc->styline[p]);
+ 		plP_movwor(stripc->x[p][stripc->npts[p]-2], stripc->y[p][stripc->npts[p]-2]);
+ 		plP_drawor(stripc->x[p][stripc->npts[p]-1], stripc->y[p][stripc->npts[p]-1]);
+ 		plflush();
+     	}
+ 		else {
+ 		stripc->xmax = stripc->xmin + stripc->xlen;
+ 	    plstrip_gen(stripc);
+ 	    }
+ 	}
+     else {
+ /* Regenerating plot */
+ 	if (stripc->acc == 0) {
+ 		for (j=0; j<PEN; j++) {
+ 			if (stripc->npts[j] > 0) {
+ 				istart = 0;
+ 				while (stripc->x[j][istart] < stripc->xmin + stripc->xlen*stripc->xjump)
+ 				    istart++;
+ 			
+ 				stripc->npts[j] = stripc->npts[j] - istart;
+ 	/* make it faster
+ 				for (i = 0; i < stripc->npts[j]; i++) {
+ 				    stripc->x[j][i] = stripc->x[j][i+istart];
+ 				    stripc->y[j][i] = stripc->y[j][i+istart];
+ 				}
+ 	*/
+ 				memcpy( &stripc->x[j][0], &stripc->x[j][istart], (stripc->npts[j])*sizeof(PLFLT));
+ 				memcpy( &stripc->y[j][0], &stripc->y[j][istart], (stripc->npts[j])*sizeof(PLFLT));
+ 			}
+ 		}
+ 	} else
+ 		stripc->xlen = stripc->xlen * (1 + stripc->xjump);
+ 
+ 		stripc->xmin = stripc->x[p][0];
+ 		stripc->xmax = stripc->xmax + stripc->xlen*stripc->xjump;
+ 
+ 		plstrip_gen(stripc);
+     }
+ }
+ 
+ /*--------------------------------------------------------------------------*\
+  * plstripd
+  *
+  * Deletes and releases memory used by a stripchart.  
+ \*--------------------------------------------------------------------------*/
+ 
+ void
+ plstripd(PLINT id)
+ {
+ 	int i;
+     stripc = strip[id];
+ 
+     if (stripc == NULL) {
+     	plwarn("No such stripchart");
+     	return;
+     }
+     
+     for (i=0; i<PEN; i++) {
+     	if (stripc->npts[i]) {
+ 	    	free((void *) stripc->x[i]);
+ 		    free((void *) stripc->y[i]);
+ 		    free(stripc->legline[i]);
+ 	    }
+     }
+ 
+ 	free(stripc->xspec);
+ 	free(stripc->yspec);
+ 	free(stripc->labx);
+ 	free(stripc->laby);
+ 	free(stripc->labtop);    
+     free((void *) stripc);
+     strip[id] = NULL;
+ }
diff -cbNr plplot-980407/src/plvpor.c plplot-980407-new/src/plvpor.c
*** plplot-980407/src/plvpor.c	Tue Apr  7 20:03:46 1998
--- plplot-980407-new/src/plvpor.c	Thu May  7 18:23:54 1998
***************
*** 111,125 ****
--- 111,137 ----
      case 11:
  	plbox("bclnst", (PLFLT) 0.0, 0, "abcnstv", (PLFLT) 0.0, 0);
  	break;
+     case 12:
+ 	plbox("bclgnst", (PLFLT) 0.0, 0, "abcgnstv", (PLFLT) 0.0, 0);
+ 	break;
      case 20:
  	plbox("bcnst", (PLFLT) 0.0, 0, "bclnstv", (PLFLT) 0.0, 0);
  	break;
      case 21:
  	plbox("bcnst", (PLFLT) 0.0, 0, "abclnstv", (PLFLT) 0.0, 0);
  	break;
+     case 22:
+ 	plbox("bcngst", (PLFLT) 0.0, 0, "abcglnstv", (PLFLT) 0.0, 0);
+ 	break;	
      case 30:
  	plbox("bclnst", (PLFLT) 0.0, 0, "bclnstv", (PLFLT) 0.0, 0);
  	break;
+     case 31:
+ 	plbox("bclnst", (PLFLT) 0.0, 0, "abclnstv", (PLFLT) 0.0, 0);
+ 	break;
+     case 32:
+ 	plbox("bclngst", (PLFLT) 0.0, 0, "abcglnstv", (PLFLT) 0.0, 0);
+ 	break;	
      default:
  	plwarn("plenv: Invalid axis argument");
      }
