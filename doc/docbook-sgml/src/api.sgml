<chapter id="API">
  <title>The PLplot Applications Programming Interface</title>
  
  <para>
    Documentation of each PLplot function that is designed to be externally
    called in the January 1999 snapshot (as documented in plplot.h).  
  </para>

  <para>
All API functions of the January 1999 snapshot are listed here with their
arguments, but there are still a large number of undocumented functions as
indicated by ???.
  </para>

  <sect1 id="pladv" renderas="sect3">
    <title><function>pladv</function>: Advance the (sub-)page</title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>pladv</function>
	</funcdef>
        <paramdef><parameter>sub</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Advances to the next subpage if
      <literal><parameter>sub</parameter>=0</literal>, performing a page
      advance if there are no remaining subpages on the current page.  If
      subwindowing isn't being used, <literal>&pladv;(0)</literal> will
      always advance the page.  If
      <literal><parameter>sub</parameter>&gt;0</literal>, PLplot switches
      to the specified subpage.  Note that this allows you to overwrite a
      plot on the specified subpage; if this is not what you intended, use
      &pleop; followed by &plbop; to first advance the page.  This routine
      is called automatically (with
      <literal><parameter>sub</parameter>=0</literal>) by &plenv;, but if
      &plenv; is not used, &pladv; must be called after initializing PLplot
      but before defining the viewport.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>sub</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Specifies the subpage number (starting from 1 in the top left
	    corner and increasing along the rows) to which to advance.  Set
	    to zero to advance to the next subpage.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plaxes" renderas="sect3">
    <title>
      <function>plaxes</function>: Draw a box with axes, etc. with arbitrary
origin
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plaxes</function>
        </funcdef>
        <paramdef><parameter>x0</parameter></paramdef>
        <paramdef><parameter>y0</parameter></paramdef>
        <paramdef><parameter>xopt</parameter></paramdef>
        <paramdef><parameter>xtick</parameter></paramdef>
        <paramdef><parameter>nxsub</parameter></paramdef>
        <paramdef><parameter>yopt</parameter></paramdef>
        <paramdef><parameter>ytick</parameter></paramdef>
        <paramdef><parameter>nysub</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      Draws a box around the currently defined viewport with arbitrary
      world-coordinate origin specified by
      <literal><parameter>x0</parameter></literal> and
      <literal><parameter>y0</parameter></literal> 
      and labels it with world coordinate values appropriate to the
      window.  Thus &plaxes; should only be called after defining both
      viewport and window.  The character strings
      <literal><parameter>xopt</parameter></literal> and
      <literal><parameter>yopt</parameter></literal> specify how the box
      should be drawn as described below.  If ticks and/or subticks are to
      be drawn for a particular axis, the tick intervals and number of
      subintervals may be specified explicitly, or they may be defaulted by
      setting the appropriate arguments to zero. </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>x0</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            World X coordinate of origin.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>y0</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            World Y coordinate of origin.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xopt</parameter> 
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to character string specifying options for horizontal
	    axis.  The string can include any combination of the following
	    letters (upper or lower case) in any order:
	    <itemizedlist>
	      <listitem>
		<para>
		  <literal>a</literal>: Draws axis, X-axis is horizontal
		  line (<literal>y=0</literal>), and Y-axis is vertical
		  line (<literal>x=0</literal>).
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>b</literal>: Draws bottom (X) or left (Y) edge
		  of frame.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>c</literal>: Draws top (X) or right (Y) edge of
		  frame.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>f</literal>:  Always use fixed point numeric labels.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>g</literal>: Draws a grid at the major tick
		  interval.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>h</literal>: Draws a grid at the minor tick
		  interval.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>i</literal>: Inverts tick marks, so they are
		  drawn outwards, rather than inwards.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>l</literal>: Labels axis logarithmically.  This
		  only affects the labels, not the data, and so it is
		  necessary to compute the logarithms of data points before
		  passing them to any of the drawing routines.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>m</literal>: Writes numeric labels at major tick
		  intervals in the unconventional location (above box for
		  X, right of box for Y).
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>n</literal>: Writes numeric labels at major tick
		  intervals in the conventional location (below box for X,
		  left of box for Y).
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>s</literal>: Enables subticks between major
		  ticks, only valid if <literal>t</literal> is also
		  specified.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>t</literal>: Draws major ticks.
		</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xtick</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    World coordinate interval between major ticks on the x axis.
	    If it is set to zero, PLplot automatically generates a suitable
	    tick interval.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nxsub</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of subintervals between major x axis ticks for minor
	    ticks.  If it is set to zero, PLplot automatically generates a
	    suitable minor tick interval.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>yopt</parameter> 
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to character string specifying options for vertical
	    axis.  The string can include any combination of the letters
	    defined above for
	    <literal><parameter>xopt</parameter></literal>, and in addition
	    may contain:
	    <itemizedlist>
	      <listitem>
		<para>
		  <literal>v</literal>: Write numeric labels for vertical
		  axis parallel to the base of the graph, rather than
		  parallel to the axis.
		</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ytick</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    World coordinate interval between major ticks on the y axis.
	    If it is set to zero, PLplot automatically generates a suitable
	    tick interval.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nysub</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of subintervals between major y axis ticks for minor
	    ticks.  If it is set to zero, PLplot automatically generates a
	    suitable minor tick interval.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plbin" renderas="sect3">
    <title>
      <function>plbin</function>: Plot a histogram from binned data
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plbin</function>
        </funcdef> 
        <paramdef><parameter>nbin</parameter></paramdef>
        <paramdef><parameter>x</parameter></paramdef>
        <paramdef><parameter>y</parameter></paramdef>
        <paramdef><parameter>center</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      Plots a histogram consisting of
      <literal><parameter>nbin</parameter></literal> bins.  The value
      associated with the <literal>i</literal>'th bin is placed in
      <literal><parameter>x</parameter>[i]</literal>, and the number of
      points in the bin is placed in
      <literal><parameter>y</parameter>[i]</literal>.  For proper
      operation, the values in
      <literal><parameter>x</parameter>[i]</literal> must form a strictly
      increasing sequence.  If
      <literal><parameter>center</parameter>=0</literal>,
      <literal><parameter>x</parameter>[i]</literal> is the left-hand edge
      of the <literal>i</literal>'th bin, and if
      <literal><parameter>center</parameter>=1</literal>, the bin
      boundaries are placed midway between the values in the
      <literal><parameter>x</parameter></literal> array.  Also see &plhist;
      for drawing histograms from unbinned data.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>nbin</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of bins (i.e., number of values in
	    <literal><parameter>x</parameter></literal> and
	    <literal><parameter>y</parameter></literal> arrays.)
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>x</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array containing values associated with bins.  These
	    must form a strictly increasing sequence.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>y</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array containing number of points in bin.  This is a
	    <literal>PLFLT</literal> (instead of <literal>PLINT</literal>)
	    array so as to allow histograms of probabilities, etc.
	  </para>
	</listitem>
      </varlistentry> 
      <varlistentry>
	<term>
	  <parameter>center</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Indicates whether the values in
	    <literal><parameter>x</parameter></literal> represent the lower
	    bin boundaries
	    (<literal><parameter>center</parameter>=0</literal>) or whether
	    the bin boundaries are to be midway between the
	    <literal><parameter>x</parameter></literal> values
	    (<literal><parameter>center</parameter>=1</literal>).  If the
	    values in <literal><parameter>x</parameter></literal> are
	    equally spaced and
	    <literal><parameter>center</parameter>=1</literal>, the values
	    in <literal><parameter>x</parameter></literal> are the center
	    values of the bins.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plbop" renderas="sect3">
    <title><function>plbop</function>: Begin a new page</title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plbop</function>
	</funcdef>
        <paramdef></paramdef>
      </funcsynopsis>
    </para>
    <para>
      Begins a new page.  For a file driver, the output file is opened if
      necessary.  Advancing the page via &pleop; and &plbop; is useful when
      a page break is desired at a particular point when plotting to
      subpages.  Another use for &pleop; and &plbop; is when plotting pages
      to different files, since you can manually set the file name (or file
      handle) by calling &plsfnam; or &plsfile; after the call to &pleop;
      (in fact some drivers may only support a single page per file, making
      this a necessity).  One way to handle this case automatically is to
      page advance via &pladv;, but enable familying (see &plsfam;) with a
      small byte per file limit so that a new family member file will be
      created on each page break.
    </para>

  </sect1>

  <sect1 id="plbox" renderas="sect3">
    <title><function>plbox</function>: Draw a box with axes, etc</title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plbox</function>
	</funcdef>
        <paramdef><parameter>xopt</parameter></paramdef>
        <paramdef><parameter>xtick</parameter></paramdef>
        <paramdef><parameter>nxsub</parameter></paramdef>
        <paramdef><parameter>yopt</parameter></paramdef>
        <paramdef><parameter>ytick</parameter></paramdef>
        <paramdef><parameter>nysub</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Draws a box around the currently defined viewport, and labels it with
      world coordinate values appropriate to the window.  Thus &plbox;
      should only be called after defining both viewport and window.  The
      character strings <literal><parameter>xopt</parameter></literal> and
      <literal><parameter>yopt</parameter></literal> specify how the box
      should be drawn as described below.  If ticks and/or subticks are to
      be drawn for a particular axis, the tick intervals and number of
      subintervals may be specified explicitly, or they may be defaulted by
      setting the appropriate arguments to zero.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>xopt</parameter>
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to character string specifying options for horizontal
	    axis.  The string can include any combination of the following
	    letters (upper or lower case) in any order:
	    <itemizedlist>
	      <listitem>
		<para>
		  <literal>a</literal>: Draws axis, X-axis is horizontal
		  line (<literal>y=0</literal>), and Y-axis is vertical
		  line (<literal>x=0</literal>).
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>b</literal>: Draws bottom (X) or left (Y) edge
		  of frame.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>c</literal>: Draws top (X) or right (Y) edge of
		  frame.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>f</literal>:  Always use fixed point numeric labels.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>g</literal>: Draws a grid at the major tick
		  interval.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>h</literal>: Draws a grid at the minor tick
		  interval.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>i</literal>: Inverts tick marks, so they are
		  drawn outwards, rather than inwards.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>l</literal>: Labels axis logarithmically.  This
		  only affects the labels, not the data, and so it is
		  necessary to compute the logarithms of data points before
		  passing them to any of the drawing routines.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>m</literal>: Writes numeric labels at major tick
		  intervals in the unconventional location (above box for
		  X, right of box for Y).
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>n</literal>: Writes numeric labels at major tick
		  intervals in the conventional location (below box for X,
		  left of box for Y).
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>s</literal>: Enables subticks between major
		  ticks, only valid if <literal>t</literal> is also
		  specified.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>t</literal>: Draws major ticks.
		</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xtick</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    World coordinate interval between major ticks on the x axis.
	    If it is set to zero, PLplot automatically generates a suitable
	    tick interval.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nxsub</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of subintervals between major x axis ticks for minor
	    ticks.  If it is set to zero, PLplot automatically generates a
	    suitable minor tick interval.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>yopt</parameter>
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to character string specifying options for vertical
	    axis.  The string can include any combination of the letters
	    defined above for
	    <literal><parameter>xopt</parameter></literal>, and in addition
	    may contain:
	    <itemizedlist>
	      <listitem>
		<para>
		  <literal>v</literal>: Write numeric labels for vertical
		  axis parallel to the base of the graph, rather than
		  parallel to the axis.
		</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ytick</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    World coordinate interval between major ticks on the y axis.
	    If it is set to zero, PLplot automatically generates a suitable
	    tick interval.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nysub</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of subintervals between major y axis ticks for minor
	    ticks.  If it is set to zero, PLplot automatically generates a
	    suitable minor tick interval.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plbox3" renderas="sect3">
    <title>
      <function>plbox3</function>: Draw a box with axes, etc, in 3-d
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plbox3</function>
	</funcdef>
        <paramdef><parameter>xopt</parameter></paramdef>
        <paramdef><parameter>xlabel</parameter></paramdef>
        <paramdef><parameter>xtick</parameter></paramdef>
        <paramdef><parameter>nxsub</parameter></paramdef>
        <paramdef><parameter>yopt</parameter></paramdef>
        <paramdef><parameter>ylabel</parameter></paramdef>
        <paramdef><parameter>ytick</parameter></paramdef>
        <paramdef><parameter>nysub</parameter></paramdef>
        <paramdef><parameter>zopt</parameter></paramdef>
        <paramdef><parameter>zlabel</parameter></paramdef>
        <paramdef><parameter>ztick</parameter></paramdef>
        <paramdef><parameter>nzsub</parameter></paramdef>
      </funcsynopsis>
    </para>
    <para>
      Draws axes, numeric and text labels for a three-dimensional surface
      plot.  For a more complete description of three-dimensional plotting
      see <xref linkend="tri-d-plots">.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>xopt</parameter>
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to character string specifying options for the x axis.
	    The string can include any combination of the following letters
	    (upper or lower case) in any order:
	    <itemizedlist>
	      <listitem>
		<para>
		  <literal>b</literal>: Draws axis at base, at height
		  <literal>z=<parameter>zmin</parameter></literal> where
		  <literal><parameter>zmin</parameter></literal> is defined
		  by call to &plw3d;.  This character must be specified in
		  order to use any of the other options.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>i</literal>: Inverts tick marks, so they are
		  drawn downwards, rather than upwards.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>l</literal>: Labels axis logarithmically.  This
		  only affects the labels, not the data, and so it is
		  necessary to compute the logarithms of data points before
		  passing them to any of the drawing routines.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>n</literal>: Writes numeric labels at major tick
		  intervals.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>s</literal>: Enables subticks between major
		  ticks, only valid if <literal>t</literal> is also
		  specified.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>t</literal>: Draws major ticks.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>u</literal>: If this is specified, the text
		  label for the axis is written under the axis.
		</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xlabel</parameter>
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to character string specifying text label for the x
	    axis.  It is only drawn if <literal>u</literal> is in the
	    <literal><parameter>xopt</parameter></literal> string.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xtick</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    World coordinate interval between major ticks on the x axis.
	    If it is set to zero, PLplot automatically generates a suitable
	    tick interval.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nxsub</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of subintervals between major x axis ticks for minor
	    ticks.  If it is set to zero, PLplot automatically generates a
	    suitable minor tick interval.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>yopt</parameter>
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to character string specifying options for the y axis.
	    The string is interpreted in the same way as
	    <literal><parameter>xopt</parameter></literal>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ylabel</parameter>
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to character string specifying text label for the y
	    axis.  It is only drawn if <literal>u</literal> is in the
	    <literal><parameter>yopt</parameter></literal> string.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ytick</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    World coordinate interval between major ticks on the y axis.
	    If it is set to zero, PLplot automatically generates a suitable
	    tick interval.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nysub</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of subintervals between major y axis ticks for minor
	    ticks.  If it is set to zero, PLplot automatically generates a
	    suitable minor tick interval.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>zopt</parameter>
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to character string specifying options for the z axis.
	    The string can include any combination of the following letters
	    (upper or lower case) in any order:
	    <itemizedlist>
	      <listitem>
		<para>
		  <literal>b</literal>: Draws z axis to the left of the
		  surface plot.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>c</literal>: Draws z axis to the right of the
		  surface plot.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>d</literal>: Draws grid lines parallel to the
		  x-y plane behind the figure.  These lines are not drawn
		  until after &plot3d; or &plmesh; are called because of
		  the need for hidden line removal.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>i</literal>: Inverts tick marks, so they are
		  drawn away from the center.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>l</literal>: Labels axis logarithmically.  This
		  only affects the labels, not the data, and so it is
		  necessary to compute the logarithms of data points before
		  passing them to any of the drawing routines.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>m</literal>: Writes numeric labels at major tick
		  intervals on the right-hand vertical axis.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>n</literal>: Writes numeric labels at major tick
		  intervals on the left-hand vertical axis.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>s</literal>: Enables subticks between major
		  ticks, only valid if <literal>t</literal> is also
		  specified.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>t</literal>: Draws major ticks.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>u</literal>: If this is specified, the text
		  label is written beside the left-hand axis.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>v</literal>: If this is specified, the text
		  label is written beside the right-hand axis.
		</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>zlabel</parameter>
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to character string specifying text label for the z
	    axis.  It is only drawn if <literal>u</literal> or
	    <literal>v</literal> are in the
	    <literal><parameter>zopt</parameter></literal> string.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ztick</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    World coordinate interval between major ticks on the z axis.
	    If it is set to zero, PLplot automatically generates a suitable
	    tick interval.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nzsub</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of subintervals between major z axis ticks for minor
	    ticks.  If it is set to zero, PLplot automatically generates a
	    suitable minor tick interval.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>
  
  <sect1 id="plclr" renderas="sect3">
    <title>
      <function>plclr</function>: Eject current page
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plclr</function>
	</funcdef>
        <paramdef></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Deprecated.  Use the new name, &pleop;, for this function instead.
    </para>

  </sect1>

  <sect1 id="plcol" renderas="sect3">
    <title>
      <function>plcol</function>: Set color
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plcol</function>
	</funcdef>
        <paramdef><parameter>color</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Deprecated.  Use the new name, &plcol0;, for this function instead.
    </para>

  </sect1>

  <sect1 id="plcol0" renderas="sect3">
    <title>
      <function>plcol0</function>: Set color
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plcol0</function>
	</funcdef>
        <paramdef><parameter>color</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets the color for subsequent lines.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>color</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Integer representing the color.  The defaults at present are
	    (these may change):
	  </para>
          <para>
	    <orderedlist>
	      <listitem><para>black (default background)</para></listitem>
	      <listitem><para>red</para></listitem>
	      <listitem><para>yellow</para></listitem>
	      <listitem><para>green</para></listitem>
	      <listitem><para>aquamarine</para></listitem>
	      <listitem><para>pink</para></listitem>
	      <listitem><para>wheat</para></listitem>
	      <listitem><para>grey</para></listitem>
	      <listitem><para>brown</para></listitem>
	      <listitem><para>blue</para></listitem>
	      <listitem><para>BlueViolet</para></listitem>
	      <listitem><para>cyan</para></listitem>
	      <listitem><para>turquoise</para></listitem>
	      <listitem><para>magenta</para></listitem>
	      <listitem><para>salmon</para></listitem>
	      <listitem><para>white (default foreground)</para></listitem>
	    </orderedlist>
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plcol1" renderas="sect3">
    <title>
      <function>plcol1</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plcol1</function>
        </funcdef>
        <paramdef><parameter>col1</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>col1</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plcon0" renderas="sect3">
    <title>
      <function>plcon0</function>: Contour plot, identity mapping (Fortran
      only) 
    </title>
    
    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plcon0</function>
	</funcdef>
        <paramdef><parameter>z</parameter></paramdef>
        <paramdef><parameter>nx</parameter></paramdef>
        <paramdef><parameter>ny</parameter></paramdef>
        <paramdef><parameter>kx</parameter></paramdef>
        <paramdef><parameter>lx</parameter></paramdef>
        <paramdef><parameter>ky</parameter></paramdef>
        <paramdef><parameter>ly</parameter></paramdef>
        <paramdef><parameter>clevel</parameter></paramdef>
        <paramdef><parameter>nlevel</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Draws a contour plot of the data in
      <literal><parameter>z</parameter>[<parameter>nx</parameter>][<parameter>ny</parameter>]</literal>,
      using the <literal><parameter>nlevel</parameter></literal> contour
      levels specified by <literal><parameter>clevel</parameter></literal>.
      Only the region of the array from
      <literal><parameter>kx</parameter></literal> to
      <literal><parameter>lx</parameter></literal> and from
      <literal><parameter>ky</parameter></literal> to
      <literal><parameter>ly</parameter></literal> is plotted out.  See
      <xref linkend="contour-plots"> for more information.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>z</parameter>
	  (<literal>PLFLT **</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to a vectored two-dimensional array containing data to
	    be contoured.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nx, ny</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Physical dimensions of array
	    <literal><parameter>z</parameter></literal>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>kx, lx</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Range of <literal>x</literal> indices to consider.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ky, ly</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Range of <literal>y</literal> indices to consider.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>clevel</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array specifying levels at which to draw contours.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nlevel</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of contour levels to draw.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
    <para>
      NOTE: this function is intended for use from a Fortran caller only.
      The C user should instead call &plcont; using the built-in
      transformation function <function>pltr0</function> for the same
      capability.
    </para>
  </sect1>

  <sect1 id="plcon1" renderas="sect3">
    <title>
      <function>plcon1</function>: Contour plot, general 1-d mapping
      (Fortran only)
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plcon1</function>
	</funcdef>
        <paramdef><parameter>z</parameter></paramdef>
        <paramdef><parameter>nx</parameter></paramdef>
        <paramdef><parameter>ny</parameter></paramdef>
        <paramdef><parameter>kx</parameter></paramdef>
        <paramdef><parameter>lx</parameter></paramdef>
        <paramdef><parameter>ky</parameter></paramdef>
        <paramdef><parameter>ly</parameter></paramdef>
        <paramdef><parameter>clevel</parameter></paramdef>
        <paramdef><parameter>nlevel</parameter></paramdef>
        <paramdef><parameter>xg</parameter></paramdef>
        <paramdef><parameter>yg</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Draws a contour plot of the data in
      <literal><parameter>z</parameter>[<parameter>nx</parameter>][<parameter>ny</parameter>]</literal>,
      using the <literal><parameter>nlevel</parameter></literal> contour
      levels specified by <literal><parameter>clevel</parameter></literal>.
      Only the region of the array from
      <literal><parameter>kx</parameter></literal> to
      <literal><parameter>lx</parameter></literal> and from
      <literal><parameter>ky</parameter></literal> to
      <literal><parameter>ly</parameter></literal> is plotted out.  The
      arrays <literal><parameter>xg</parameter></literal> and
      <literal><parameter>yg</parameter></literal> are used to specify the
      transformation between array indices and world coordinates.  See
      <xref linkend="contour-plots"> for more information.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>z</parameter>
	  (<literal>PLFLT **</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to a vectored two-dimensional array containing data to
	    be contoured.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nx, ny</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Physical dimensions of array
	    <literal><parameter>z</parameter></literal>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>kx, lx</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Range of <literal>x</literal> indices to consider.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ky, ly</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Range of <literal>y</literal> indices to consider.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>clevel</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array specifying levels at which to draw contours.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nlevel</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of contour levels to draw.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xg, yg</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointers to arrays which specify the transformation from array
	    indices to world coordinates.  These must be one-dimensional
	    arrays, used for a transformation of the form:
	    <literal>tx</literal> = <literal>f(x)</literal>,
	    <literal>ty</literal> = <literal>f(y)</literal>.  Function
	    values at locations between grid points are obtained via linear
	    interpolation.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
    <para>
      NOTE: this function is intended for use from a Fortran caller only.
      The C user should instead call &plcont; using the built-in
      transformation function <function>pltr1</function> for the same
      capability.
    </para>

  </sect1>

  <sect1 id="plcon2" renderas="sect3">
    <title>
      <function>plcon2</function>: Contour plot, general 2-d mapping
      (Fortran only)
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plcon2</function>
	</funcdef>
        <paramdef><parameter>z</parameter></paramdef>
        <paramdef><parameter>nx</parameter></paramdef>
        <paramdef><parameter>ny</parameter></paramdef>
        <paramdef><parameter>kx</parameter></paramdef>
        <paramdef><parameter>lx</parameter></paramdef>
        <paramdef><parameter>ky</parameter></paramdef>
        <paramdef><parameter>ly</parameter></paramdef>
        <paramdef><parameter>clevel</parameter></paramdef>
        <paramdef><parameter>nlevel</parameter></paramdef>
        <paramdef><parameter>xg</parameter></paramdef>
        <paramdef><parameter>yg</parameter></paramdef>
      </funcsynopsis>
    </para>
    <para>
      Draws a contour plot of the data in
      <literal><parameter>z</parameter>[<parameter>nx</parameter>][<parameter>ny</parameter>]</literal>,
      using the <literal><parameter>nlevel</parameter></literal> contour
      levels specified by <literal><parameter>clevel</parameter></literal>.
      Only the region of the array from
      <literal><parameter>kx</parameter></literal> to
      <literal><parameter>lx</parameter></literal> and from
      <literal><parameter>ky</parameter></literal> to
      <literal><parameter>ly</parameter></literal> is plotted out.  The
      arrays <literal><parameter>xg</parameter></literal> and
      <literal><parameter>yg</parameter></literal> are used to specify the
      transformation between array indices and world coordinates.  See
      <xref linkend="contour-plots"> for more information.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>z</parameter>
	  (<literal>PLFLT **</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to a vectored two-dimensional array containing data to
	    be contoured.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nx, ny</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Physical dimensions of array
	    <literal><parameter>z</parameter></literal>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>kx, lx</parameter> (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Range of <literal>x</literal> indices to consider.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ky, ly</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Range of <literal>y</literal> indices to consider.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>clevel</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array specifying levels at which to draw contours.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nlevel</parameter> (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of contour levels to draw.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xg, yg</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointers to arrays which specify the transformation from array
	    indices to world coordinates.  These must be two-dimensional
	    arrays, used for a transformation of the form:
	    <literal>tx</literal> = <literal>f(x, y)</literal>,
	    <literal>ty</literal> = <literal>f(x, y)</literal>.  Function
	    values at locations between grid points are obtained via linear
	    interpolation.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
    <para>
      NOTE: this function is intended for use from a Fortran caller only.
      The C user should instead call &plcont; using the built-in
      transformation function <function>pltr2</function> for the same
      capability.
    </para>

  </sect1>

  <sect1 id="plcont" renderas="sect3">
    <title>
      <function>plcont</function>: Contour plot, fixed linear mapping (C
      function. For documentation of the equivalent Fortran subroutine see
      &plcontfortran;)
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plcont</function>
	</funcdef>
        <paramdef><parameter>z</parameter></paramdef>
        <paramdef><parameter>nx</parameter></paramdef>
        <paramdef><parameter>ny</parameter></paramdef>
        <paramdef><parameter>kx</parameter></paramdef>
        <paramdef><parameter>lx</parameter></paramdef>
        <paramdef><parameter>ky</parameter></paramdef>
        <paramdef><parameter>ly</parameter></paramdef>
        <paramdef><parameter>clevel</parameter></paramdef>
        <paramdef><parameter>nlevel</parameter></paramdef>
        <paramdef><parameter>pltr</parameter></paramdef>
        <paramdef><parameter>pltr_data</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Draws a contour plot of the data in
      <literal><parameter>z</parameter>[<parameter>nx</parameter>][<parameter>ny</parameter>]</literal>,
      using the <literal><parameter>nlevel</parameter></literal> contour
      levels specified by <literal><parameter>clevel</parameter></literal>.
      Only the region of the array from
      <literal><parameter>kx</parameter></literal> to
      <literal><parameter>lx</parameter></literal> and from
      <literal><parameter>ky</parameter></literal> to
      <literal><parameter>ly</parameter></literal> is plotted out.  A
      transformation routine &pltr; is used to map indices within the array
      to the world coordinates.  See <xref linkend="contour-plots"> for
      more information.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>z</parameter>
	  (<literal>PLFLT **</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to a vectored two-dimensional array containing data to
	    be contoured.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nx, ny</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Physical dimensions of array
	    <literal><parameter>z</parameter></literal>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>kx, lx</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Range of <literal>x</literal> indices to consider.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ky, ly</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Range of <literal>y</literal> indices to consider.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>clevel</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array specifying levels at which to draw contours.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nlevel</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of contour levels to draw.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>pltr</parameter>
	  (<literal>void *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to function that defines transformation between indices
	    in array <literal><parameter>z</parameter></literal> and the
	    world coordinates (C only).  Transformation functions are
	    provided: <literal>xform</literal>, for simple linear mappings;
	    <function>pltr0</function> for no mapping, and 
	    <function>pltr1</function> and <function>pltr2</function> for ???
	    <literal>xform</literal> is not actually compiled into the
	    PLplot library due to the need for external data; instead you
	    must include it as part of your program.  The function should
	    have the form:
	  </para>
	  
	  
	  <para><anchor id="pltr">
	      <funcsynopsis> 
		<funcdef>
		  <function>pltr</function>
		</funcdef>
		<paramdef><parameter>x</parameter></paramdef>
		<paramdef><parameter>y</parameter></paramdef>
		<paramdef><parameter>tx</parameter></paramdef>
		<paramdef><parameter>ty</parameter></paramdef>
		<paramdef><parameter>pltr_data</parameter></paramdef>
	      </funcsynopsis>
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>x, y</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Specifies the position in the array through which the contour
	    runs in terms of the array indices.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>tx, ty</parameter>
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointers to the world coordinates corresponding to the point
	    <literal>(<parameter>x</parameter>,
	      <parameter>y</parameter>)</literal>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>pltr_data</parameter>
	  (<literal>PLPointer</literal>, output)
	</term>
	<listitem>
	  <para>
	    Extra parameter (also in argument list to &plcont) to help
	    pass information to pltr0, pltr1, pltr2, or whatever routine
	    that is externally supplied.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plcontfortran" renderas="sect3">
    <title>
      <function>plcont</function>: Contour plot, fixed linear mapping
      (Fortran subroutine. For documentation of the equivalent C function
      see &plcont;)
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plcont</function>
	</funcdef>
        <paramdef><parameter>z</parameter></paramdef>
        <paramdef><parameter>nx</parameter></paramdef>
        <paramdef><parameter>ny</parameter></paramdef>
        <paramdef><parameter>kx</parameter></paramdef>
        <paramdef><parameter>lx</parameter></paramdef>
        <paramdef><parameter>ky</parameter></paramdef>
        <paramdef><parameter>ly</parameter></paramdef>
        <paramdef><parameter>clevel</parameter></paramdef>
        <paramdef><parameter>nlevel</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      When called from Fortran, this routine has the same effect as when
      invoked from C.  The interpretation of all parameters (see &plcont;)
      is also the same except there is no transformation function supplied
      as the last parameter.  Instead, a 6-element array specifying
      coefficients to use in the transformation is supplied via the named
      common block <literal>plplot</literal> (see code). Since this
      approach is somewhat inflexible, the user is recommended to call
      either of &plcon0;, &plcon1;, or &plcon2; instead.
    </para>

  </sect1>

  <sect1 id="plcpstrm" renderas="sect3">
    <title>
      <function>plcpstrm</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plcpstrm</function>
        </funcdef>
        <paramdef><parameter>iplsr</parameter></paramdef>
        <paramdef><parameter>flags</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>iplsr</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>flags</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plend" renderas="sect3">
    <title>
      <function>plend</function>: End plotting session
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plend</function>
	</funcdef>
        <paramdef></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Ends a plotting session, tidies up all the output files, switches
      interactive devices back into text mode and frees up any memory that
      was allocated.  Must be called before end of program.
    </para>

  </sect1>

  <sect1 id="plend1" renderas="sect3">
    <title>
      <function>plend1</function>: End plotting session for 1 stream
    </title>
    
    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plend1</function>
	</funcdef>
        <paramdef></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Ends a plotting session for the current output stream only.  See
      &plsstrm; for more info.
    </para>

  </sect1>

  <sect1 id="plenv" renderas="sect3">
    <title>
      <function>plenv</function>: Set up standard window and draw box
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plenv</function>
	</funcdef>
        <paramdef><parameter>xmin</parameter></paramdef>
        <paramdef><parameter>xmax</parameter></paramdef>
        <paramdef><parameter>ymin</parameter></paramdef>
        <paramdef><parameter>ymax</parameter></paramdef>
        <paramdef><parameter>just</parameter></paramdef>
        <paramdef><parameter>axis</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets up plotter environment for simple graphs by calling &pladv; and
      setting up viewport and window to sensible default values.  &plenv;
      leaves enough room around most graphs for axis labels and a title.
      When these defaults are not suitable, use the individual routines
      &plvpas;, &plvpor;, or &plvasp; for setting up the viewport, &plwind;
      for defining the window, and &plbox; for drawing the box.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>xmin</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Value of x at left-hand edge of window.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmax</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Value of x at right-hand edge of window.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymin</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Value of y at bottom edge of window.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymax</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Value of y at top edge of window.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>just</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    If <literal><parameter>just</parameter>=0</literal>, the x and
	    y axes are scaled independently to use as much of the screen as
	    possible, but if
	    <literal><parameter>just</parameter>=1</literal>, the scales of
	    the x and y axes are made equal.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>axis</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Controls drawing of the box around the plot:
	    <itemizedlist>
	      <listitem>
		<para>
		  <literal>-2</literal>: No box or annotation.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>-1</literal>: Draw box only.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>0</literal>: Draw box, labelled with coordinate
		  values around edge.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>1</literal>: In addition to box and labels, draw
		  the two axes <literal>x=0</literal> and
		  <literal>y=0</literal>.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>2</literal>: As for <literal>axis=1</literal>,
		  but also draw a grid at the major tick interval.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>10</literal>: Logarithmic x axis, linear y axis.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>11</literal>: Logarithmic x axis, linear y axis
		  and draw line <literal>y=0</literal>.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>20</literal>: Linear x axis, logarithmic y axis.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>21</literal>: Linear x axis, logarithmic y axis
		  and draw line <literal>x=0</literal>.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>30</literal>: Logarithmic x and y axes.
		</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="pleop" renderas="sect3">
    <title>
      <function>pleop</function>: Eject current page
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>pleop</function>
	</funcdef>
        <paramdef></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Clears the graphics screen of an interactive device, or ejects a page
      on a plotter.  See &plbop; for more information.
    </para>

  </sect1>

  <sect1 id="plerrx" renderas="sect3">
    <title>
      <function>plerrx</function>: Draw x error bar
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plerrx</function>
	</funcdef>
        <paramdef><parameter>n</parameter></paramdef>
        <paramdef><parameter>xmin</parameter></paramdef>
        <paramdef><parameter>xmax</parameter></paramdef>
        <paramdef><parameter>y</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Draws a set of <literal><parameter>n</parameter></literal> 
      horizontal error bars, the
<literal>i</literal>'th error
bar extending from <literal><parameter>xmin</parameter>[i]</literal> 
to <literal><parameter>xmax</parameter>[i]</literal> at y coordinate
<literal><parameter>y</parameter>[i]</literal>.  The terminals of the error bar are of length equal to the
minor tick length (settable using &plsmin;).
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>n</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of error bars to draw.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmin</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with x coordinates of
left-hand endpoint of error bars.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmax</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with x coordinates of
right-hand endpoint of error bars.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>y</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with y coordinates of
error bar.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plerry" renderas="sect3">
    <title>
      <function>plerry</function>: Draw y error bar
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plerry</function>
	</funcdef>
        <paramdef><parameter>n</parameter></paramdef>
        <paramdef><parameter>x</parameter></paramdef>
        <paramdef><parameter>ymin</parameter></paramdef>
        <paramdef><parameter>ymax</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Draws a set of <literal><parameter>n</parameter></literal> vertical
      error bars, the <literal>i</literal>'th error bar extending from
      <literal><parameter>ymin</parameter>[i]</literal> to
      <literal><parameter>ymax</parameter>[i]</literal> at x coordinate
      <literal><parameter>x</parameter>[i]</literal>.  The terminals of the
      error bar are of length equal to the minor tick length (settable
      using &plsmin;).
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>n</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of error bars to draw.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>x</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with x coordinates of error bars.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymin</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with y coordinates of lower endpoint of error
	    bars.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymax</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with y coordinate of upper endpoint of error
	    bar.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plexit" renderas="sect3">
    <title>
      <function>plexit</function>: Error abort
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plexit</function>
	</funcdef>
        <paramdef><parameter>message</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      This routine is called in case an error is encountered during
      execution of a PLplot routine.  It prints the error message, tries to
      release allocated resources, calls <function>plsexit</function> and
      then exits.  If cleanup needs to be done in the driver program then
      the user may want to supply his/her own version of
      <function>plsexit</function>.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>message</parameter>
	  (<literal>char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Error message.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plfamadv" renderas="sect3">
    <title>
      <function>plfamadv</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plfamadv</function>
        </funcdef>
        <paramdef></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

  </sect1>

  <sect1 id="plfill" renderas="sect3">
    <title>
      <function>plfill</function>: Area fill
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plfill</function>
	</funcdef>
        <paramdef><parameter>n</parameter></paramdef>
        <paramdef><parameter>x</parameter></paramdef>
        <paramdef><parameter>y</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Fills the polygon defined by the
      <literal><parameter>n</parameter></literal> points
      <literal>(<parameter>x</parameter>[i],
      <parameter>y</parameter>[i])</literal> using the pattern defined by
      &plpsty; or &plpat;.  The routine will automatically close the
      polygon between the last and first vertices.  If multiple closed
      polygons are passed in <literal><parameter>x</parameter></literal>
      and <literal><parameter>y</parameter></literal> then &plfill; will
      fill in between them.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>n</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of vertices in polygon.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>x</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with x coordinates of vertices.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>y</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with y coordinates of vertices.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plflush" renderas="sect3">
    <title>
      <function>plflush</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plflush</function>
        </funcdef>
        <paramdef></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

  </sect1>

  <sect1 id="plfont" renderas="sect3">
    <title>
      <function>plfont</function>: Set character font
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plfont</function>
	</funcdef>
        <paramdef><parameter>font</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets the default character font for subsequent character drawing.
      Also affects symbols produced by &plpoin;.  This routine has no
      effect unless the extended character set is loaded (see &plfontld;).
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>font</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Specifies the font:
	    <itemizedlist>
	      <listitem>
		<para>
		  <literal>1</literal>: Normal font (simplest and fastest)
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>2</literal>: Roman font
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>3</literal>: Italic font
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>4</literal>: Script font
		</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plfontld" renderas="sect3">
    <title>
      <function>plfontld</function>: Load character font
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plfontld</function>
	</funcdef>
        <paramdef><parameter>set</parameter></paramdef>
      </funcsynopsis>
    </para>
    
    <para>
      Sets the character set to use for subsequent character drawing.  May
      be called before calling initializing PLplot.
    </para>
    
    <variablelist>
      <varlistentry>
	<term>
	  <parameter>set</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Specifies the character set to load:
	    <itemizedlist>
	      <listitem>
		<para>
		  <literal>0</literal>: Standard character set
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>1</literal>: Extended character set
		</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plgchr" renderas="sect3">
    <title>
      <function>plgchr</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plgchr</function>
        </funcdef>
        <paramdef><parameter>p_def</parameter></paramdef>
        <paramdef><parameter>p_ht</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>p_def</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>p_ht</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plgcol0" renderas="sect3">
    <title>
      <function>plgcol0</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plgcol0</function>
        </funcdef>
        <paramdef><parameter>icol0</parameter></paramdef>
        <paramdef><parameter>r</parameter></paramdef>
        <paramdef><parameter>g</parameter></paramdef>
        <paramdef><parameter>b</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>icol0</parameter> 
	  (<literal>PLINT</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>r</parameter> 
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>g</parameter> 
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>b</parameter> 
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plgcolbg" renderas="sect3">
    <title>
      <function>plgcolbg</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plgcolbg</function>
        </funcdef>
        <paramdef><parameter>r</parameter></paramdef>
        <paramdef><parameter>g</parameter></paramdef>
        <paramdef><parameter>b</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>r</parameter> 
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>g</parameter> 
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>b</parameter> 
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plgdev" renderas="sect3">
    <title>
      <function>plgdev</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plgdev</function>
        </funcdef>
        <paramdef><parameter>p_dev</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>p_dev</parameter> 
	  (<literal>char *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plgdidev" renderas="sect3">
    <title>
      <function>plgdidev</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plgdidev</function>
        </funcdef>
        <paramdef><parameter>p_mar</parameter></paramdef>
        <paramdef><parameter>p_aspect</parameter></paramdef>
        <paramdef><parameter>p_jx</parameter></paramdef>
        <paramdef><parameter>p_jy</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>p_mar</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>p_aspect</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>p_jx</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>p_jy</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plgdiori" renderas="sect3">
    <title>
      <function>plgdiori</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plgdiori</function>
        </funcdef>
        <paramdef><parameter>p_rot</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>p_rot</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plgdiplt" renderas="sect3">
    <title>
      <function>plgdiplt</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plgdiplt</function>
        </funcdef>
        <paramdef><parameter>p_xmin</parameter></paramdef>
        <paramdef><parameter>p_ymin</parameter></paramdef>
        <paramdef><parameter>p_xmax</parameter></paramdef>
        <paramdef><parameter>p_ymax</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>p_xmin</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>p_ymin</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>p_xmax</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>p_ymax</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plgfam" renderas="sect3">
    <title>
      <function>plgfam</function>: Get family file paramters
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plgfam</function>
	</funcdef>
        <paramdef><parameter>fam</parameter></paramdef>
        <paramdef><parameter>num</parameter></paramdef>
        <paramdef><parameter>bmax</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Gets information about current family file, if familying is
      enabled.  See Section \ref{sec:family} for more information.
    </para>
    
    <variablelist>
      <varlistentry>
	<term>
	  <parameter>fam</parameter>
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointer to variable with the boolean family flag value.  If
	    nonzero, familying is enabled.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>num</parameter>
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointer to variable with the current family file number.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>bmax</parameter>
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointer to variable with the maximum file size (in bytes) for a
	    family file.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plgfile" renderas="sect3">
    <title>
      <function>plgfile</function>: Get output file handle
    </title>
    
    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plgfile</function>
	</funcdef>
        <paramdef><parameter>file</parameter></paramdef>
      </funcsynopsis>
    </para>
    
    <para>
      Gets the current output file handle, if applicable. 
    </para>
    
    <variablelist>
      <varlistentry>
	<term>
	  <parameter>file</parameter>
	  (<literal>FILE **</literal>, output)
	</term>
	<listitem>
	  <para>
	    File pointer to current output file.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
    
  </sect1>

  <sect1 id="plgfnam" renderas="sect3">
    <title>
      <function>plgfnam</function>: Get output file name
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plgfnam</function>
	</funcdef>
        <paramdef><parameter>fnam</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Gets the current output file name, if applicable. 
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>fnam</parameter>
	  (<literal>char *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointer to file name string.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plglevel" renderas="sect3">
    <title>
      <function>plglevel</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plglevel</function>
        </funcdef>
        <paramdef><parameter>p_level</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>p_level</parameter> 
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plgpage" renderas="sect3">
    <title>
      <function>plgpage</function>: Get page parameters
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plgpage</function>
	</funcdef>
        <paramdef><parameter>xp</parameter></paramdef>
        <paramdef><parameter>yp</parameter></paramdef>
        <paramdef><parameter>xleng</parameter></paramdef>
        <paramdef><parameter>yleng</parameter></paramdef>
        <paramdef><parameter>xoff</parameter></paramdef>
        <paramdef><parameter>yoff</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Gets the current page configuration. 
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>xp</parameter>
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointer to number of pixels in x.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>yp</parameter>
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointer to number of pixels in y.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xleng</parameter>
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointer to x page length value.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>yleng</parameter>
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointer to y page length value.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xoff</parameter>
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointer to x page offset.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>yoff</parameter>
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointer to y page offset.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plgra" renderas="sect3">
    <title>
      <function>plgra</function>: Switch to graphics screen
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plgra</function>
	</funcdef>
        <paramdef></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets an interactive device to graphics mode, used in conjunction with
      &pltext; to allow graphics and text to be interspersed.  On a device
      which supports separate text and graphics windows, this command
      causes control to be switched to the graphics window.  If already in
      graphics mode, this command is ignored.  It is also ignored on
      devices which only support a single window or use a different method
      for shifting focus.  See also &pltext;.
    </para>
    
  </sect1>
  
  <sect1 id="plgspa" renderas="sect3">
    <title>
      <function>plgspa</function>: Get current subpage parameters
    </title>
    
    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plgspa</function>
	</funcdef>
        <paramdef><parameter>xmin</parameter></paramdef>
        <paramdef><parameter>xmax</parameter></paramdef>
        <paramdef><parameter>ymin</parameter></paramdef>
        <paramdef><parameter>ymax</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Gets the size of the current subpage in millimeters measured from the
      bottom left hand corner of the output device page or screen.  Can be
      used in conjunction with &plsvpa; for setting the size of a viewport
      in absolute coordinates (millimeters).
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>xmin</parameter>
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointer to variable with position of left hand edge of subpage
	    in millimeters.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmax</parameter>
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointer to variable with position of right hand edge of subpage
	    in millimeters.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymin</parameter>
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointer to variable with position of bottom edge of subpage in
	    millimeters.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymax</parameter>
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointer to variable with position of top edge of subpage in
	    millimeters.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plgstrm" renderas="sect3">
    <title>
      <function>plgstrm</function>: Get current stream number
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plgstrm</function>
	</funcdef>
        <paramdef><parameter>strm</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Gets the number of the current output stream. See also &plsstrm;.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>strm</parameter>
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointer to current stream value.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plgver" renderas="sect3">
    <title>
      <function>plgver</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plgver</function>
        </funcdef>
        <paramdef><parameter>p_ver</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>p_ver</parameter> 
	  (<literal>char *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plgxax" renderas="sect3">
    <title>
      <function>plgxax</function>: Get x axis parameters
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plgxax</function>
	</funcdef>
        <paramdef><parameter>digmax</parameter></paramdef>
        <paramdef><parameter>digits</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Returns current values of the
      <literal><parameter>digmax</parameter></literal> and
      <literal><parameter>digits</parameter></literal> flags for the x
      axis.  <literal><parameter>digits</parameter></literal> is updated
      after the plot is drawn, so this routine should only be called
      <emphasis>after</emphasis> the call to &plbox; (or &plbox3;) is
      complete.  See <xref linkend="annotation"> for more information.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>digmax</parameter>
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointer to variable with the maximum number of digits.  If
	    nonzero, the printed label will be switched to a floating point
	    representation when the number of digits exceeds
	    <literal><parameter>digmax</parameter></literal>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>digits</parameter>
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
	    Pointer to variable with the actual number of digits for the
	    numeric labels (x axis) from the last plot.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plgyax" renderas="sect3">
    <title>
      <function>plgyax</function>: Get y axis parameters
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plgyax</function>
	</funcdef>
        <paramdef><parameter>digmax</parameter></paramdef>
        <paramdef><parameter>digits</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Identical to &plgxax;, except that arguments are flags for y axis.
      See the description of &plgxax; for more detail.
    </para>

  </sect1>

  <sect1 id="plgzax" renderas="sect3">
    <title>
      <function>plgzax</function>: Get z axis parameters
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plgzax</function>
	</funcdef>
        <paramdef><parameter>digmax</parameter></paramdef>
        <paramdef><parameter>digits</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Identical to &plgxax;, except that arguments are flags for z axis.
      See the description of &plgxax; for more detail.
    </para>

  </sect1>

  <sect1 id="plhist" renderas="sect3">
    <title>
      <function>plhist</function>: Plot a histogram from unbinned data
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plhist</function>
	</funcdef>
        <paramdef><parameter>n</parameter></paramdef>
        <paramdef><parameter>data</parameter></paramdef>
        <paramdef><parameter>datmin</parameter></paramdef>
        <paramdef><parameter>datmax</parameter></paramdef>
        <paramdef><parameter>nbin</parameter></paramdef>
        <paramdef><parameter>oldwin</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Plots a histogram from <literal><parameter>n</parameter></literal>
      data points stored in the array
      <literal><parameter>data</parameter></literal>.  This routine bins
      the data into <literal><parameter>nbin</parameter></literal> bins
      equally spaced between
      <literal><parameter>datmin</parameter></literal> and
      <literal><parameter>datmax</parameter></literal>, and calls &plbin;
      to draw the resulting histogram.  Parameter
      <literal><parameter>oldwin</parameter></literal> allows the histogram
      either to be plotted in an existing window or causes &plhist; to call
      &plenv; with suitable limits before plotting the histogram.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>n</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of data points.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>data</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with values of the
	    <literal><parameter>n</parameter></literal> data points.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>datmin</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Left-hand edge of lowest-valued bin.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>datmax</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Right-hand edge of highest-valued bin.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nbin</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of (equal-sized) bins into which to divide the interval
	    <literal><parameter>xmin</parameter></literal> to
	    <literal><parameter>xmax</parameter></literal>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>oldwin</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    If one, the histogram is plotted in the currently-defined
	    window, and if zero, &plenv; is called automatically before
	    plotting.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plhls" renderas="sect3">
    <title>
      <function>plhls</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plhls</function>
        </funcdef>
        <paramdef><parameter>h</parameter></paramdef>
        <paramdef><parameter>l</parameter></paramdef>
        <paramdef><parameter>s</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>h</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>l</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>s</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plinit" renderas="sect3">
    <title>
      <function>plinit</function>: Initialize PLplot
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plinit</function>
	</funcdef>
        <paramdef></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Initializing the plotting package.  The program prompts for the
      device keyword or number of the desired output device.  Hitting a
      RETURN in response to the prompt is the same as selecting the first
      device.  &plinit; will issue no prompt if either the device was
      specified previously (via command line flag or the
      <function>plsdev</function> function), or if only one device is
      enabled when PLplot is installed.  If subpages have been specified,
      the output device is divided into <literal>nx</literal> by
      <literal>ny</literal> sub-pages, each of which may be used
      independently.  If &plinit; is called again during a program, the
      previously opened file will be closed.  The subroutine &pladv; is
      used to advance from one subpage to the next.
    </para>

  </sect1>

  <sect1 id="pljoin" renderas="sect3">
    <title>
      <function>pljoin</function>: Draw a line between two points
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>pljoin</function>
	</funcdef>
        <paramdef><parameter>x1</parameter></paramdef>
        <paramdef><parameter>y1</parameter></paramdef>
        <paramdef><parameter>x2</parameter></paramdef>
        <paramdef><parameter>y2</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Joins the point <literal>(<parameter>x1</parameter>,
      <parameter>y1</parameter>)</literal> to
      <literal>(<parameter>x2</parameter>,
      <parameter>y2</parameter>)</literal>.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>x1</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    x coordinate of first point.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>y1</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    y coordinate of first point.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>x2</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    x coordinate of second point.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>y2</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    y coordinate of second point.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="pllab" renderas="sect3">
    <title>
      <function>pllab</function>: Simple routine to write labels
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>pllab</function>
	</funcdef>
        <paramdef><parameter>xlabel</parameter></paramdef>
        <paramdef><parameter>ylabel</parameter></paramdef>
        <paramdef><parameter>tlabel</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Routine for writing simple labels. Use &plmtex; for more complex
      labels.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>xlabel</parameter>
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Label for horizontal axis.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ylabel</parameter>
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Label for vertical axis.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>tlabel</parameter>
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Title of graph.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plline" renderas="sect3">
    <title>
      <function>plline</function>: Draw lines between a number of points
    </title>

    <para>
      <funcsynopsis> 
	<funcdef>
	  <function>plline</function>
	</funcdef>
        <paramdef><parameter>n</parameter></paramdef>
        <paramdef><parameter>x</parameter></paramdef>
        <paramdef><parameter>y</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Draws <literal><parameter>n</parameter>-1</literal> line segments
      joining points <literal>(<parameter>x</parameter>[i],
      <parameter>y</parameter>[i])</literal>.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>n</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of points to join.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>x</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with x coordinates of points.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>y</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with y coordinates of points.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plline3" renderas="sect3">
    <title>
      <function>plline3</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plline3</function>
        </funcdef>
        <paramdef><parameter>n</parameter></paramdef>
        <paramdef><parameter>x</parameter></paramdef>
        <paramdef><parameter>y</parameter></paramdef>
        <paramdef><parameter>z</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>n</parameter> 
	  (<literal>PLINT</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>x</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>y</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>z</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="pllsty" renderas="sect3">
    <title>
      <function>pllsty</function>: Select line style
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>pllsty</function>
	</funcdef>
        <paramdef><parameter>n</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      This sets the line style according to one of eight predefined
      patterns (also see &plstyl;).
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>n</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Integer value between 1 and 8.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plmesh" renderas="sect3">
    <title>
      <function>plmesh</function>: Plot surface mesh 
(C function. For documentation of the equivalent Fortran subroutine see &plmeshfortran;)
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plmesh</function>
	</funcdef>
        <paramdef><parameter>x</parameter></paramdef>
        <paramdef><parameter>y</parameter></paramdef>
        <paramdef><parameter>z</parameter></paramdef>
        <paramdef><parameter>nx</parameter></paramdef>
        <paramdef><parameter>ny</parameter></paramdef>
        <paramdef><parameter>opt</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Plots a surface mesh within the environment set up by &plw3d;.  The
      surface is defined by the two-dimensional array
      <literal><parameter>z</parameter>[<parameter>nx</parameter>][<parameter>ny</parameter>]</literal>,
      the point <literal><parameter>z</parameter>[i][j]</literal> being the
      value of the function at <literal>(<parameter>x</parameter>[i],
      <parameter>y</parameter>[j])</literal>.  Note that the points in
      arrays <literal><parameter>x</parameter></literal> and
      <literal><parameter>y</parameter></literal> do not need to be equally
      spaced, but must be stored in ascending order.  The parameter
      <literal><parameter>opt</parameter></literal> controls the way in
      which the surface is displayed.  For further details see <xref
      linkend="tri-d-plots">.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>x</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to set of x coordinate values at which the function is
	    evaluated.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>y</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to set of y coordinate values at which the function is
	    evaluated.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>z</parameter>
	  (<literal>PLFLT **</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to a vectored two-dimensional array with set of
	    function values.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nx</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of <literal><parameter>x</parameter></literal> values at
	    which function is evaluated.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ny</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of <literal><parameter>y</parameter></literal> values at
	    which function is evaluated.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>opt</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Determines the way in which the surface is represented:
	    <itemizedlist>
	      <listitem>
		<para>
		  <literal><parameter>opt</parameter>=1</literal>: Lines
		  are drawn showing
		  <literal><parameter>z</parameter></literal> as a function
		  of <literal><parameter>x</parameter></literal> for each
		  value of <literal><parameter>y</parameter>[j]</literal>.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal><parameter>opt</parameter>=2</literal>: Lines
		  are drawn showing
		  <literal><parameter>z</parameter></literal> as a function
		  of <literal><parameter>y</parameter></literal> for each
		  value of <literal><parameter>x</parameter>[i]</literal>.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal><parameter>opt</parameter>=3</literal>: Network
		  of lines is drawn connecting points at which function is
		  defined.
		</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
    
  </sect1>

  <sect1 id="plmeshfortran" renderas="sect3">
    <title>
      <function>plmesh</function>: Plot surface mesh
(Fortran subroutine. For documentation of the equivalent C function see &plmesh;)
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plmesh</function>
	</funcdef>
        <paramdef><parameter>x</parameter></paramdef>
        <paramdef><parameter>y</parameter></paramdef>
        <paramdef><parameter>z</parameter></paramdef>
        <paramdef><parameter>nx</parameter></paramdef>
        <paramdef><parameter>ny</parameter></paramdef>
        <paramdef><parameter>opt</parameter></paramdef>
        <paramdef><parameter>mx</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      When called from Fortran, this routine has the same effect as when
      invoked from C.  The interpretation of all parameters (see &plmesh;)
      is also the same except there is an additional parameter given by:
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>mx</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Length of array in x direction, for plotting subarrays.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plmkstrm" renderas="sect3">
    <title>
      <function>plmkstrm</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plmkstrm</function>
        </funcdef>
        <paramdef><parameter>p_strm</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>p_strm</parameter> 
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plmtex" renderas="sect3">
    <title>
      <function>plmtex</function>: Write text relative to viewport boundaries
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plmtex</function>
	</funcdef>
        <paramdef><parameter>side</parameter></paramdef>
        <paramdef><parameter>disp</parameter></paramdef>
        <paramdef><parameter>pos</parameter></paramdef>
        <paramdef><parameter>just</parameter></paramdef>
        <paramdef><parameter>text</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Writes text at a specified position relative to the viewport
      boundaries.  Text may be written inside or outside the viewport, but
      is clipped at the subpage boundaries.  The reference point of a
      string lies along a line passing through the string at half the
      height of a capital letter.  The position of the reference point
      along this line is determined by
      <literal><parameter>just</parameter></literal>, and the position of
      the reference point relative to the viewport is set by
      <literal><parameter>disp</parameter></literal> and
      <literal><parameter>pos</parameter></literal>.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>side</parameter>
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Specifies the side of the viewport along which the text is to
	    be written. The string must be one of:
	    <itemizedlist>
	      <listitem>
		<para>
		  <literal>b</literal>: Bottom of viewport.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>l</literal>: Left of viewport, text written
		  parallel to edge.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>lv</literal>: Left of viewport, text written at
		  right angles to edge.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>r</literal>: Right of viewport, text written
		  parallel to edge.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>rv</literal>: Right of viewport, text written at
		  right angles to edge.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal>t</literal>: Top of viewport.
		</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>disp</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Position of the reference point of string, measured outwards
	    from the specified viewport edge in units of the current
	    character height.  Use negative
	    <literal><parameter>disp</parameter></literal> to write within
	    the viewport.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>pos</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Position of the reference point of string along the specified
	    edge, expressed as a fraction of the length of the edge.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>just</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Specifies the position of the string relative to its reference
	    point.  If <literal><parameter>just</parameter>=0</literal>,
	    the reference point is at the left and if
	    <literal><parameter>just</parameter>=1</literal>, it is at the
	    right of the string.  Other values of
	    <literal><parameter>just</parameter></literal> give
	    intermediate justifications.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>text</parameter>
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    The string to be written out.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plot3d" renderas="sect3">
    <title>
      <function>plot3d</function>: Plot 3-d surface plot
(C function. For documentation of the equivalent Fortran subroutine see
&plot3dfortran;)
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plot3d</function>
	</funcdef>
        <paramdef><parameter>x</parameter></paramdef>
        <paramdef><parameter>y</parameter></paramdef>
        <paramdef><parameter>z</parameter></paramdef>
        <paramdef><parameter>nx</parameter></paramdef>
        <paramdef><parameter>ny</parameter></paramdef>
        <paramdef><parameter>opt</parameter></paramdef>
        <paramdef><parameter>side</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Plots a three dimensional surface plot within the environment set up
      by &plw3d;.  The surface is defined by the two-dimensional array
      <literal><parameter>z</parameter>[<parameter>nx</parameter>][<parameter>ny</parameter>]</literal>,
      the point <literal><parameter>z</parameter>[i][j]</literal> being the
      value of the function at <literal>(<parameter>x</parameter>[i],
      <parameter>y</parameter>[j])</literal>.  Note that the points in
      arrays <literal><parameter>x</parameter></literal> and
      <literal><parameter>y</parameter></literal> do not need to be equally
      spaced, but must be stored in ascending order.  The parameter
      <literal><parameter>opt</parameter></literal> controls the way in
      which the surface is displayed.  For further details see <xref
      linkend="tri-d-plots">.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>x</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to set of x coordinate values at which the function is
	    evaluated.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>y</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to set of y coordinate values at which the function is
	    evaluated.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>z</parameter>
	  (<literal>PLFLT **</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to a vectored two-dimensional array with set of
	    function values.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nx</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of <literal><parameter>x</parameter></literal> values at
	    which function is evaluated.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ny</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of <literal><parameter>y</parameter></literal> values at
	    which function is evaluated.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>opt</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Determines the way in which the surface is represented:
	    <itemizedlist>
	      <listitem>
		<para>
		  <literal><parameter>opt</parameter>=1</literal>: Lines
		  are drawn showing
		  <literal><parameter>z</parameter></literal> as a function
		  of <literal><parameter>x</parameter></literal> for each
		  value of <literal><parameter>y</parameter>[j]</literal>.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal><parameter>opt</parameter>=2</literal>: Lines
		  are drawn showing
		  <literal><parameter>z</parameter></literal> as a function
		  of <literal><parameter>y</parameter></literal> for each
		  value of <literal><parameter>x</parameter>[i]</literal>.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  <literal><parameter>opt</parameter>=3</literal>: Network
		  of lines is drawn connecting points at which function is
		  defined.
		</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>side</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Flag to indicate whether or not ``sides'' should be draw on the
	    figure.  If <literal><parameter>side</parameter>=0</literal> no
	    sides are drawn, otherwise the sides are drawn.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plot3dfortran" renderas="sect3">
    <title>
      <function>plot3d</function>: Plot 3-d surface plot
(Fortran subroutine. For documentation of the equivalent C function see &plot3d;)
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plot3d</function>
	</funcdef>
        <paramdef><parameter>x</parameter></paramdef>
        <paramdef><parameter>y</parameter></paramdef>
        <paramdef><parameter>z</parameter></paramdef>
        <paramdef><parameter>nx</parameter></paramdef>
        <paramdef><parameter>ny</parameter></paramdef>
        <paramdef><parameter>opt</parameter></paramdef>
        <paramdef><parameter>side</parameter></paramdef>
        <paramdef><parameter>mx</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      When called from Fortran, this routine has the same effect as when
      invoked from C.  The interpretation of all parameters (see &plot3d;)
      is also the same except there is an additional parameter given by:
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>mx</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Length of array in x direction, for plotting subarrays.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plpage" renderas="sect3">
    <title>
      <function>plpage</function>: Begin a new page
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plpage</function>
	</funcdef>
        <paramdef></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Deprecated.  Use the new name, &plbop;, for this function instead.
    </para>

  </sect1>

  <sect1 id="plpat" renderas="sect3">
    <title>
      <function>plpat</function>: Set area fill pattern
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plpat</function>
	</funcdef>
        <paramdef><parameter>nlin</parameter></paramdef>
        <paramdef><parameter>inc</parameter></paramdef>
        <paramdef><parameter>del</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets the area fill pattern.  The pattern consists of 1 or 2 sets of
      parallel lines with specified inclinations and spacings.  The
      arguments to this routine are the number of sets to use (1 or 2)
      followed by two pointers to integer arrays (of 1 or 2 elements)
      specifying the inclinations in tenths of a degree and the spacing in
      micrometers.  (also see &plpsty;)
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>nlin</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of sets of lines making up the pattern, either 1 or 2.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>inc</parameter>
	  (<literal>PLINT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with
	    <literal><parameter>nlin</parameter></literal> elements.
	    Specifies the line inclination in tenths of a degree.  (Should
	    be between -900 and 900).
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>del</parameter>
	  (<literal>PLINT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with
	    <literal><parameter>nlin</parameter></literal> elements.
	    Specifies the spacing in micrometers between the lines making
	    up the pattern.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plpoin" renderas="sect3">
    <title>
      <function>plpoin</function>: Plots a character at the specified points
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plpoin</function>
	</funcdef>
        <paramdef><parameter>n</parameter></paramdef>
        <paramdef><parameter>x</parameter></paramdef>
        <paramdef><parameter>y</parameter></paramdef>
        <paramdef><parameter>code</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Marks out a set of <literal><parameter>n</parameter></literal> points
      at positions <literal>(<parameter>x</parameter>(i),
      <parameter>y</parameter>(i))</literal>, using the symbol defined by
      <literal><parameter>code</parameter></literal>.  If
      <literal><parameter>code</parameter></literal> is between 32 and 127,
      the symbol is simply the printable ASCII character in the default
      font.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>n</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of points to be marked.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>x</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with set of x coordinate values for the
	    points.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>y</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with set of y coordinate values for the
	    points.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>code</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Code number for the symbol to be plotted.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plpoin3" renderas="sect3">
    <title>
      <function>plpoin3</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plpoin3</function>
        </funcdef>
        <paramdef><parameter>n</parameter></paramdef>
        <paramdef><parameter>x</parameter></paramdef>
        <paramdef><parameter>y</parameter></paramdef>
        <paramdef><parameter>z</parameter></paramdef>
        <paramdef><parameter>code</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>n</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>x</parameter> 
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>y</parameter> 
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>z</parameter> 
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>code</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plpoly3" renderas="sect3">
    <title>
      <function>plpoly3</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plpoly3</function>
        </funcdef>
        <paramdef><parameter>n</parameter></paramdef>
        <paramdef><parameter>x</parameter></paramdef>
        <paramdef><parameter>y</parameter></paramdef>
        <paramdef><parameter>z</parameter></paramdef>
        <paramdef><parameter>draw</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>n</parameter> 
	  (<literal>PLINT</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>x</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>y</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>z</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>draw</parameter> 
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plprec" renderas="sect3">
    <title>
      <function>plprec</function>: Set precision in numeric labels
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plprec</function>
	</funcdef>
        <paramdef><parameter>set</parameter></paramdef>
        <paramdef><parameter>prec</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets the number of places after the decimal point in numeric labels.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>set</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    If <literal><parameter>set</parameter></literal> is equal to 0
	    then PLplot automatically determines the number of places to
	    use after the decimal point in numeric labels (like those used
	    to label axes).  If
	    <literal><parameter>set</parameter></literal> is 1 then
	    <literal><parameter>prec</parameter></literal> sets the number
	    of places.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>prec</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The number of characters to draw after the decimal point in
	    numeric labels.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plpsty" renderas="sect3">
    <title>
      <function>plpsty</function>: Select area fill pattern
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plpsty</function>
	</funcdef>
        <paramdef><parameter>n</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Select one of eight predefined area fill patterns to use (also see
      &plpat;).
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>n</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The desired pattern.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plptex" renderas="sect3">
    <title>
      <function>plptex</function>: Write text inside the viewport
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plptex</function>
	</funcdef>
        <paramdef><parameter>x</parameter></paramdef>
        <paramdef><parameter>y</parameter></paramdef>
        <paramdef><parameter>dx</parameter></paramdef>
        <paramdef><parameter>dy</parameter></paramdef>
        <paramdef><parameter>just</parameter></paramdef>
        <paramdef><parameter>text</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Writes text at a specified position and inclination within the
      viewport.  Text is clipped at the viewport boundaries.  The reference
      point of a string lies along a line passing through the string at
      half the height of a capital letter.  The position of the reference
      point along this line is determined by
      <literal><parameter>just</parameter></literal>, the reference point
      is placed at world coordinates <literal>(<parameter>x</parameter>,
      <parameter>y</parameter>)</literal> within the viewport.  The
      inclination of the string is specified in terms of differences of
      world coordinates making it easy to write text parallel to a line in
      a graph.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>x</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    x coordinate of reference point of string.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>y</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    y coordinate of reference point of string.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>dx</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Together with <literal><parameter>dy</parameter></literal>,
	    this specifies the inclination of the string.  The baseline of
	    the string is parallel to a line joining
	    <literal>(<parameter>x</parameter>,
	    <parameter>y</parameter>)</literal> to
	    <literal>(<parameter>x</parameter>+<parameter>dx</parameter>,
	    <parameter>y</parameter>+<parameter>dy</parameter>)</literal>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>dy</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Together with <literal><parameter>dx</parameter></literal>,
	    this specifies the inclination of the string.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>just</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Specifies the position of the string relative to its reference
	    point.  If <literal><parameter>just</parameter>=0</literal>,
	    the reference point is at the left and if
	    <literal><parameter>just</parameter>=1</literal>, it is at the
	    right of the string.  Other values of
	    <literal><parameter>just</parameter></literal> give
	    intermediate justifications.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>text</parameter>
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    The string to be written out.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plreplot" renderas="sect3">
    <title>
      <function>plreplot</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
	  <function>plreplot</function>
        </funcdef>
	<paramdef></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

  </sect1>

  <sect1 id="plrgb" renderas="sect3">
    <title>
      <function>plrgb</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plrgb</function>
        </funcdef>
        <paramdef><parameter>r</parameter></paramdef>
        <paramdef><parameter>g</parameter></paramdef>
        <paramdef><parameter>b</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>r</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>g</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>b</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plrgb1" renderas="sect3">
    <title>
      <function>plrgb1</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plrgb1</function>
        </funcdef>
        <paramdef><parameter>r</parameter></paramdef>
        <paramdef><parameter>g</parameter></paramdef>
        <paramdef><parameter>b</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>r</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>g</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>b</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plschr" renderas="sect3">
    <title>
      <function>plschr</function>: Set character size
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plschr</function>
	</funcdef>
        <paramdef><parameter>def</parameter></paramdef>
        <paramdef><parameter>scale</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      This sets up the size of all subsequent characters drawn.  The actual
      height of a character is the product of the default character size
      and a scaling factor.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>def</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The default height of a character in millimeters, should be set
	    to zero if the default height is to remain unchanged.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>scale</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Scale factor to be applied to default to get actual character
	    height.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plscmap0" renderas="sect3">
    <title>
      <function>plscmap0</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plscmap0</function>
        </funcdef>
        <paramdef><parameter>r</parameter></paramdef>
        <paramdef><parameter>g</parameter></paramdef>
        <paramdef><parameter>b</parameter></paramdef>
        <paramdef><parameter>ncol0</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>r</parameter> 
	  (<literal>PLINT *</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>g</parameter> 
	  (<literal>PLINT *</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>b</parameter> 
	  (<literal>PLINT *</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ncol0</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plscmap0n" renderas="sect3">
    <title>
      <function>plscmap0n</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plscmap0n</function>
        </funcdef>
        <paramdef><parameter>ncol0</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>ncol0</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plscmap1" renderas="sect3">
    <title>
      <function>plscmap1</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plscmap1</function>
        </funcdef>
        <paramdef><parameter>r</parameter></paramdef>
        <paramdef><parameter>g</parameter></paramdef>
        <paramdef><parameter>b</parameter></paramdef>
        <paramdef><parameter>ncol1</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>r</parameter> 
	  (<literal>PLINT *</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>g</parameter> 
	  (<literal>PLINT *</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>b</parameter> 
	  (<literal>PLINT *</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ncol1</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plscmap1l" renderas="sect3">
    <title>
      <function>plscmap1l</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plscmap1l</function>
        </funcdef>
        <paramdef><parameter>itype</parameter></paramdef>
        <paramdef><parameter>npts</parameter></paramdef>
        <paramdef><parameter>pos</parameter></paramdef>
        <paramdef><parameter>coord1</parameter></paramdef>
        <paramdef><parameter>coord2</parameter></paramdef>
        <paramdef><parameter>coord3</parameter></paramdef>
        <paramdef><parameter>rev</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>itype</parameter> 
	  (<literal>PLINT</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>npts</parameter> 
	  (<literal>PLINT</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>pos</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>coord1</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>coord2</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>coord3</parameter> 
	  (<literal>PLFLT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>rev</parameter> 
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plscmap1n" renderas="sect3">
    <title>
      <function>plscmap1n</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plscmap1n</function>
        </funcdef>
        <paramdef><parameter>ncol1</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>ncol1</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plscol0" renderas="sect3">
    <title>
      <function>plscol0</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plscol0</function>
        </funcdef>
        <paramdef><parameter>icol0</parameter></paramdef>
        <paramdef><parameter>r</parameter></paramdef>
        <paramdef><parameter>g</parameter></paramdef>
        <paramdef><parameter>b</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>icol0</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>r</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>g</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>b</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plscolbg" renderas="sect3">
    <title>
      <function>plscolbg</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plscolbg</function>
        </funcdef>
        <paramdef><parameter>r</parameter></paramdef>
        <paramdef><parameter>g</parameter></paramdef>
        <paramdef><parameter>b</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>r</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>g</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>b</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plscolor" renderas="sect3">
    <title>
      <function>plscolor</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plscolor</function>
        </funcdef>
        <paramdef><parameter>color</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>color</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsdev" renderas="sect3">
    <title>
      <function>plsdev</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plsdev</function>
        </funcdef>
        <paramdef><parameter>devname</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>devname</parameter> 
	  (<literal>const char *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsdidev" renderas="sect3">
    <title>
      <function>plsdidev</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plsdidev</function>
        </funcdef>
        <paramdef><parameter>mar</parameter></paramdef>
        <paramdef><parameter>aspect</parameter></paramdef>
        <paramdef><parameter>jx</parameter></paramdef>
        <paramdef><parameter>jy</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>mar</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>aspect</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>jx</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>jy</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsdimap" renderas="sect3">
    <title>
      <function>plsdimap</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plsdimap</function>
        </funcdef>
        <paramdef><parameter>dimxmin</parameter></paramdef>
        <paramdef><parameter>dimxmax</parameter></paramdef>
        <paramdef><parameter>dimymin</parameter></paramdef>
        <paramdef><parameter>dimymax</parameter></paramdef>
        <paramdef><parameter>dimxpmm</parameter></paramdef>
        <paramdef><parameter>dimypmm</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>dimxmin</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>dimxmax</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>dimymin</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>dimymax</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>dimxpmm</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>dimypmm</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsdiori" renderas="sect3">
    <title>
      <function>plsdiori</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plsdiori</function>
        </funcdef>
        <paramdef><parameter>rot</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>rot</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsdiplt" renderas="sect3">
    <title>
      <function>plsdiplt</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plsdiplt</function>
        </funcdef>
        <paramdef><parameter>xmin</parameter></paramdef>
        <paramdef><parameter>ymin</parameter></paramdef>
        <paramdef><parameter>xmax</parameter></paramdef>
        <paramdef><parameter>ymax</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>xmin</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymin</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmax</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymax</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsdiplz" renderas="sect3">
    <title>
      <function>plsdiplz</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plsdiplz</function>
        </funcdef>
        <paramdef><parameter>xmin</parameter></paramdef>
        <paramdef><parameter>ymin</parameter></paramdef>
        <paramdef><parameter>xmax</parameter></paramdef>
        <paramdef><parameter>ymax</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>xmin</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymin</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmax</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymax</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsesc" renderas="sect3">
    <title>
      <function>plsesc</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plsesc</function>
        </funcdef>
        <paramdef><parameter>esc</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>esc</parameter> 
	  (<literal>char</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsfam" renderas="sect3">
    <title>
      <function>plsfam</function>: Set family file parameters
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plsfam</function>
	</funcdef>
        <paramdef><parameter>fam</parameter></paramdef>
        <paramdef><parameter>num</parameter></paramdef>
        <paramdef><parameter>bmax</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets variables dealing with output file familying.  Does nothing if
      familying not supported by the driver.  This routine, if used, must
      be called before initializing PLplot.  See Section \ref{sec:family}
      for more information.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>fam</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Family flag (boolean).  If nonzero, familying is enabled.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>num</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Current family file number.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>bmax</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Maximum file size (in bytes) for a family file.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsfile" renderas="sect3">
    <title>
      <function>plsfile</function>: Set output file handle
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plsfile</function>
	</funcdef>
        <paramdef><parameter>file</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets the current output file handle, if applicable.  If the file has
      has not been previously opened and is required by the driver, the
      user will be prompted for the file name.  This routine, if used, must
      be called before initializing PLplot.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>file</parameter>
	  (<literal>FILE *</literal>, input)
	</term>
	<listitem>
	  <para>
	    File pointer.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsfnam" renderas="sect3">
    <title>
      <function>plsfnam</function>: Set output file name
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plsfnam</function>
	</funcdef>
        <paramdef><parameter>fnam</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets the current output file name, if applicable.  If the file name
      has not been specified and is required by the driver, the user will
      be prompted for it.  If using the X-windows output driver, this sets
      the display name.  This routine, if used, must be called before
      initializing PLplot.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>fnam</parameter>
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to file name string.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plshade" renderas="sect3">
    <title>
      <function>plshade</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plshade</function>
        </funcdef>
        <paramdef><parameter>a</parameter></paramdef>
        <paramdef><parameter>nx</parameter></paramdef>
        <paramdef><parameter>ny</parameter></paramdef>
        <paramdef><parameter>defined</parameter></paramdef>
        <paramdef><parameter>xmin</parameter></paramdef>
        <paramdef><parameter>xmax</parameter></paramdef>
        <paramdef><parameter>ymin</parameter></paramdef>
        <paramdef><parameter>ymax</parameter></paramdef>
        <paramdef><parameter>shade_min</parameter></paramdef>
        <paramdef><parameter>shade_max</parameter></paramdef>
        <paramdef><parameter>sh_cmap</parameter></paramdef>
        <paramdef><parameter>sh_color</parameter></paramdef>
        <paramdef><parameter>sh_width</parameter></paramdef>
        <paramdef><parameter>min_color</parameter></paramdef>
        <paramdef><parameter>min_width</parameter></paramdef>
        <paramdef><parameter>max_color</parameter></paramdef>
        <paramdef><parameter>max_width</parameter></paramdef>
        <paramdef><parameter>(PLINT</parameter></paramdef>
        <paramdef><parameter>fill</parameter></paramdef>
        <paramdef><parameter>rectangular</parameter></paramdef>
        <paramdef><parameter>pltr</parameter></paramdef>
        <paramdef><parameter>pltr_data</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>a</parameter> 
	  (<literal>PLFLT **</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nx</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ny</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>defined</parameter> 
	  (<literal>const char **</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmin</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmax</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymin</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymax</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>shade_min</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>shade_max</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>sh_cmap</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>sh_color</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>sh_width</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>min_color</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>min_width</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>max_color</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>max_width</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>fill</parameter> 
	  (<literal>void (*) (PLINT, PLFLT *, PLFLT *)</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>rectangular</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>pltr</parameter> 
	  (<literal>void (*) (PLFLT, PLFLT, PLFLT *, PLFLT *, PLPointer)
           </literal>, input) 
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>pltr_data</parameter> 
	  (<literal>PLPointer</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plshade1" renderas="sect3">
    <title>
      <function>plshade1</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plshade1</function>
        </funcdef>
        <paramdef><parameter>a</parameter></paramdef>
        <paramdef><parameter>nx</parameter></paramdef>
        <paramdef><parameter>ny</parameter></paramdef>
        <paramdef><parameter>defined</parameter></paramdef>
        <paramdef><parameter>xmin</parameter></paramdef>
        <paramdef><parameter>xmax</parameter></paramdef>
        <paramdef><parameter>ymin</parameter></paramdef>
        <paramdef><parameter>ymax</parameter></paramdef>
        <paramdef><parameter>shade_min</parameter></paramdef>
        <paramdef><parameter>shade_max</parameter></paramdef>
        <paramdef><parameter>sh_cmap</parameter></paramdef>
        <paramdef><parameter>sh_color</parameter></paramdef>
        <paramdef><parameter>sh_width</parameter></paramdef>
        <paramdef><parameter>min_color</parameter></paramdef>
        <paramdef><parameter>min_width</parameter></paramdef>
        <paramdef><parameter>max_color</parameter></paramdef>
        <paramdef><parameter>max_width</parameter></paramdef>
        <paramdef><parameter>fill</parameter></paramdef>
        <paramdef><parameter>rectangular</parameter></paramdef>
        <paramdef><parameter>pltr</parameter></paramdef>
        <paramdef><parameter>pltr_data</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>a</parameter> 
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nx</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ny</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>defined</parameter> 
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmin</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmax</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymin</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymax</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>shade_min</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>shade_max</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>sh_cmap</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>sh_color</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>sh_width</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>min_color</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>min_width</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>max_color</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>max_width</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>fill</parameter> 
	  (<literal>void (*) (PLINT, PLFLT *, PLFLT *)</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>rectangular</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>pltr</parameter> 
	  (<literal>void (*) (PLFLT, PLFLT, PLFLT *, PLFLT *,
          PLPointer)</literal>, input) 
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>pltr_data</parameter> 
	  (<literal>PLPointer</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsmaj" renderas="sect3">
    <title>
      <function>plsmaj</function>: Set length of major ticks
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plsmaj</function>
	</funcdef>
        <paramdef><parameter>def</parameter></paramdef>
        <paramdef><parameter>scale</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      This sets up the length of the major ticks.  The actual length is the
      product of the default length and a scaling factor as for character
      height.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>def</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The default length of a major tick in millimeters, should be
	    set to zero if the default length is to remain unchanged.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>scale</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Scale factor to be applied to default to get actual tick
	    length.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsmin" renderas="sect3">
    <title>
      <function>plsmin</function>: Set length of minor ticks
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plsmin</function>
	</funcdef>
        <paramdef><parameter>def</parameter></paramdef>
        <paramdef><parameter>scale</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      This sets up the length of the minor ticks and the length of the
      terminals on error bars.  The actual length is the product of the
      default length and a scaling factor as for character height.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>def</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The default length of a minor tick in millimeters, should be
	    set to zero if the default length is to remain unchanged.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>scale</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Scale factor to be applied to default to get actual tick
	    length.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsori" renderas="sect3">
    <title>
      <function>plsori</function>: Set orientation
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plsori</function>
	</funcdef>
        <paramdef><parameter>ori</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets the current orientation.  If
      <literal><parameter>ori</parameter></literal> is equal to zero
      (default) then landscape is used (x axis is parallel to the longest
      edge of the page), otherwise portrait is used.  This option is not
      supported by all output drivers (in particular, most interactive
      screen drivers ignore the orientation).  This routine, if used, must
      be called before initializing PLplot.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>ori</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Orientation value.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plspage" renderas="sect3">
    <title>
      <function>plspage</function>: Set page parameters
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plspage</function>
	</funcdef>
        <paramdef><parameter>xp</parameter></paramdef>
        <paramdef><parameter>yp</parameter></paramdef>
        <paramdef><parameter>xleng</parameter></paramdef>
        <paramdef><parameter>yleng</parameter></paramdef>
        <paramdef><parameter>xoff</parameter></paramdef>
        <paramdef><parameter>yoff</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets the page configuration (optional).  Not all parameters
      recognized by all drivers.  The X-window driver uses the length and
      offset parameters to determine the window size and location.  This
      routine, if used, must be called before initializing PLplot.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>xp</parameter>
	  (<literal>PLFLT</literal>, output)
	</term>
	<listitem>
	  <para>
	    Number of pixels, x.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>yp</parameter>
	  (<literal>PLFLT</literal>, output)
	</term>
	<listitem>
	  <para>
	    Number of pixels, y.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xleng</parameter>
	  (<literal>PLINT </literal>, output)
	</term>
	<listitem>
	  <para>
	    Page length, x.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>yleng</parameter>
	  (<literal>PLINT</literal>, output)
	</term>
	<listitem>
	  <para>
	    Page length, y.
          </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
          <parameter>xoff</parameter>
          (<literal>PLINT</literal>, output)
        </term>
        <listitem>
          <para>
            Page offset, x.
          </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
          <parameter>yoff</parameter>
          (<literal>PLINT</literal>, output)
        </term>
        <listitem>
          <para>
            Page offset, y.
          </para>
        </listitem>
       </varlistentry>
     </variablelist>
 
   </sect1>

  <sect1 id="plspause" renderas="sect3">
    <title>
      <function>plspause</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plspause</function>
        </funcdef>
        <paramdef><parameter>pause</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>pause</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsstrm" renderas="sect3">
    <title>
      <function>plsstrm</function>: Set current output stream
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plsstrm</function>
	</funcdef>
        <paramdef><parameter>strm</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets the number of the current output stream.  The stream number
      defaults to 0 unless changed by this routine.  The first use of this
      routine must be followed by a call initializing PLplot
      (e.g. &plstar;).
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>strm</parameter>
	  (<literal>PLINT</literal>, output)
	</term>
	<listitem>
	  <para>
	    The current stream number.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plssub" renderas="sect3">
    <title>
      <function>plssub</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plssub</function>
        </funcdef>
        <paramdef><parameter>nx</parameter></paramdef>
        <paramdef><parameter>ny</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>nx</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ny</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plssym" renderas="sect3">
    <title>
      <function>plssym</function>: Set symbol size
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plssym</function>
	</funcdef>
        <paramdef><parameter>def</parameter></paramdef>
        <paramdef><parameter>scale</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      This sets up the size of all subsequent symbols drawn by &plpoin; and
      &plsym;.  The actual height of a symbol is the product of the default
      symbol size and a scaling factor as for the character height.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>def</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The default height of a symbol in millimeters, should be set to
	    zero if the default height is to remain unchanged.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>scale</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Scale factor to be applied to default to get actual symbol
	    height.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plstar" renderas="sect3">
    <title>
      <function>plstar</function>: Initialization
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plstar</function>
	</funcdef>
        <paramdef><parameter>nx</parameter></paramdef>
        <paramdef><parameter>ny</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Initializing the plotting package.  The program prompts for the
      device keyword or number of the desired output device.  Hitting a
      RETURN in response to the prompt is the same as selecting the first
      device.  If only one device is enabled when PLplot is installed,
      &plstar; will issue no prompt.  The output device is divided into
      <literal><parameter>nx</parameter></literal> by
      <literal><parameter>ny</parameter></literal> sub-pages, each of which
      may be used independently.  The subroutine &pladv; is used to advance
      from one subpage to the next.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>nx</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of subpages to divide output page in the horizontal
	    direction.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ny</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of subpages to divide output page in the vertical
	    direction.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plstart" renderas="sect3">
    <title>
      <function>plstart</function>: Initialization
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plstart</function>
	</funcdef>
        <paramdef><parameter>device</parameter></paramdef>
        <paramdef><parameter>nx</parameter></paramdef>
        <paramdef><parameter>ny</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Alternative to &plstar; for initializing the plotting package.  The
      <literal><parameter>device</parameter></literal> name keyword for the
      desired output device must be supplied as an argument.  The device
      keywords are the same as those printed out by &plstar;.  If the
      requested device is not available, or if the input string is empty or
      begins with ``?'', the prompted startup of &plstar; is used.  This
      routine also divides the output device into
      <literal><parameter>nx</parameter></literal> by
      <literal><parameter>ny</parameter></literal> sub-pages, each of which
      may be used independently.  The subroutine &pladv; is used to advance
      from one subpage to the next.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>device</parameter>
	  (<literal>const char *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Device name (keyword) of the required output device.  If NULL
	    or if the first character is a ``?'', the normal (prompted)
	    startup is used.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>nx</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of subpages to divide output page in the horizontal
	    direction.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ny</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of subpages to divide output page in the vertical
	    direction.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plstripa" renderas="sect3">
    <title>
      <function>plstripa</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plstripa</function>
        </funcdef>
        <paramdef><parameter>id</parameter></paramdef>
        <paramdef><parameter>p</parameter></paramdef>
        <paramdef><parameter>x</parameter></paramdef>
        <paramdef><parameter>y</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>id</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>p</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>x</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>y</parameter> 
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plstripc" renderas="sect3">
    <title>
      <function>plstripc</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plstripc</function>
        </funcdef>
        <paramdef><parameter>id</parameter></paramdef>
        <paramdef><parameter>xspec</parameter></paramdef>
        <paramdef><parameter>yspec</parameter></paramdef>
        <paramdef><parameter>xmin</parameter></paramdef>
        <paramdef><parameter>xmax</parameter></paramdef>
        <paramdef><parameter>xjump</parameter></paramdef>
        <paramdef><parameter>ymin</parameter></paramdef>
        <paramdef><parameter>ymax</parameter></paramdef>
        <paramdef><parameter>xlpos</parameter></paramdef>
        <paramdef><parameter>ylpos</parameter></paramdef>
        <paramdef><parameter>y_ascl</parameter></paramdef>
        <paramdef><parameter>acc</parameter></paramdef>
        <paramdef><parameter>colbox</parameter></paramdef>
        <paramdef><parameter>collab</parameter></paramdef>
        <paramdef><parameter>colline</parameter></paramdef>
        <paramdef><parameter>styline</parameter></paramdef>
        <paramdef><parameter>legline[]</parameter></paramdef>
        <paramdef><parameter>labx</parameter></paramdef>
        <paramdef><parameter>laby</parameter></paramdef>
        <paramdef><parameter>labtop</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>id</parameter> 
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xspec</parameter> 
	  (<literal>char *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>yspec</parameter> 
	  (<literal>char *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmin</parameter> 
	  (<literal>PLFLT</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmax</parameter> 
	  (<literal>PLFLT</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xjump</parameter> 
	  (<literal>PLFLT</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymin</parameter> 
	  (<literal>PLFLT</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymax</parameter> 
	  (<literal>PLFLT</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xlpos</parameter> 
	  (<literal>PLFLT</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ylpos</parameter> 
	  (<literal>PLFLT</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>y_ascl</parameter> 
	  (<literal>PLINT</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>acc</parameter> 
	  (<literal>PLINT</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>colbox</parameter> 
	  (<literal>PLINT</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>collab</parameter> 
	  (<literal>PLINT</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>colline</parameter> 
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>styline</parameter> 
	  (<literal>PLINT *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>legline[]</parameter> 
	  (<literal>char *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>labx</parameter> 
	  (<literal>char *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>laby</parameter> 
	  (<literal>char *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>labtop</parameter> 
	  (<literal>char *</literal>, output)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plstripd" renderas="sect3">
    <title>
      <function>plstripd</function>: ???
    </title> 

    <para>
      <funcsynopsis>
        <funcdef>
           <function>plstripd</function>
        </funcdef>
        <paramdef><parameter>id</parameter></paramdef>
      </funcsynopsis> 
    </para> 

    <para>
      ???
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>id</parameter> 
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
            ???
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plstyl" renderas="sect3">
    <title>
      <function>plstyl</function>: Set line style
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plstyl</function>
	</funcdef>
        <paramdef><parameter>nels</parameter></paramdef>
        <paramdef><parameter>mark</parameter></paramdef>
        <paramdef><parameter>space</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      This sets up the line style for all lines subsequently drawn.  A line
      consists of segments in which the pen is alternately down and up.
      The lengths of these segments are passed in the arrays
      <literal><parameter>mark</parameter></literal> and
      <literal><parameter>space</parameter></literal> respectively.  The
      number of mark-space pairs is specified by
      <literal><parameter>nels</parameter></literal>.  In order to return
      the line style to the default continuous line, &plstyl; should be
      called with <literal><parameter>nels</parameter>=0</literal>.(see
      also &pllsty;)
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>nels</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The number of <literal><parameter>mark</parameter></literal>
	    and <literal><parameter>space</parameter></literal> elements in
	    a line.  Thus a simple broken line can be obtained by setting
	    <literal><parameter>nels</parameter>=1</literal>.  A continuous
	    line is specified by setting
	    <literal><parameter>nels</parameter>=0</literal>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>mark</parameter>
	  (<literal>PLINT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with the lengths of the segments during which
	    the pen is down, measured in micrometers.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>space</parameter>
	  (<literal>PLINT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with the lengths of the segments during which
	    the pen is up, measured in micrometers.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsvpa" renderas="sect3">
    <title>
      <function>plsvpa</function>: Specify viewport in absolute coordinates
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plsvpa</function>
	</funcdef>
        <paramdef><parameter>xmin</parameter></paramdef>
        <paramdef><parameter>xmax</parameter></paramdef>
        <paramdef><parameter>ymin</parameter></paramdef>
        <paramdef><parameter>ymax</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Alternate routine to &plvpor; for setting up the viewport.  This
      routine should be used only if the viewport is required to have a
      definite size in millimeters.  The routine &plgspa; is useful for
      finding out the size of the current subpage.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>xmin</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The distance of the left-hand edge of the viewport from the
	    left-hand edge of the subpage in millimeters.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmax</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The distance of the right-hand edge of the viewport from the
	    left-hand edge of the subpage in millimeters.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymin</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The distance of the bottom edge of the viewport from the bottom
	    edge of the subpage in millimeters.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymax</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The distance of the top edge of the viewport from the top edge
	    of the subpage in millimeters.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsxax" renderas="sect3">
    <title>
      <function>plsxax</function>: Set x axis parameters
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plsxax</function>
	</funcdef>
        <paramdef><parameter>digmax</parameter></paramdef>
        <paramdef><parameter>digits</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Returns current values of the
      <literal><parameter>digmax</parameter></literal> and
      <literal><parameter>digits</parameter></literal> flags for the x
      axis.  <literal><parameter>digits</parameter></literal> is updated
      after the plot is drawn, so so this routine should only be called
      <emphasis>after</emphasis> the call to &plbox; (or &plbox3;) is
      complete.  See <xref linkend="annotation"> for more information.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>digmax</parameter>
	  (<literal>PLINT</literal>, output)
	</term>
	<listitem>
	  <para>
	    Variable to set the maximum number of digits.  If nonzero, the
	    printed label will be switched to a floating point
	    representation when the number of digits exceeds
	    <literal><parameter>digmax</parameter></literal>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>digits</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Field digits value.  Currently, changing its value here has no
	    effect since it is set only by &plbox; or &plbox3;.  However,
	    the user may obtain its value after a call to &plbox; by
	    calling &plgxax;.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsyax" renderas="sect3">
    <title>
      <function>plsyax</function>: Set y axis parameters
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plsyax</function>
	</funcdef>
        <paramdef><parameter>digmax</parameter></paramdef>
        <paramdef><parameter>digits</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Identical to &plsxax;, except that arguments are flags for y axis.
      See the description of &plsxax; for more detail.
    </para>

  </sect1>

  <sect1 id="plsym" renderas="sect3">
    <title>
      <function>plsym</function>: Plots a symbol at the specified points
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plsym</function>
	</funcdef>
        <paramdef><parameter>n</parameter></paramdef>
        <paramdef><parameter>x</parameter></paramdef>
        <paramdef><parameter>y</parameter></paramdef>
        <paramdef><parameter>code</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Marks out a set of <literal><parameter>n</parameter></literal> points
      at positions <literal>(<parameter>x</parameter>[i],
      <parameter>y</parameter>[i])</literal>, using the symbol defined by
      <literal><parameter>code</parameter></literal>.  The code is
      interpreted as an index in the Hershey font tables.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>n</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Number of points to be marked.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>x</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with set of x coordinate values for the
	    points.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>y</parameter>
	  (<literal>PLFLT *</literal>, input)
	</term>
	<listitem>
	  <para>
	    Pointer to array with set of y coordinate values for the
	    points.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>code</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Code number for the symbol to be plotted.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plszax" renderas="sect3">
    <title>
      <function>plszax</function>: Set z axis parameters
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plszax</function>
	</funcdef>
        <paramdef><parameter>digmax</parameter></paramdef>
        <paramdef><parameter>digits</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Identical to &plsxax;, except that arguments are flags for z axis.
      See the description of &plsxax; for more detail.
    </para>

  </sect1>

  <sect1 id="pltext" renderas="sect3">
    <title>
      <function>pltext</function>: Switch to text screen
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>pltext</function>
	</funcdef>
        <paramdef></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets an interactive device to text mode, used in conjunction with
      &plgra; to allow graphics and text to be interspersed.  On a device
      which supports separate text and graphics windows, this command
      causes control to be switched to the text window.  This can be useful
      for printing diagnostic messages or getting user input, which would
      otherwise interfere with the plots.  The user
      <emphasis>must</emphasis> switch back to the graphics window before
      issuing plot commands, as the text (or console) device will probably
      become quite confused otherwise.  If already in text mode, this
      command is ignored.  It is also ignored on devices which only support
      a single window or use a different method for shifting focus (see
      also &plgra;).
    </para>

  </sect1>

  <sect1 id="plvasp" renderas="sect3">
    <title>
      <function>plvasp</function>: Specify viewport using aspect ratio only
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plvasp</function>
	</funcdef>
        <paramdef><parameter>aspect</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets the viewport so that the ratio of the length of the y axis to
      that of the x axis is equal to
      <literal><parameter>aspect</parameter></literal>.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>aspect</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Ratio of length of y axis to length of x axis.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plvpas" renderas="sect3">
    <title>
      <function>plvpas</function>: Specify viewport using coordinates and aspect ratio
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plvpas</function>
	</funcdef>
        <paramdef><parameter>xmin</parameter></paramdef>
        <paramdef><parameter>xmax</parameter></paramdef>
        <paramdef><parameter>ymin</parameter></paramdef>
        <paramdef><parameter>ymax</parameter></paramdef>
        <paramdef><parameter>aspect</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Device-independent routine for setting up the viewport.  The viewport
      is chosen to be the largest with the given aspect ratio that fits
      within the specified region (in terms of normalized subpage
      coordinates).  This routine is functionally equivalent to &plvpor;
      when a ``natural'' aspect ratio (0.0) is chosen.  Unlike &plvasp;,
      this routine reserves no extra space at the edges for labels.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>xmin</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The normalized subpage coordinate of the left-hand edge of the
	    viewport.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmax</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The normalized subpage coordinate of the right-hand edge of the
	    viewport.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymin</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The normalized subpage coordinate of the bottom edge of the
	    viewport.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymax</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The normalized subpage coordinate of the top edge of the
	    viewport.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>aspect</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Ratio of length of y axis to length of x axis.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plvpor" renderas="sect3">
    <title>
      <function>plvpor</function>: Specify viewport using coordinates
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plvpor</function>
	</funcdef>
        <paramdef><parameter>xmin</parameter></paramdef>
        <paramdef><parameter>xmax</parameter></paramdef>
        <paramdef><parameter>ymin</parameter></paramdef>
        <paramdef><parameter>ymax</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Device-independent routine for setting up the viewport.  This defines
      the viewport in terms of normalized subpage coordinates which run
      from 0.0 to 1.0 (left to right and bottom to top) along each edge of
      the current subpage.  Use the alternate routine &plsvpa; in order to
      create a viewport of a definite size.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>xmin</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The normalized subpage coordinate of the left-hand edge of the
	    viewport.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmax</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The normalized subpage coordinate of the right-hand edge of the
	    viewport.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymin</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The normalized subpage coordinate of the bottom edge of the
	    viewport.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymax</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The normalized subpage coordinate of the top edge of the
	    viewport.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plvsta" renderas="sect3">
    <title>
      <function>plvsta</function>: Select standard viewport
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plvsta</function>
	</funcdef>
        <paramdef></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets up a standard viewport, leaving a left-hand margin of seven
      character heights, and four character heights around the other three
      sides.
    </para>

  </sect1>

  <sect1 id="plw3d" renderas="sect3">
    <title>
      <function>plw3d</function>: Set up window for 3-d plotting
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plw3d</function>
	</funcdef>
        <paramdef><parameter>basex</parameter></paramdef>
        <paramdef><parameter>basey</parameter></paramdef>
        <paramdef><parameter>height</parameter></paramdef>
        <paramdef><parameter>xmin</parameter></paramdef>
        <paramdef><parameter>xmax</parameter></paramdef>
        <paramdef><parameter>ymin</parameter></paramdef>
        <paramdef><parameter>ymax</parameter></paramdef>
        <paramdef><parameter>zmin</parameter></paramdef>
        <paramdef><parameter>zmax</parameter></paramdef>
        <paramdef><parameter>alt</parameter></paramdef>
        <paramdef><parameter>az</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets up a window for a three-dimensional surface plot within the
      currently defined two-dimensional window.  The enclosing box for the
      surface plot defined by
      <literal><parameter>xmin</parameter></literal>,
      <literal><parameter>xmax</parameter></literal>,
      <literal><parameter>ymin</parameter></literal>,
      <literal><parameter>ymax</parameter></literal>,
      <literal><parameter>zmin</parameter></literal> and
      <literal><parameter>zmax</parameter></literal> in user-coordinate
      space is mapped into a box of world coordinate size
      <literal><parameter>basex</parameter></literal> by
      <literal><parameter>basey</parameter></literal> by
      <literal><parameter>height</parameter></literal> so that
      <literal><parameter>xmin</parameter></literal> maps to
      <literal>-<parameter>basex</parameter>/2</literal>,
      <literal><parameter>xmax</parameter></literal> maps to
      <literal><parameter>basex</parameter>/2</literal>,
      <literal><parameter>ymin</parameter></literal> maps to
      <literal>-<parameter>basey</parameter>/2</literal>,
      <literal><parameter>ymax</parameter></literal> maps to
      <literal><parameter>basey</parameter>/2</literal>,
      <literal><parameter>zmin</parameter></literal> maps to
      <literal>0</literal> and
      <literal><parameter>zmax</parameter></literal> maps to
      <literal><parameter>height</parameter></literal>.  The resulting
      world-coordinate box is then viewed by an observer at altitude
      <literal><parameter>alt</parameter></literal> and azimuth
      <literal<parameter>az</parameter></literal>.  This routine must be
      called before &plbox3; or &plot3d;.  For a more complete description
      of three-dimensional plotting see <xref linkend="tri-d-plots">.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>basex</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The x coordinate size of the world-coordinate box.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>basey</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The y coordinate size of the world-coordinate box.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>height</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The z coordinate size of the world-coordinate box.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmin</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The minimum user x coordinate value.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmax</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The maximum user x coordinate value.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymin</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The minimum user y coordinate value.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymax</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The maximum user y coordinate value.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>zmin</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The minimum user z coordinate value.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>zmax</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The maximum user z coordinate value.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>alt</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The viewing altitude in degrees above the xy plane.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>az</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The viewing azimuth in degrees.  When
	    <literal><parameter>az</parameter>=0</literal>, the observer is
	    looking face onto the zx plane, and as
	    <literal><parameter>az</parameter></literal> is increased, the
	    observer moves clockwise around the box when viewed from above
	    the xy plane.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plwid" renderas="sect3">
    <title>
      <function>plwid</function>: Set pen width
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plwid</function>
	</funcdef>
        <paramdef><parameter>width</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets the pen width.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>width</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The desired pen width.  The pen width must be between 1 and a
	    device dependent maximum value.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plwind" renderas="sect3">
    <title>
      <function>plwind</function>: Specify world coordinates of viewport boundaries
    </title>

    <para>
      <funcsynopsis>
	<funcdef>
	  <function>plwind</function>
	</funcdef>
        <paramdef><parameter>xmin</parameter></paramdef>
        <paramdef><parameter>xmax</parameter></paramdef>
        <paramdef><parameter>ymin</parameter></paramdef>
        <paramdef><parameter>ymax</parameter></paramdef>
      </funcsynopsis>
    </para>

    <para>
      Sets up the world coordinates of the edges of the viewport.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>xmin</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The world x coordinate of the left-hand edge of the viewport.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>xmax</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The world x coordinate of the right-hand edge of the viewport.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymin</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The world y coordinate of the bottom edge of the viewport.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <parameter>ymax</parameter>
	  (<literal>PLFLT</literal>, input)
	</term>
	<listitem>
	  <para>
	    The world y coordinate of the top edge of the viewport.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document: ("plplotdoc.sgml" "book" "chapter" "")
sgml-default-dtd-file:nil
sgml-exposed-tags:nil
sgml-local-catalogs:("/usr/lib/sgml/catalog")
sgml-local-ecat-files:nil
End:
-->
