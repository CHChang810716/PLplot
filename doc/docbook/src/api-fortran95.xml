<!--
    api-fortran95.xml: "The Specialized Fortran 95 API for PLplot" chapter

    Copyright (C) 1994  Geoffrey Furnish and Maurice LeBrun
    Copyright (C) 1999, 2000, 2001, 2002, 2003  Rafael Laboissiere
    Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004  Alan W. Irwin
    Copyright (C) 2003  Joao Cardoso
    Copyright (C) 2004  Andrew Ross

    Redistribution and use in source (XML DocBook) and "compiled" forms
    (HTML, PDF, PostScript, DVI, TeXinfo and so forth) with or without
    modification, are permitted provided that the following conditions are
    met:

       1. Redistributions of source code (XML DocBook) must retain the
          above copyright notice, this list of conditions and the following
          disclaimer as the first lines of this file unmodified.

       2. Redistributions in compiled form (transformed to other DTDs,
          converted to HTML, PDF, PostScript, and other formats) must
          reproduce the above copyright notice, this list of conditions and
          the following disclaimer in the documentation and/or other
          materials provided with the distribution.

    Important: THIS DOCUMENTATION IS PROVIDED BY THE PLPLOT PROJECT "AS IS"
    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
    THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
    PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE PLPLOT PROJECT BE LIABLE
    FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
    BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
    OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS DOCUMENTATION,
    EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<chapter id="API-FORTRAN-95">
  <title>The Specialized Fortran 95 API for PLplot</title>

  <para>
  The purpose of this Chapter is to document the API for each Fortran 95 function
  in PLplot that differs substantially (usually in argument lists)
  from the common API that has already been
  documented in <xref linkend="API"/>.
  </para>

  <para>
  Normally, the common API is wrapped in such a way for Fortran 95 that there is
  and one-to-one correspondence between each Fortran 95 and C argument
  (see <xref linkend="fortran95"/>
  for discussion).  However, for certain routines documented in this
  chapter the Fortran 95 argument lists
  necessarily differ substantially from the C versions.
  </para>

  <para>
  This chapter is incomplete and NEEDS DOCUMENTATION.
  </para>

  <sect1 id="plcontfortran95" renderas="sect3">
    <title>
      <function>plcont</function>: Contour plot for Fortran 95
    </title>

    <para>
      This is an overloaded function with a variety of argument lists
      which NEED DOCUMENTATION.
    </para>

    <para>
      When called from Fortran 95, this overloaded routine has the same 
      effect as when invoked from C.  See
      <filename>examples/f95/x??f.f90</filename> for various ways to call
      plcont from Fortran 95.
    </para>

  </sect1>

  <sect1 id="plshadefortran95" renderas="sect3">
    <title>
      <function>plshade</function>: Shaded plot for Fortran 95
    </title>

    <para>
      This is an overloaded function with a variety of argument lists
      which NEED DOCUMENTATION.
    </para>

    <para>
      When called from Fortran 95, this overloaded routine has the same 
      effect as when invoked from C.  See
      <filename>examples/f95/x??f.f90</filename> for various ways to call
      plshade from Fortran 95.
    </para>

  </sect1>

  <sect1 id="plshadesfortran95" renderas="sect3">
    <title>
      <function>plshades</function>: Continuously shaded plot for Fortran 95
    </title>

    <para>
      This is an overloaded function with a variety of argument lists
      which NEED DOCUMENTATION.
    </para>

    <para>
      When called from Fortran 95, this overloaded routine has the same 
      effect as when invoked from C.  See
      <filename>examples/f95/x??f.f90</filename> for various ways to call
      plshades from Fortran 95.
    </para>

  </sect1>

  <sect1 id="plvectfortran95" renderas="sect3">
    <title>
      <function>plvect</function>: Vector plot for Fortran 95
    </title>

    <para>
      This is an overloaded function with a variety of argument lists
      which NEED DOCUMENTATION.
    </para>

    <para>
      When called from Fortran 95, this overloaded routine has the same 
      effect as when invoked from C.  See
      <filename>examples/f95/x??f.f90</filename> for various ways to call
      plvect from Fortran 95.
    </para>

  </sect1>

  <sect1 id="plmeshfortran95" renderas="sect3">
    <title>
      <function>plmesh</function>: Plot surface mesh for Fortran 95
    </title>

    <para>
      <funcsynopsis>
      <funcprototype>
	<funcdef>
	  <function>plmesh</function>
	</funcdef>
        <paramdef><parameter>x</parameter></paramdef>
        <paramdef><parameter>y</parameter></paramdef>
        <paramdef><parameter>z</parameter></paramdef>
        <paramdef><parameter>nx</parameter></paramdef>
        <paramdef><parameter>ny</parameter></paramdef>
        <paramdef><parameter>opt</parameter></paramdef>
        <paramdef><parameter>mx</parameter></paramdef>
      </funcprototype>
      </funcsynopsis>
    </para>

    <para>
      When called from Fortran 95, this routine has the same effect as when
      invoked from C.  The interpretation of all parameters (see &plmesh;)
      is also the same except there is an additional parameter given by:
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>mx</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Length of array in x direction, for plotting subarrays.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plot3dfortran95" renderas="sect3">
    <title>
      <function>plot3d</function>: Plot 3-d surface plot for Fortran 95
    </title>

    <para>
      <funcsynopsis>
      <funcprototype>
	<funcdef>
	  <function>plot3d</function>
	</funcdef>
        <paramdef><parameter>x</parameter></paramdef>
        <paramdef><parameter>y</parameter></paramdef>
        <paramdef><parameter>z</parameter></paramdef>
        <paramdef><parameter>nx</parameter></paramdef>
        <paramdef><parameter>ny</parameter></paramdef>
        <paramdef><parameter>opt</parameter></paramdef>
        <paramdef><parameter>side</parameter></paramdef>
        <paramdef><parameter>mx</parameter></paramdef>
      </funcprototype>
      </funcsynopsis>
    </para>

    <para>
      When called from Fortran 95, this routine has the same effect as when
      invoked from C.  The interpretation of all parameters (see &plot3d;)
      is also the same except there is an additional parameter given by:
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>mx</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Length of array in x direction, for plotting subarrays.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plparseoptsfortran95" renderas="sect3">
    <title>
      <function>plparseopts</function>: parse arguments for Fortran 95
    </title>

    <para>
      <funcsynopsis>
      <funcprototype>
	<funcdef>
	  <function>plparseopts</function>
	</funcdef>
        <paramdef><parameter>mode</parameter></paramdef>
      </funcprototype>
      </funcsynopsis>
    </para>

    <para> When called from Fortran 95, this routine has the same effect as
      when invoked from C (see &plparseopts;) except that the argument list
      just contains the parsing mode and the Fortran 95 system routines
      <function>iargc</function> and <function>getarg</function> 
      are used internally to obtain the number of arguments and
      argument values.  (Note, during configuration, the user's
      Fortran 95 compiler
      is checked to see whether it supports 
      <function>iargc</function> and <function>getarg</function>.  If it
      does not, the Fortran 95 plparseopts simply writes a warning message
      and returns.
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>mode</parameter>
	  (<literal>PLINT</literal>, input)
	</term>
	<listitem>
	  <para>
	    Parsing mode; see &plparseopts; for details.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

  <sect1 id="plsescfortran95" renderas="sect3">
    <title>
      <function>plsesc</function>: Set the escape character for text strings
for Fortran 95
    </title>

    <para>
      <funcsynopsis>
      <funcprototype>
        <funcdef>
           <function>plsesc</function>
        </funcdef>
        <paramdef><parameter>esc</parameter></paramdef>
      </funcprototype>
      </funcsynopsis>
    </para>

    <para>
    Set the escape character for text strings.  From
    Fortran 95 it needs to be the decimal ASCII value.  Only
    selected characters are allowed to prevent the user from shooting
    himself in the foot (For example, a <quote>\</quote> isn't allowed since it conflicts with C's use
    of backslash as a character escape).  Here are the allowed escape
characters and their corresponding decimal ASCII values:
<itemizedlist>
<listitem>
<para>
  <quote>!</quote>, ASCII 33
</para>
</listitem>
<listitem>
<para>
  <quote>#</quote>, ASCII 35
</para>
</listitem>
<listitem>
<para>
  <quote>$</quote>, ASCII 36
</para>
</listitem>
<listitem>
<para>
  <quote>%</quote>, ASCII 37
</para>
</listitem>
<listitem>
<para>
  <quote>&amp;</quote>, ASCII 38
</para>
</listitem>
<listitem>
<para>
  <quote>*</quote>, ASCII 42
</para>
</listitem>
<listitem>
<para>
  <quote>@</quote>, ASCII 64
</para>
</listitem>
<listitem>
<para>
  <quote>^</quote>, ASCII 94
</para>
</listitem>
<listitem>
<para>
  <quote>~</quote>, ASCII 126
</para>
</listitem>
</itemizedlist>
    </para>

    <variablelist>
      <varlistentry>
	<term>
	  <parameter>esc</parameter>
	  (<literal>char</literal>, input)
	</term>
	<listitem>
	  <para>
            NEEDS DOCUMENTATION
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </sect1>

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document: ("plplotdoc.xml" "book" "chapter" "")
sgml-default-dtd-file:nil
sgml-exposed-tags:nil
sgml-local-catalogs:("/usr/lib/sgml/catalog")
sgml-local-ecat-files:nil
End:
-->
