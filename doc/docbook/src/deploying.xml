<!--
    deploying.xml: "Deploying programs that use PLplot" chapter

    Copyright (C) 2004  Arjen Markus
    Copyright (C) 2004  Rafael Laboissiere

    Redistribution and use in source (XML DocBook) and "compiled" forms
    (HTML, PDF, PostScript, DVI, TeXinfo and so forth) with or without
    modification, are permitted provided that the following conditions are
    met:

       1. Redistributions of source code (XML DocBook) must retain the
          above copyright notice, this list of conditions and the following
          disclaimer as the first lines of this file unmodified.

       2. Redistributions in compiled form (transformed to other DTDs,
          converted to HTML, PDF, PostScript, and other formats) must
          reproduce the above copyright notice, this list of conditions and
          the following disclaimer in the documentation and/or other
          materials provided with the distribution.

    Important: THIS DOCUMENTATION IS PROVIDED BY THE PLPLOT PROJECT "AS IS"
    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
    THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
    PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE PLPLOT PROJECT BE LIABLE
    FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
    BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
    OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS DOCUMENTATION,
    EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<chapter id="deploying">
  <title>Deploying programs that use PLplot</title>

  <para>
    This chapter provides some information on the issue of
    delivering programs that use PLplot: what files should be installed and
    where, what environment variables are involved and related matters.
  </para>

  <para>
    The scenario is this: You have created one or more programs that run
    successfully on your development machine and now you need to install
    them on the machine of a user.
  </para>

  <para>
    One solution is to provide him or her with the full development
    environment that you use, but that is in general only an option if your
    user is comfortable with making programs themselves. A more common
    situation is that your user just wants the executable programs and
    wants to get using them rightaway. We will focus on this particular
    solution, as there are a few non-trivial issues.
  </para>

  <para>
    To be absolutely clear about what we are describing, here is a summary:
    <itemizedlist>
      <listitem>
        <para>
          Your program must run on a machine that does not have PLplot
          installed from the sources.
        </para>
      </listitem>
      <listitem>
        <para>
          There is no development environment that you can rely on.
        </para>
      </listitem>
      <listitem>
        <para>
          The program should be installed in a self-contained directory
          structure (which <emphasis>can</emphasis> be
          <filename>/usr/local</filename> or <filename>c:\program</filename>
          files or whatever, but need not be so).
        </para>
      </listitem>
    </itemizedlist>
  </para>

  <para>
    There are depending on the way you build the PLplot library into your
    program four situations to consider:
    <orderedlist>
      <listitem>
        <para>
          You use the static or archive versions of the PLplot library
          and the drivers
          <footnote>
            <para>
              UNIX-like systems libraries can be archive or shared, the first
              type becoming part of the program, the second existing as a
              separate file. On Windows the terms are respectively static
              and dynamic (the latter type is also known as DLL).
            </para>
          </footnote>
        </para>
      </listitem>
      <listitem>
        <para>
          You use the static or archive version of the PLplot library and
          dynamic versions of the drivers
        </para>
      </listitem>
      <listitem>
        <para>
          You use the dynamic or shared version of the PLplot library and
          the dynamic or shared versions of the drivers
        </para>
      </listitem>
      <listitem>
        <para>
          You use the dynamic version of the PLplot library and the
          static/archive versions of the drivers
        </para>
      </listitem>
    </orderedlist>
  </para>

  <para>
    While I am not sure the fourth option is actually possible (this would
    probably amount to having the drivers inside the PLplot library, one
    possible situation is the DLL version of PLplot on Windows), the other
    three certainly are.
  </para>

  <para>
    In the <emphasis>first case</emphasis> the program will contain all the
    code it needs to work, but to run successfully, it needs to find the
    font files, <filename>plstnd5.fnt</filename> and
    <filename>plxtnd5.fnt</filename>. The mechanism used in PLplot to find
    these files is fairly simple:
    <itemizedlist>
      <listitem>
        <para>
          It looks at a number of built-in places, determined at the time
          the PLplot library itself was installed and built. For deployment
          these places are irrelevant in general.
        </para>
      </listitem>
      <listitem>
        <para>
          It looks at the environment variables
          <literal>PLPLOT_LIB</literal> and <literal>PLPLOT_HOME</literal>.
          (Actually, this happens only, if the corresponding compiler
          macros <literal>PLPLOT_LIB_ENV</literal> and
          <literal>PLPLOT_HOME_ENV</literal> were defined at compile time.)
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>(TODO: remark about Mac)</emphasis>
        </para>
      </listitem>
    </itemizedlist>
  </para>

  <para>
    Note: This is also the place to put the geographical map files, if you
    happen to use them.
  </para>

  <para>
    The environment variables should point to the directory holding the two
    font files or the one above (one variable is enough though):
    <itemizedlist>
      <listitem>
        <para>
          <literal>PLPLOT_LIB</literal> should point to the directory
          actually holding these files
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>PLPLOT_HOME</literal> should point to the directory that
          holds a subdirectory <quote><filename>lib</filename></quote>
          which in turn holds these files.
        </para>
      </listitem>
    </itemizedlist>
  </para>

  <para>
    If it can find these, PLplot can do its job.
  </para>

  <para>
    Note: This is the case for instance when you use the static PLplot
    library on Windows (see the directory
    <filename>sys\win32\msdev\plplib</filename>).
  </para>

  <para>
    For the <emphasis>second case</emphasis> I have some personal notes
    only: "This case has proven to be quite resilient against deployment in
    the fashion it is defined here, at least on Red Hat Linux. The problem
    was that the drivers could not be located unless they are installed in
    the same place as they were at the time the program was built - the
    system library functions that deal with dynamic loading of shared
    libraries were failing to find them. This may be a problem with the
    <literal>LD_LIBRARY_PATH</literal> environment variable, but it was
    impossible to control this via the <literal>PLPLOT_DRV_DIR</literal>
    environment variable as I asssumed it would.
  </para>

  <para>
    My advice is to use the third option: this works without a problem
    (well, except for the fact that you have to worry about two extra
    environment variables).
  </para>

  <para>
    It may be that the failure was due to the
    <literal>LD_LIBRARY_PATH</literal> variable not being set to the
    correct directory. But my interest in this case was exactly to avoid
    having to set this variable and still keep the flexibility of dynamic
    drivers.
  </para>

  <para>
    The <emphasis>third case</emphasis> is this: both the PLplot library
    and the drivers need to be loaded via the dynamic loader. The details
    depend on the system you are working on, but here are some common
    platforms:
    <itemizedlist>
      <listitem>
        <para>
          Most UNIX, BSD and Linux systems use an environment variable
          <literal>LD_LIBRARY_PATH</literal> which indicates all the
          directories shared libraries can be found. Some use
          <literal>SHLIB_PATH</literal>, like HPUX.
        </para>
      </listitem>
      <listitem>
        <para>
          On Windows the PATH variable is used to find the DLLs, but
          beware: Windows uses a number of places to find the DLLs a
          program needs and the ordering seems to depend on some intricate
          details. It seems easiest and safest to put the DLLs in the same
          directory as your program.
        </para>
      </listitem>
      <listitem>
        <para>
          On MacOSX, ... <emphasis>TODO</emphasis>
        </para>
      </listitem>
    </itemizedlist>
  </para>

  <para>
    As the drivers behave as a dynamic or shared library, it is probably
    best to include the path to the drivers in the
    <literal>LD_LIBRARY_PATH</literal> variable or its equivalent, but this
    is not enough.
  </para>

  <para>
    If PLplot uses dynamic drivers, it first builds up a list of them, by
    examining a directory which contains files describing these drivers:
    the <filename>*.rc</filename> files. Each of these files indicates what
    the relevant properties are for the driver or drivers. Then when the
    driver is actually needed, the corresponding shared/dynamic library is
    loaded.
  </para>

  <para>
    The directory that contains all these files (the driver descriptions as
    well as the actual libraries and the description files that libtool
    uses) is either a directory determined at the time you configured
    PLplot or a directory pointed to by the
    <literal>PLPLOT_DRV_DIR</literal> environment variable. Again for
    deployment, only the environment variable is of real interest.
  </para>

  <para>
    In the <emphasis>fourth case</emphasis>, finding the PLplot
    shared/dynamic library should be enough for the program to work, as the
    drivers' code is contained in that library.
  </para>

  <para>
    To summarise:
    <itemizedlist>
      <listitem>
        <para>
          The following environment variables are important:
          <itemizedlist>
            <listitem>
              <para>
                <literal>PLPLOT_HOME</literal> or
                <literal>PLPLOT_LIB</literal> to indicate the position of
                font files (and also of the various geographic maps)
              </para>
            </listitem>
            <listitem>
              <para>
                <literal>LD_LIBRARY_PATH</literal>,
                <literal>SHLIB_PATH</literal> or <literal>PATH</literal> to
                find the dynamic/shared libraries
              </para>
            </listitem>
            <listitem>
              <para>
                <literal>PLPLOT_DRV_DIR</literal> to find the driver
                descriptions
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          The following files being part of PLplot must be distributed
          along with your program:
          <itemizedlist>
            <listitem>
              <para>
                The font files (<filename>plstnd5.fnt</filename> and
                <filename>plxtnd5.fnt</filename>) and, possibly, if you use
                them, the geographic map files.
              </para>
            </listitem>
            <listitem>
              <para>
                The PLplot dynamic/shared library
              </para>
            </listitem>
            <listitem>
              <para>
                The driver description files and the driver library files
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>

  <para>
    All the environment variables, except
    <literal>LD_LIBRARY_PATH</literal> and equivalents, can be set within
    the program (by using a small configuration file or by determining the
    position of the files relative to the program's location). They just
    have be set before PLplot is initialised.
  </para>

</chapter>
