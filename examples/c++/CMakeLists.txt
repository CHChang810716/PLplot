
########### next target ###############

SET(x01cc_SRCS
x01cc.cc
)

KDE3_AUTOMOC(${x01cc_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x01cc ${x01cc_SRCS})

TARGET_LINK_LIBRARIES(x01cc  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x01_SRCS
x01.cc
)

KDE3_AUTOMOC(${x01_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x01 ${x01_SRCS})

TARGET_LINK_LIBRARIES(x01  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x02_SRCS
x02.cc
)

KDE3_AUTOMOC(${x02_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x02 ${x02_SRCS})

TARGET_LINK_LIBRARIES(x02  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x03_SRCS
x03.cc
)

KDE3_AUTOMOC(${x03_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x03 ${x03_SRCS})

TARGET_LINK_LIBRARIES(x03  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x04_SRCS
x04.cc
)

KDE3_AUTOMOC(${x04_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x04 ${x04_SRCS})

TARGET_LINK_LIBRARIES(x04  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x05_SRCS
x05.cc
)

KDE3_AUTOMOC(${x05_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x05 ${x05_SRCS})

TARGET_LINK_LIBRARIES(x05  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x06_SRCS
x06.cc
)

KDE3_AUTOMOC(${x06_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x06 ${x06_SRCS})

TARGET_LINK_LIBRARIES(x06  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x07_SRCS
x07.cc
)

KDE3_AUTOMOC(${x07_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x07 ${x07_SRCS})

TARGET_LINK_LIBRARIES(x07  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x08_SRCS
x08.cc
)

KDE3_AUTOMOC(${x08_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x08 ${x08_SRCS})

TARGET_LINK_LIBRARIES(x08  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x09_SRCS
x09.cc
)

KDE3_AUTOMOC(${x09_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x09 ${x09_SRCS})

TARGET_LINK_LIBRARIES(x09  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x10_SRCS
x10.cc
)

KDE3_AUTOMOC(${x10_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x10 ${x10_SRCS})

TARGET_LINK_LIBRARIES(x10  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x11_SRCS
x11.cc
)

KDE3_AUTOMOC(${x11_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x11 ${x11_SRCS})

TARGET_LINK_LIBRARIES(x11  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x12_SRCS
x12.cc
)

KDE3_AUTOMOC(${x12_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x12 ${x12_SRCS})

TARGET_LINK_LIBRARIES(x12  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x13_SRCS
x13.cc
)

KDE3_AUTOMOC(${x13_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x13 ${x13_SRCS})

TARGET_LINK_LIBRARIES(x13  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x14_SRCS
x14.cc
)

KDE3_AUTOMOC(${x14_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x14 ${x14_SRCS})

TARGET_LINK_LIBRARIES(x14  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x15_SRCS
x15.cc
)

KDE3_AUTOMOC(${x15_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x15 ${x15_SRCS})

TARGET_LINK_LIBRARIES(x15  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x16_SRCS
x16.cc
)

KDE3_AUTOMOC(${x16_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x16 ${x16_SRCS})

TARGET_LINK_LIBRARIES(x16  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x17_SRCS
x17.cc
)

KDE3_AUTOMOC(${x17_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x17 ${x17_SRCS})

TARGET_LINK_LIBRARIES(x17  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x18_SRCS
x18.cc
)

KDE3_AUTOMOC(${x18_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x18 ${x18_SRCS})

TARGET_LINK_LIBRARIES(x18  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x19_SRCS
x19.cc
)

KDE3_AUTOMOC(${x19_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x19 ${x19_SRCS})

TARGET_LINK_LIBRARIES(x19  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x20_SRCS
x20.cc
)

KDE3_AUTOMOC(${x20_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x20 ${x20_SRCS})

TARGET_LINK_LIBRARIES(x20  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x21_SRCS
x21.cc
)

KDE3_AUTOMOC(${x21_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x21 ${x21_SRCS})

TARGET_LINK_LIBRARIES(x21  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x22_SRCS
x22.cc
)

KDE3_AUTOMOC(${x22_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x22 ${x22_SRCS})

TARGET_LINK_LIBRARIES(x22  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x23_SRCS
x23.cc
)

KDE3_AUTOMOC(${x23_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x23 ${x23_SRCS})

TARGET_LINK_LIBRARIES(x23  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x24_SRCS
x24.cc
)

KDE3_AUTOMOC(${x24_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x24 ${x24_SRCS})

TARGET_LINK_LIBRARIES(x24  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x26_SRCS
x26.cc
)

KDE3_AUTOMOC(${x26_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x26 ${x26_SRCS})

TARGET_LINK_LIBRARIES(x26  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### install files ###############

INSTALL_FILES(  FILES  $(sources)  	Makefile.examples )
INSTALL_FILES(  FILES  lena.pgm )



#original Makefile.am contents follow:

## examples/c++/Makefile.am for PLplot
####
#### Process this file with automake to produce Makefile.in
####
## Copyright (C) 2002, 2004  Alan W. Irwin
## Copyright (C) 2004  Rafael Labossiere
## Copyright (C) 2004  Andrew Ross
##
## This file is part of PLplot.
##
## PLplot is free software; you can redistribute it and/or modify
## it under the terms of the GNU Library General Public License as published
## by the Free Software Foundation; version 2 of the License.
##
## PLplot is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU Library General Public License for more details.
##
## You should have received a copy of the GNU Library General Public License
## along with PLplot; if not, write to the Free Software
## Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
#
#sources = \
#	plc++demos.h \
#	x01cc.cc \
#	x01.cc \
#	x02.cc \
#	x03.cc \
#	x04.cc \
#	x05.cc \
#	x06.cc \
#	x07.cc \
#	x08.cc \
#	x09.cc \
#	x10.cc \
#	x11.cc \
#	x12.cc \
#	x13.cc \
#	x14.cc \
#	x15.cc \
#	x16.cc \
#	x17.cc \
#	x18.cc \
#	x19.cc \
#	x20.cc \
#	x21.cc \
#	x22.cc \
#	x23.cc \
#	x24.cc \
#	x26.cc
#
#if enable_cxx
#
#AM_CPPFLAGS = -I$(top_srcdir)/include $(INCLTDL) -I$(top_srcdir)/bindings/c++
#examples_cxxdir = $(DATA_DIR)/examples/c++
#examples_cxx_DATA = \
#	$(sources) \
#	Makefile.examples
#
#libplplot = $(top_builddir)/src/libplplot$(LIB_TAG).la
#libplplotcxx = $(top_builddir)/bindings/c++/libplplotcxx$(LIB_TAG).la
#
#check_PROGRAMS = \
#	x01cc \
#	x01 \
#	x02 \
#	x03 \
#	x04 \
#	x05 \
#	x06 \
#	x07 \
#	x08 \
#	x09 \
#	x10 \
#	x11 \
#	x12 \
#	x13 \
#	x14 \
#	x15 \
#	x16 \
#	x17 \
#	x18 \
#	x19 \
#	x20 \
#	x21 \
#	x22 \
#	x23 \
#	x24 \
#	x26
#
#check_DATA = lena.pgm
#
#lena.pgm:
#	rm -f lena.pgm
#	$(LN_S) ../c/lena.pgm lena.pgm
#
#
#x01cc_SOURCES = x01cc.cc
#x01_SOURCES = x01.cc
#x02_SOURCES = x02.cc
#x03_SOURCES = x03.cc
#x04_SOURCES = x04.cc
#x05_SOURCES = x05.cc
#x06_SOURCES = x06.cc
#x07_SOURCES = x07.cc
#x08_SOURCES = x08.cc
#x09_SOURCES = x09.cc
#x10_SOURCES = x10.cc
#x11_SOURCES = x11.cc
#x12_SOURCES = x12.cc
#x13_SOURCES = x13.cc
#x14_SOURCES = x14.cc
#x15_SOURCES = x15.cc
#x16_SOURCES = x16.cc
#x17_SOURCES = x17.cc
#x18_SOURCES = x18.cc
#x19_SOURCES = x19.cc
#x20_SOURCES = x20.cc
#x21_SOURCES = x21.cc
#x22_SOURCES = x22.cc
#x23_SOURCES = x23.cc
#x24_SOURCES = x24.cc
#x26_SOURCES = x26.cc
#
#LDADD = $(libplplot) $(libplplotcxx)
#
## enable_cxx
#endif
#
#install-data-hook:
#if enable_cxx
#	( cd $(DESTDIR)$(examples_cxxdir) ; \
#	  mv -f Makefile.examples Makefile ; \
#	  rm -f lena.pgm                   ; \
#	  $(LN_S) ../c/lena.pgm lena.pgm )
#endif
#
#EXTRA_DIST = $(sources) Makefile.examples.in README.c++demos
#CLEANFILES = lena.pgm
#DISTCLEANFILES = Makefile.examples
