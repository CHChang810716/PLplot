# -*- mode: cmake -*-
# c++/CMakeLists.txt for installed PLplot examples
### Process this file with cmake to produce Makefile
###
# Copyright (C) 2009 Alan W. Irwin
#
# This file is part of PLplot.
#
# PLplot is free software; you can redistribute it and/or modify
# it under the terms of the GNU Library General Public License as published
# by the Free Software Foundation; version 2 of the License.
#
# PLplot is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with PLplot; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA

set(cxx_STRING_INDICES
  "01cc"
  "01"
  "02"
  "03"
  "04"
  "05"
  "06"
  "07"
  "08"
  "09"
  "10"
  "11"
  "12"
  "13"
  "14"
  "15"
  "16"
  "17"
  "18"
  "19"
  "20"
  "21"
  "22"
  "23"
  "24"
  "25"
  "26"
  "27"
  "28"
  "29"
  "30"
  "31"
  )

include_directories(${INCLUDE_DIR})
foreach(STRING_INDEX ${cxx_STRING_INDICES})
  add_executable(x${STRING_INDEX} x${STRING_INDEX}.cc)
  target_link_libraries(x${STRING_INDEX} plplotcxx${LIB_TAG} ${MATH_LIB})
  set_property(GLOBAL APPEND PROPERTY TARGETS_examples_cxx x${STRING_INDEX})
endforeach(STRING_INDEX ${cxx_STRING_INDICES})

if(ENABLE_wxwidgets)
  # Build wxwidgets applications with same wxwidgets compile and link flags
  # as used with the PLplot wxwidgets device driver.
  set_source_files_properties(
    wxPLplotDemo.cpp
    PROPERTIES COMPILE_FLAGS "${wxwidgets_COMPILE_FLAGS}"
    )
  add_executable(wxPLplotDemo wxPLplotDemo.cpp)
  target_link_libraries(wxPLplotDemo ${wxwidgets_LINK_FLAGS} plplotwxwidgets${LIB_TAG})
endif(ENABLE_wxwidgets)

if(ENABLE_qt)
  # Must find Qt4 all over again here rather than simply copying variables
  # from the core build to this installed examples build so that we can
  # access the qt4_wrap_cpp macro here.
  find_package(Qt4)
  # To avoid Qt4 version mismatch make sure the Qt version matches that
  # used by the core build.
  if(QT4_FOUND AND QT_VERSION_MAJOR STREQUAL "${CORE_QT_VERSION_MAJOR}" AND QT_VERSION_MINOR STREQUAL "${CORE_QT_VERSION_MINOR}" AND QT_VERSION_PATCH STREQUAL "${CORE_QT_VERSION_PATCH}")
    if(PLD_svgqt AND ${QT_VERSION_MINOR} GREATER 2)
      set(QT_USE_QTSVG 1)
    endif(PLD_svgqt AND ${QT_VERSION_MINOR} GREATER 2)

    include(${QT_USE_FILE})
    add_definitions(-DPLD_extqt)
    qt4_wrap_cpp(
      QT_MOC_OUTFILES
      ${CMAKE_CURRENT_SOURCE_DIR}/qt_PlotWindow.h
      )
    # message("QT_MOC_OUTFILES = ${QT_MOC_OUTFILES}")
    set_source_files_properties(
      ${QT_MOC_OUTFILES}
      PROPERTIES GENERATED "ON"
      )
    add_executable(qt_example qt_example.cpp qt_PlotWindow.cpp ${QT_MOC_OUTFILES})
    target_link_libraries(qt_example ${QT_LIBRARIES} plplotqt${LIB_TAG} plplot${LIB_TAG})
  else(QT4_FOUND AND QT_VERSION_MAJOR STREQUAL "${CORE_QT_VERSION_MAJOR}" AND QT_VERSION_MINOR STREQUAL "${CORE_QT_VERSION_MINOR}" AND QT_VERSION_PATCH STREQUAL "${CORE_QT_VERSION_PATCH}")
    message(STATUS "WARNING: Qt4 not found or wrong version.  qt_example not built")
  endif(QT4_FOUND AND QT_VERSION_MAJOR STREQUAL "${CORE_QT_VERSION_MAJOR}" AND QT_VERSION_MINOR STREQUAL "${CORE_QT_VERSION_MINOR}" AND QT_VERSION_PATCH STREQUAL "${CORE_QT_VERSION_PATCH}")
endif(ENABLE_qt)
