divert(-1)dnl
!***********************************************************************
! $Id$
! $Log$
! Revision 1.1  2000/12/23 23:19:24  airwin
! Double precision handled by m4. These are the m4 source files for the *.f
! files that are compiled for examples.  m4 source is fairly close to
! old version of the *.f file, but with a header prepended, and REAL,
! implicit_none, and DBLE translated appropriately.  In particular the
! implicit_none demanded a lot of changes in these examples, and
! single-precision arguments to plplot routines were converted using
! DBLE (which translates to dble or real depending on DOUBLE).
!
! Revision 1.2  1994/05/26 19:34:22  mjl
! Inserted missing CVS Id and Log fields for all Fortran demos.  Comment
! character changed to "!" everywhere, to work well with font-lock in Lucid
! emacs (requires a small change to fortran-mode.el).
!
!
      program example08
!     =================
!
!***********************************************************************
! Uses implicit_none, REAL, and DBLE from fmacs.m4.
divert(1)dnl
include(fmacs.m4)dnl
! Demonstration of 3-d plotting      
!      
      implicit_none
      integer i, j, k, opt(4), npts
      parameter (npts=41)

      REAL x(npts), y(npts), z(npts,npts), xx, yy, r

      character*80 title(4)
      REAL alt(4),az(4)
      data opt /1,   2,   3,   3/
      data alt /60.0,30.0,60.0,60.0/
      data az  /30.0,60.0,120.0,160.0/
      data title /'#frPLPLOT Example 8 - Alt=60, Az=30, Opt=1',
     *            '#frPLPLOT Example 8 - Alt=30, Az=60, Opt=2',
     *            '#frPLPLOT Example 8 - Alt=60, Az=120, Opt=3',
     *            '#frPLPLOT Example 8 - Alt=60, Az=160, Opt=3'/

      do 1 i=1,npts
        x(i) = (i-1-(npts/2))/DBLE (npts/2)
        y(i) = (i-1-(npts/2))/DBLE (npts/2)
    1 continue

      do 2 i=1,npts
        xx = x(i)
        do 3 j=1,npts
          yy = y(j)
          r = sqrt(xx*xx + yy*yy)
          z(i,j) = exp(-r*r) * cos(2.0*3.141592654*r)
    3   continue
    2 continue

      call plinit()
      do 5 k=1,4
         call pladv(0)
         call plcol(1)
         call plvpor(DBLE (0.0), DBLE (1.0), DBLE (0.0), DBLE (0.9) )
         call plwind(DBLE (-1.0), DBLE (1.0), DBLE (-0.9), DBLE (1.1) )
         call plw3d(DBLE (1.0), DBLE (1.0), DBLE (1.0), DBLE (-1.0),
     &     DBLE (1.0), DBLE (-1.0), DBLE (1.0), DBLE (-1.0),
     &     DBLE (1.0), alt(k),az(k))
         call plbox3('bnstu','x axis', DBLE (0.0), 
     &     0, 'bnstu', 'y axis', DBLE (0.0), 0,
     &     'bcdmnstuv','z axis', DBLE (0.0), 0)
         call plcol(2)
         call plot3d(x,y,z,npts,npts,opt(k),1,npts)
         call plcol(3)
         call plmtex('t', DBLE (1.0), DBLE (0.5), DBLE (0.5), title(k))

    5 continue
      call plend

      end
