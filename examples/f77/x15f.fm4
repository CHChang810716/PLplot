! Shade plot demo.

! Does a variety of shade plots.
      implicit none

      integer  xpts, ypts
      parameter( xpts = 35, ypts = 46 )

      integer i,  j
      real*8  xx, yy
      real*8  z(xpts,ypts), zmin, zmax

! Parse and process command line arguments /

      ! TODO: plParseOpts(&argc, argv, PL_PARSE_FULL)

! Set up color map 0

      call plscmap0n(3)

! Set up color map 1

      call cmap1_init2()

! Initialize plplot

      call plinit()

! Set up data array

      do 120 i = 1,XPTS
         xx = dble(i-1 - (XPTS / 2)) / dble(XPTS / 2)
         do 110 j = 1,YPTS
            yy = dble(j-1 - (YPTS / 2)) / dble(YPTS / 2) - 1.0d0

            z(i,j) = xx*xx - yy*yy + (xx - yy)/(xx*xx+yy*yy + 0.1d0)

  110    continue
  120 continue

      call f2mnmx(z, XPTS, YPTS, zmin, zmax)

      call plot1(z, XPTS, YPTS, zmin, zmax)
      call plot2(z, XPTS, YPTS, zmin, zmax)

      call plend()
      stop
      end

! -------------------------------------------------------------------------
! cmap1_init1
!
! Initializes color map 1 in HLS space.
! -------------------------------------------------------------------------

      subroutine cmap1_init1()
      implicit none
      real*8   i(4), h(4), l(4), s(4)

      i(1) = 0.0d0    ! left boundary
      i(2) = 0.45d0   ! just before center
      i(3) = 0.55d0   ! just after center
      i(4) = 1.0d0    ! right boundary

      h(1) = 260.0d0  ! hue -- low: blue-violet
      h(2) = 260.0d0  ! only change as we go over vertex
      h(3) = 20.0d0   ! hue -- high: red
      h(4) = 20.0d0   ! keep fixed


      l(1) = 0.5d0    ! lightness -- low
      l(2) = 0.0d0    ! lightness -- center
      l(3) = 0.0d0    ! lightness -- center
      l(4) = 0.5d0    ! lightness -- high
!
!     call plscolbg(255,255,255)
!     l(1) = 0.5d0    ! lightness -- low
!     l(2) = 1.0d0    ! lightness -- center
!     l(3) = 1.0d0    ! lightness -- center
!     l(4) = 0.5d0    ! lightness -- high
!
      s(1) = 1.0d0    ! maximum saturation
      s(2) = 1.0d0    ! maximum saturation
      s(3) = 1.0d0    ! maximum saturation
      s(4) = 1.0d0    ! maximum saturation

      !
      ! TODO: last argument in C function is NULL!
      !
      call plscmap1l(0, 4, i, h, l, s, 0)
      return
      end

! -------------------------------------------------------------------------
! cmap1_init2
!
! Initializes color map 1 in HLS space.
! -------------------------------------------------------------------------

      subroutine cmap1_init2()
      implicit none
      real*8 i(4), h(4), l(4), s(4)

      i(1) = 0.0d0    ! left boundary
      i(2) = 0.45d0   ! just before center
      i(3) = 0.55d0   ! just after center
      i(4) = 1.0d0    ! right boundary

      h(1) = 260.0d0  ! hue -- low: blue-violet
      h(2) = 260.0d0  ! only change as we go over vertex
      h(3) = 20.0d0   ! hue -- high: red
      h(4) = 20.0d0   ! keep fixed


      l(1) = 0.6d0    ! lightness -- low
      l(2) = 0.0d0    ! lightness -- center
      l(3) = 0.0d0    ! lightness -- center
      l(4) = 0.6d0    ! lightness -- high
!
!     call plscolbg(255,255,255)
!     l(1) = 0.5d0    ! lightness -- low
!     l(2) = 1.0d0    ! lightness -- center
!     l(3) = 1.0d0    ! lightness -- center
!     l(4) = 0.5d0    ! lightness -- high
!
      s(1) = 1.0d0    ! maximum saturation
      s(2) = 0.5d0    ! maximum saturation
      s(3) = 0.5d0    ! maximum saturation
      s(4) = 1.0d0    ! maximum saturation

      !
      ! TODO: last argument in C function is NULL!
      !
      call plscmap1l(0, 4, i, h, l, s, 0)
      return
      end

! -------------------------------------------------------------------------
! plot1
!
! Illustrates a single shaded region.
! -------------------------------------------------------------------------

      subroutine plot1(z, XPTS, YPTS, zmin, zmax)
      implicit none

      integer XPTS, YPTS
      real*8  z(XPTS,YPTS), zmin, zmax

      character*1 undefined
      real*8  shade_min, shade_max, sh_color
      integer sh_cmap, sh_width
      integer min_color, min_width, max_color, max_width

      sh_cmap   = 0
      min_color = 0
      min_width = 0
      max_color = 0
      max_width = 0

      call pladv(0)
      call plvpor( 0.1d0, 0.9d0,  0.1d0, 0.9d0)
      call plwind(-1.0d0, 1.0d0, -1.0d0, 1.0d0)

! Plot using identity transform

      shade_min = zmin + (zmax-zmin)*0.4d0
      shade_max = zmin + (zmax-zmin)*0.6d0
      sh_color  = 7
      sh_width  = 2
      min_color = 9
      max_color = 2
      min_width = 2
      max_width = 2

      call plpsty(8)

      !
      ! Use plshade0 instead of plshade1 - identity mapping
      !
      call plshade0(z, XPTS, YPTS, undefined,
     &              -1.d0, 1.d0, -1.d0, 1.d0,
     &              shade_min, shade_max,
     &              sh_cmap, sh_color, sh_width,
     &              min_color, min_width, max_color, max_width)

      call plcol0(1)
      call plbox('bcnst', 0.0d0, 0, 'bcnstv', 0.0d0, 0)
      call plcol0(2)
      call pllab('distance', 'altitude', 'Bogon flux')

      return
      end

! -------------------------------------------------------------------------
! plot2
!
! Illustrates multiple adjacent shaded regions, using different fill
! patterns for each region.
! -------------------------------------------------------------------------

      subroutine plot2(z, XPTS, YPTS, zmin, zmax)
      implicit none

      integer XPTS, YPTS
      real*8  z(XPTS,YPTS), zmin, zmax

      character*1 undefined
      real*8  shade_min, shade_max, sh_color
      integer sh_cmap, sh_width
      integer min_color, min_width, max_color, max_width
      integer i

      sh_cmap   = 0
      min_color = 0
      min_width = 0
      max_color = 0
      max_width = 0
      sh_width  = 2

      call pladv(0)
      call plvpor( 0.1d0, 0.9d0,  0.1d0, 0.9d0)
      call plwind(-1.0d0, 1.0d0, -1.0d0, 1.0d0)

! Plot using identity transform

      do 110 i = 1,10
         shade_min = zmin + (zmax - zmin) * (i-1) / 10.0d0
         shade_max = zmin + (zmax - zmin) * i / 10.0d0
         sh_color = i+5
         call plpsty(mod((i + 1),8) + 1)

         !
         ! Use plshade0 instead of plshade1 - identity mapping
         !
         call plshade0(z, XPTS, YPTS, undefined,
     &                 -1.d0, 1.d0, -1.d0, 1.d0,
     &                 shade_min, shade_max,
     &                 sh_cmap, sh_color, sh_width,
     &                 min_color, min_width, max_color, max_width)
  110 continue

      call plcol0(1)
      call plbox('bcnst', 0.0d0, 0, 'bcnstv', 0.0d0, 0)
      call plcol0(2)
      call pllab('distance', 'altitude', 'Bogon flux')

      return
      end

! -------------------------------------------------------------------------
! f2mnmx
!
! Returns min & max of input 2d array.
! -------------------------------------------------------------------------

      subroutine f2mnmx( f, nx, ny, fmin, fmax )
      implicit none

      integer nx, ny
      real*8  f(nx,ny), fmin, fmax
      integer i, j

      fmax = f(1,1)
      fmin = fmax

      do 120 j = 1,ny
         do 110 i = 1,nx
            fmax = MAX(fmax, f(i,j))
            fmin = MIN(fmin, f(i,j))
  110    continue
  120 continue

      return
      end
