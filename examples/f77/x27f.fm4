c $Id$
c
c  Drawing "spirograph" curves - epitrochoids, cycolids, roulettes
c
c  Copyright (C) 2007  Arjen Markus
c
c This file is part of PLplot.
c
c PLplot is free software; you can redistribute it and/or modify
c it under the terms of the GNU General Library Public License as published
c by the Free Software Foundation; either version 2 of the License, or
c (at your option) any later version.
c
c PLplot is distributed in the hope that it will be useful,
c but WITHOUT ANY WARRANTY; without even the implied warranty of
c MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
c GNU Library General Public License for more details.
c
c You should have received a copy of the GNU Library General Public License
c along with PLplot; if not, write to the Free Software
c Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
c
c

c --------------------------------------------------------------------------
c main
c
c Generates two kinds of plots:
c   - construction of a cycloid (animated)
c   - series of epitrochoids and hypotrochoids
c --------------------------------------------------------------------------

      program x27f

      implicit none

      include 'plplot_parameters.h'

c     R, r, p, N

      real*8 params(4,9)

      integer i, j

      data ( ( params(i,j) ,i=1,4) ,j=1,9 ) /
     & 21.0d0,  7.0d0,  7.0d0,  3.0d0,
     & 21.0d0,  7.0d0, 10.0d0,  3.0d0,
     & 21.0d0, -7.0d0, 10.0d0,  3.0d0,
     & 20.0d0,  3.0d0,  7.0d0, 20.0d0,
     & 20.0d0,  3.0d0, 10.0d0, 20.0d0,
     & 20.0d0, -3.0d0, 10.0d0, 20.0d0,
     & 20.0d0, 13.0d0,  7.0d0, 20.0d0,
     & 20.0d0, 13.0d0, 20.0d0, 20.0d0,
     & 20.0d0,-13.0d0, 20.0d0, 20.0d0/

c  plplot initialization

c  Parse and process command line arguments

      call plparseopts(PL_PARSE_FULL)

c  Initialize plplot

      call plinit()

c  Illustrate the construction of a cycloid

      call cycloid()

c  Loop over the various curves
c  First an overview, then all curves one by one

      call plssub(3, 3)

      do 110 i = 1,9
          call pladv(0)
          call plvpor( 0.0d0, 1.0d0, 0.0d0, 1.0d0 )
          call spiro( params(1,i) )
  110 continue

      call pladv(0)
      call plssub(1, 1)

      do 120 i = 1,9
          call pladv(0)
          call plvpor( 0.0d0, 1.0d0, 0.0d0, 1.0d0 )
          call spiro( params(1,i) )
  120 continue

c  Don't forget to call plend() to finish off!

      call plend()
      end

c  ===============================================================

      subroutine cycloid

c     TODO

      end

c  ===============================================================

      subroutine spiro( params )

      implicit none

      real*8      params(*)
      integer     NPNT
      parameter ( NPNT = 20000 )
      real*8      xcoord(NPNT+1)
      real*8      ycoord(NPNT+1)

      integer     windings
      integer     steps
      integer     i
      real*8      phi
      real*8      phiw
      real*8      dphi
      real*8      xmin
      real*8      xmax
      real*8      ymin
      real*8      ymax
      real*8      scale

c     Fill the coordinates

      windings = int(params(4))
      steps    = NPNT/windings
      dphi     = 8.0d0*acos(-1.0d0)/dble(steps)

c     This initialisation is safe!
      xmin = 0.0d0
      xmax = 0.0d0
      ymin = 0.0d0
      ymax = 0.0d0

      do 110 i = 1,windings*steps+1
          phi       = dble(i-1) * dphi
          phiw      = (params(1)-params(2))/params(2)*phi
          xcoord(i) = (params(1)-params(2))*cos(phi)+params(3)*cos(phiw)
          ycoord(i) = (params(1)-params(2))*sin(phi)-params(3)*sin(phiw)

          if ( xmin > xcoord(i) ) xmin = xcoord(i)
          if ( xmax < xcoord(i) ) xmax = xcoord(i)
          if ( ymin > ycoord(i) ) ymin = ycoord(i)
          if ( ymax < ycoord(i) ) ymax = ycoord(i)
  110 continue

      if ( xmax-xmin > ymax-ymin ) then
          scale = xmax - xmin
      else
          scale = ymax - ymin
      endif
      xmin = - 0.65d0 * scale
      xmax =   0.65d0 * scale
      ymin = - 0.65d0 * scale
      ymax =   0.65d0 * scale

      call plwind( xmin, xmax, ymin, ymax )

      call plcol0(1)
      call plline( 1+steps*windings, xcoord, ycoord )

      end
