
########### next target ###############

SET(x01f_SRCS
x01f.f90
)

KDE3_AUTOMOC(${x01f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x01f ${x01f_SRCS})

TARGET_LINK_LIBRARIES(x01f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x02f_SRCS
x02f.f90
)

KDE3_AUTOMOC(${x02f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x02f ${x02f_SRCS})

TARGET_LINK_LIBRARIES(x02f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x03f_SRCS
x03f.f90
)

KDE3_AUTOMOC(${x03f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x03f ${x03f_SRCS})

TARGET_LINK_LIBRARIES(x03f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x04f_SRCS
x04f.f90
)

KDE3_AUTOMOC(${x04f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x04f ${x04f_SRCS})

TARGET_LINK_LIBRARIES(x04f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x05f_SRCS
x05f.f90
)

KDE3_AUTOMOC(${x05f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x05f ${x05f_SRCS})

TARGET_LINK_LIBRARIES(x05f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x06f_SRCS
x06f.f90
)

KDE3_AUTOMOC(${x06f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x06f ${x06f_SRCS})

TARGET_LINK_LIBRARIES(x06f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x07f_SRCS
x07f.f90
)

KDE3_AUTOMOC(${x07f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x07f ${x07f_SRCS})

TARGET_LINK_LIBRARIES(x07f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x08f_SRCS
x08f.f90
)

KDE3_AUTOMOC(${x08f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x08f ${x08f_SRCS})

TARGET_LINK_LIBRARIES(x08f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x09f_SRCS
x09f.f90
)

KDE3_AUTOMOC(${x09f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x09f ${x09f_SRCS})

TARGET_LINK_LIBRARIES(x09f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x10f_SRCS
x10f.f90
)

KDE3_AUTOMOC(${x10f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x10f ${x10f_SRCS})

TARGET_LINK_LIBRARIES(x10f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x11f_SRCS
x11f.f90
)

KDE3_AUTOMOC(${x11f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x11f ${x11f_SRCS})

TARGET_LINK_LIBRARIES(x11f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x12f_SRCS
x12f.f90
)

KDE3_AUTOMOC(${x12f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x12f ${x12f_SRCS})

TARGET_LINK_LIBRARIES(x12f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x13f_SRCS
x13f.f90
)

KDE3_AUTOMOC(${x13f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x13f ${x13f_SRCS})

TARGET_LINK_LIBRARIES(x13f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x14f_SRCS
x14f.f90
)

KDE3_AUTOMOC(${x14f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x14f ${x14f_SRCS})

TARGET_LINK_LIBRARIES(x14f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x15f_SRCS
x15f.f90
)

KDE3_AUTOMOC(${x15f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x15f ${x15f_SRCS})

TARGET_LINK_LIBRARIES(x15f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x16af_SRCS
x16af.f90
)

KDE3_AUTOMOC(${x16af_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x16af ${x16af_SRCS})

TARGET_LINK_LIBRARIES(x16af  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x16f_SRCS
x16f.f90
)

KDE3_AUTOMOC(${x16f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x16f ${x16f_SRCS})

TARGET_LINK_LIBRARIES(x16f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x17f_SRCS
x17f.f90
)

KDE3_AUTOMOC(${x17f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x17f ${x17f_SRCS})

TARGET_LINK_LIBRARIES(x17f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x18f_SRCS
x18f.f90
)

KDE3_AUTOMOC(${x18f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x18f ${x18f_SRCS})

TARGET_LINK_LIBRARIES(x18f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x19f_SRCS
x19f.f90
)

KDE3_AUTOMOC(${x19f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x19f ${x19f_SRCS})

TARGET_LINK_LIBRARIES(x19f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x22f_SRCS
x22f.f90
)

KDE3_AUTOMOC(${x22f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x22f ${x22f_SRCS})

TARGET_LINK_LIBRARIES(x22f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(x23f_SRCS
x23f.f90
)

KDE3_AUTOMOC(${x23f_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(x23f ${x23f_SRCS})

TARGET_LINK_LIBRARIES(x23f  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### install files ###############

INSTALL_FILES(  FILES  $(f95_examples) Makefile.examples )



#original Makefile.am contents follow:

## examples/f95/Makefile.am for PLplot
####
#### Process this file with automake to produce Makefile.in
####
## Copyright (C) 2002, 2004  Alan W. Irwin
## Copyright (C) 2004  Rafael Laboissiere
##
## This file is part of PLplot.
##
## PLplot is free software; you can redistribute it and/or modify
## it under the terms of the GNU Library General Public License as published
## by the Free Software Foundation; version 2 of the License.
##
## PLplot is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU Library General Public License for more details.
##
## You should have received a copy of the GNU Library General Public License
## along with PLplot; if not, write to the Free Software
## Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
#
## x19f.f excluded from this list because the plmap and plmeridians fortran
## API is not implemented as part of the common API (and probably won't be
## for a long time because of having to work around the mapform type of
## argument for these functions).
#
#f95_examples = \
#	x01f.f90 \
#	x02f.f90 \
#	x03f.f90 \
#	x04f.f90 \
#	x05f.f90 \
#	x06f.f90 \
#	x07f.f90 \
#	x08f.f90 \
#	x09f.f90 \
#	x10f.f90 \
#	x11f.f90 \
#	x12f.f90 \
#	x13f.f90 \
#	x14f.f90 \
#	x15f.f90 \
#	x16af.f90 \
#	x16f.f90 \
#	x17f.f90 \
#	x18f.f90 \
#	x19f.f90 \
#	x22f.f90 \
#	x23f.f90
#
#AM_FCFLAGS = -I$(top_srcdir)/include $(INCLTDL) -I$(top_builddir)/bindings/f95
#
#if enable_f95
#
#examples_f95dir = $(DATA_DIR)/examples/f95
#examples_f95_DATA = $(f95_examples) Makefile.examples
#
#libplplot = $(top_builddir)/src/libplplot$(LIB_TAG).la
#libplplotf95c = $(top_builddir)/bindings/f95/libplplotf95c$(LIB_TAG).la
#libplplotf95 = $(top_builddir)/bindings/f95/libplplotf95$(LIB_TAG).la
#
#check_PROGRAMS = \
#	x01f \
#	x02f \
#	x03f \
#	x04f \
#	x05f \
#	x06f \
#	x07f \
#	x08f \
#	x09f \
#	x10f \
#	x11f \
#	x12f \
#	x13f \
#	x14f \
#	x15f \
#	x16af \
#	x16f \
#	x17f \
#	x18f \
#	x19f \
#	x22f \
#	x23f
#
#x01f_SOURCES = x01f.f90
#x02f_SOURCES = x02f.f90
#x03f_SOURCES = x03f.f90
#x04f_SOURCES = x04f.f90
#x05f_SOURCES = x05f.f90
#x06f_SOURCES = x06f.f90
#x07f_SOURCES = x07f.f90
#x08f_SOURCES = x08f.f90
#x09f_SOURCES = x09f.f90
#x10f_SOURCES = x10f.f90
#x11f_SOURCES = x11f.f90
#x12f_SOURCES = x12f.f90
#x13f_SOURCES = x13f.f90
#x14f_SOURCES = x14f.f90
#x15f_SOURCES = x15f.f90
#x16f_SOURCES = x16f.f90
#x16af_SOURCES = x16af.f90
#x17f_SOURCES = x17f.f90
#x18f_SOURCES = x18f.f90
#x19f_SOURCES = x19f.f90
#x22f_SOURCES = x22f.f90
#x23f_SOURCES = x23f.f90
#
#LDADD = $(libplplot) $(libplplotf95c) $(libplplotf95)
#
#install-data-hook:
#	( cd $(DESTDIR)$(examples_f95dir) ; mv -f Makefile.examples Makefile )
#
#else
#
## The following empty rule is needed because we are in the "else" part of
## an AM_CONDITIONAL
#install-data-hook:
#
## enable_f95
#endif
