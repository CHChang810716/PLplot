# -*- mode: cmake -*-
# ocaml/CMakeLists.txt for installed PLplot examples
### Process this file with cmake to produce Makefile
#
#
# Copyright (C) 2009 Alan W. Irwin
#
# This file is part of PLplot.
#
# PLplot is free software; you can redistribute it and/or modify
# it under the terms of the GNU Library General Public License as published
# by the Free Software Foundation; version 2 of the License.
#
# PLplot is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with PLplot; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA

set(ocaml_STRING_INDICES
  "01"
  "02"
  "03"
  "04"
  "05"
  "06"
  "07"
  "08"
  "09"
  "10"
  "11"
  "12"
  "13"
  "14"
  "15"
  "16"
  "17"
  "18"
  "19"
  "20"
  "21"
  "22"
  "23"
  "24"
  "25"
  "26"
  "27"
  "28"
  "29"
  "30"
  "31"
  )

foreach(STRING_INDEX ${ocaml_STRING_INDICES})
  set(EXECUTABLE_NAME x${STRING_INDEX}ocaml)
  set(SOURCE_FILE x${STRING_INDEX}.ml)
  # Copy source code to build tree since ocamlc is a bit broken and will 
  # otherwise litter the source tree with intermediate files
  add_custom_command(
    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${SOURCE_FILE}
    COMMAND ${CMAKE_COMMAND}
    -E copy_if_different ${CMAKE_CURRENT_SOURCE_DIR}/${SOURCE_FILE} ${CMAKE_CURRENT_BINARY_DIR}/${SOURCE_FILE}
    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/${SOURCE_FILE}
    )
  add_custom_command(
    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${EXECUTABLE_NAME}
    COMMAND ${OCAMLC} 
    -g
    -I ${OCAML_INSTALL_DIR}/plplot
    -ccopt "-L ${CMAKE_INSTALL_LIBDIR} -Wl,-rpath -Wl,${CMAKE_INSTALL_LIBDIR} "
    plplot.cma 
    -o ${CMAKE_CURRENT_BINARY_DIR}/${EXECUTABLE_NAME} 
    ${CMAKE_CURRENT_BINARY_DIR}/${SOURCE_FILE}
    DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/${SOURCE_FILE}
    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
    VERBATIM
    )
  add_custom_target(
    target_${EXECUTABLE_NAME} ALL 
    DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/${EXECUTABLE_NAME}
    )
  set_property(GLOBAL APPEND PROPERTY TARGETS_examples_ocaml target_${EXECUTABLE_NAME})
endforeach(STRING_INDEX ${ocaml_STRING_INDICES})
