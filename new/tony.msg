Date: Thu, 27 Feb 92 21:32:36 GMT
From: <amr@egr.duke.edu>
Message-Id: <9202272132.AA04015@ferry.egr.duke.edu>
To: mjl@fusion.ph.utexas.edu
Subject: plrender suggestion


Maurice,
  Just started playing around with the META files today.  How hard would
it be to add an option to plrender to write to stdout instead of to
a file?  Here's the reason I ask.  I use the epsf macros and dvips
for including PostScript figures in TeX and LaTeX documents.  They allow
you to include PostScript figures generated on-the-fly.  As a very
simple example,  I usually keep all PostScript figures generated by
PLPLOT in compressed form and then include them into a TeX document
with a command like:

  \epsfbox[0 0 396 288]{"`zcat figure.ps.Z"}

A better example involves Xfig files.  I can convert the .fig files
to PS on the fly:

  \epsfbox[0 0 396 288]{"`f2ps -c -P figure.fig"}

This way I don't have to keep the original .fig as well the
.epsf files both lying around.  I would *love* to have the same
capability with plrender.  That is, I'm looking for something like

  plrender -dev ps -out - figure.meta

where the "-" means write to standard output instead of too a file.
An even nicer approach would be a "-f" option (or whatever) for
filter option that allowed plrender to act as a Unix type filter,
i.e.

  plrender -f -dev ps < figure.meta

or

  zcat figure.meta | plrender -f -dev ps

I also have a program that allows me to resize PostScript figures to 
a specified size, so I would like to do something like

  plrender -f -dev ps < figure.meta | psscale -s "3x3" | lpr

You get the idea.  I'm big on filters and pipes, as you can probably
tell.  I'm usually happy to trade cpu cycles for disk space.
What do you think?

Tony

p.s.  For your future list of things to do:  (Probably way down the
road. :-))  I've had problems with hidden line removal on "spiky" 
3D plots on high resolution (300 dpi or greater) devices.  There 
are liitle gaps that sometimes appear after a line reappears from
behind a surface.  In Mathematica, hidden line removal is done
by the device driver (which receives PostScript) instead of
beforehand.  (There is a section in the Mathematica manual where
they mention hidden-line removal as an inherently device dependent
problem.)  
