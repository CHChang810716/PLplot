#!@SH_EXECUTABLE@
# Test suite for f77 examples.
#
# Copyright (C) 2004  Alan W. Irwin
# Copyright (C) 2004  Andrew Ross
#
# This file is part of PLplot.
#
# PLplot is free software; you can redistribute it and/or modify
# it under the terms of the GNU Library General Public License as published
# by the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# PLplot is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with PLplot; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

# This is called from plplot-test.sh with $f77dir, $device, $dsuffix,
# $options, and possibly $verbose_test defined.

# To build the f77 examples before running this script do the following:
# pushd $f77dir; make; popd

lang="f"
export index lang 
if [ "yes@HAVE_F77PARSE_CL_TRUE@" = "yes" ] ; then
# This stanza only works if fortran has command-line parsing capability.
# However, this is the preferred method because it allows access to
# command-line parsing of the $options (e.g., familying options for png
# and jpeg devices) that have been passed from plplot-test.sh

# Do non-standard example 16a because it illustrates plshade functionality
# with cmap1 (and also because the result looks nice.)
    if [ "$verbose_test" ] ; then
	echo "x16af"
    fi
    index="16a"
    $DEBUG_CMD "$f77dir"/x${index}f -dev $device -o "${OUTPUT_DIR}"/x${index}f%n.$dsuffix $options 2> test.error >| "${OUTPUT_DIR}"/x${index}${lang}_${dsuffix}.txt
    status_code=$?
    cat test.error
    if [ "$status_code" -ne 0 ] ; then
	exit $status_code
    fi
  # Look for any PLPLOT ERROR messages from plwarn that do not result in an
  # exit code.
    is_error=`grep -l 'PLPLOT ERROR' test.error`
    if [ -n "$is_error" ] ; then
	exit 1
    fi

# Do the standard non-interactive examples.
    for index in 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 33 ; do
	if [ "$verbose_test" ] ; then
	    echo "x${index}f"
	fi
	if [ "${index}" = "14" ] ; then
	    echo "${OUTPUT_DIR}"/x${index}a${lang}%n.$dsuffix | \
	    $DEBUG_CMD "$f77dir"/x${index}${lang} -dev $device -o "${OUTPUT_DIR}"/x${index}${lang}%n.$dsuffix \
	    $options 2> test.error >| "${OUTPUT_DIR}"/x${index}${lang}_${dsuffix}.txt
      status_code=$?
	else
	    $DEBUG_CMD "$f77dir"/x${index}f -dev $device -o "${OUTPUT_DIR}"/x${index}f%n.$dsuffix $options 2> test.error >| "${OUTPUT_DIR}"/x${index}${lang}_${dsuffix}.txt
	    status_code=$?
	fi
	cat test.error
	if [ "$status_code" -ne 0 ] ; then
	    exit $status_code
	fi
    # Look for any PLPLOT ERROR messages from plwarn that do not result in an
    # exit code.
	is_error=`grep -l 'PLPLOT ERROR' test.error`
	if [ -n "$is_error" ] ; then
	    exit 1
	fi

    done
else
# Fall back to this method if this fortran platform does not have
# command-line parsing capability.  Command-line $options must be ignored
# for this method.
# Do non-standard example 16a because it illustrates plshade functionality
# with cmap1 (and also because the result looks nice.)
    if [ "$verbose_test" ] ; then
	echo "x16af"
    fi
    index="16a"
    $DEBUG_CMD "$f77dir"/x${index}f <<EOF 2> test.error >| "${OUTPUT_DIR}"/x${index}${lang}_${dsuffix}.txt
$device
"${OUTPUT_DIR}"/x${index}f%n.$dsuffix
EOF
  status_code=$?
  cat test.error
  if [ "$status_code" -ne 0 ] ; then
      exit $status_code
  fi
  # Look for any PLPLOT ERROR messages from plwarn that do not result in an
  # exit code.
  is_error=`grep -l 'PLPLOT ERROR' test.error`
  if [ -n "$is_error" ] ; then
      exit 1
  fi

# Do the standard non-interactive examples.
# skip 17 because it is interactive.
  for index in 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 33 ; do
      if [ "$verbose_test" ] ; then
	  echo "x${index}f"
      fi
      if [ "$index" = "14" ] ; then
	  $DEBUG_CMD "$f77dir"/x${index}f <<EOF 2> test.error >| "${OUTPUT_DIR}"/x${index}${lang}_${dsuffix}.txt
$device
"${OUTPUT_DIR}"/x${index}f%n.$dsuffix
$device
"${OUTPUT_DIR}"/x${index}af%n.$dsuffix
EOF
	  status_code=$?
      else
	  $DEBUG_CMD "$f77dir"/x${index}f <<EOF 2> test.error >| "${OUTPUT_DIR}"/x${index}${lang}_${dsuffix}.txt
$device
"${OUTPUT_DIR}"/x${index}f%n.$dsuffix
EOF
	  status_code=$?
      fi
      cat test.error
      if [ "$status_code" -ne 0 ] ; then
	  exit $status_code
      fi
  # Look for any PLPLOT ERROR messages from plwarn that do not result in an
  # exit code.
      is_error=`grep -l 'PLPLOT ERROR' test.error`
      if [ -n "$is_error" ] ; then
	  exit 1
      fi

  done
fi
