
PLPLOT Amiga Release Notes
--------------------------

The Amiga drivers are still under development.  The new screen driver now
uses GadTools and ReqTools, giving it a much nicer look, more
functionality, and better maintaintability.  Also makefile.m4 now uses
SAS/C 6.x for compilation.  I plan eventually to make available
precompiled, optimized libraries to reduce some of the difficulty in
building plplot (and perhaps non-optimized versions as well).

The current status of the drivers is as follows:
1. The window/screen driver works great, using ReqTools for requesters
and GadTools for menus.  The only menu entries that do anything at present
are:
	Save as ILBM
	Quit
	Screen Mode
	Change Palette 0

The plplot window is now borderless and always opens on a custom screen.
The type of screen and dimensions are the same as workbench -- eventually
you'll be able to save the configuration.  You can use any of the screen
types supported by the OS.  Screens larger than the available display
area will autoscroll.

The screen driver will ultimately support dumps to any plplot output
device.  The printer dumps will be incorporated into this scheme.

2. The IFF driver is virtually unchanged.  I am planning to upgrade this
to support color.

3. The printer driver is unchanged, and works OK I think (but I haven't
tested it recently).

Building plplot on the Amiga
----------------------------

The Amiga build is patterned after the Unix one, to keep (my) life easy.
This relies on links to all the required source files in the distribution for
the make to proceed.  If you are running 2.0, you can in fact use soft links
(except on the ram disk), with Stefan Becker's MakeLink replacement.
Unfortunately, most utilities don't deal with them correctly (come on CBM,
get your butts in gear!).  Also, the syntax for MakeLink is rather cumbersome
(compared to the Unix ln), and currently there is no easy way to use it
except with the provided 'lnsoft' script for use under SKsh.  If anyone
writes a script to do the necessary links under a different shell, please
send it to me and I will include it here on the next release.

If you are running SKsh, you can get softlinks by copying the provided
sksh/lnsoft and sksh/makelinks scripts to somewhere in your path, setting
the script bit on each, and typing:

	makelinks

Soft links are excellent for this purpose, as you can edit the original file
and the link is automatically updated, forcing make to do a rebuild.  This
nice behavior does not occur for hard links -- once the hard link is made the
contents are always preserved, even if you modify the original file.  Note
that the CBM MakeLink command as distributed with 2.04 cannot do soft links.
One caveat: if you delete or move a file pointed to by a soft link, most
filesystem utilities no longer can delete the soft link!  About the only way
I've been able to delete the soft link in this case is to go into workbench
and remove the entire directory containing the links.

If you aren't using SKsh, you should still take a look at the makelinks
script to see what it is doing, and reproduce it.  The config files from
the m4 subdirectory are needed as well as cf_amiga.m4 and makefile.m4
from this directory.

The following utilities are also needed:

	make		(PD version, ported from mod.sources posting)
	m4		(also PD)
	SKsh's "join"	(freely distributable)

The SKsh join command is used in the makefile, since the Amiga join does not
work correctly from inside make.  The command syntax used is: skshbin:join
<args>, so if you don't have SKsh you need to copy the supplied executable (n
sys/amiga/sksh) to a permanent place and make the appropriate assign for
skshbin:.

Then, while in the tmp directory:

	% makelinks

(or whatever you substitute for it) sets up links (copies) to all the
files you will ever need.

'm4' is used to convert the master makefile.m4 into a makefile suited for
your system (warning: the copy I have generates some enforcer hits but I
think they are harmless).  This handles system dependencies, compiler
dependencies, and choice of math library.  From the plplot/tmp directory, you
can create the makefile via:

	% copy /sys/amiga/#?.m4 ""
	% m4 <makefile.m4 >makefile

You don't need to specify the system type because that is contained within
the makefile.m4 file.  The default is to use IEEE single precision math,
with the library libs:mathieeedoubbas.library located at run-time.  By
contrast, if you want to use FFP math, you would build the makefile via:

	% m4 -DMATH=FFP <makefile.m4 >makefile

I currently only support SAS/C 6.x, although I've left in the flags I used
under SAS/C 5.x (try building the makefile with -DCOMPILER=LATTICE5.X on the
m4 command line).  I believe it will work but no guarantees (pre-6.x versions
of SAS/C were not 100% ANSI compliant).

Finally,

	% make

makes the main library.  Finally, to make a demo,

	% make x01c

for the first C demo, or

	% make cdemos

for all demos.  Also provided is a short SKsh script for building any of
the demos (mkexam).  After putting the plplot library(s) in lib:, it is a
good idea to modify the script to work on your system and then build the
example programs with that rather than the makefile.

To build plrender:

	% make plrender

Don't forget to copy the font files from the lib directory to a more
suitable place, preferably fonts:plplot (this is the default).

------------------------------------------------------------------------------
Miscellaneous notes:

>   Found some time last weekend to build plplot4p99d on my
> A1200. (Yes, I know it it not the latest release but it was
> what I had at home.)  Found a few problems that may have
> been cleared up in the latest release.
> 
> 1) Needed to install reqtools, and (new)iff libraries, .h and .lib
>    files. Add some comments to the readme.amiga file? (fred fish #s?)

Right, that would be good to have.  

> 2) Needed to manually change the makefile to support the fpu.

If you build the makefile with MATH defined to IEEEF (default) or IEEED
it uses the cbm-supplied IEEE math libraries.  The nice thing about doing
it this way is that the presence of the FPU is detected at runtime and
it is used.  So the same executable can be used on machines with and
without FPU's.  There is a small speed penalty with doing it this way,
but nothing I felt uncomfortable with when I tested it last (on the order
of a few percent).
------------------------------------------------------------------------------

One can get a cheap zoom with the Amiga windows by defining, for example, 
a 2000x2000 window (in the screen mode requester).  
