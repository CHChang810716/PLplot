
PLPLOT Amiga Release Notes
--------------------------

The Amiga drivers are currently under intensive development.  The new screen
driver now uses GadTools and ReqTools, giving it a much nicer look, more
functionality, and better maintaintability.  Also makefile.m4 now uses SAS/C
6.x for compilation.  I plan eventually to make available precompiled,
optimized libraries to reduce some of the difficulty in building plplot (and
perhaps non-optimized versions as well).

The current status of the drivers is as follows:
1. The window/screen driver works great, using ReqTools for requesters
and GadTools for menus.  The only menu entries that do anything at present
are:
	Save as ILBM
	Quit
	Screen Mode
	Change Palette 0

The plplot window is now borderless and always opens on a custom screen.
The type of screen and dimensions are the same as workbench -- eventually
you'll be able to save the configuration.  You can use any of the screen
types supported by the OS.  Screens larger than the available display
area will autoscroll.

The screen driver will ultimately support dumps to any plplot output
device.  The printer dumps will be incorporated into this scheme.

2. The IFF driver is virtually unchanged.  I am planning to upgrade this
to support color.

3. The printer driver is unchanged, and works OK I think (but I haven't
tested it recently).

Building plplot on the Amiga
----------------------------

The Amiga build is patterned after the Unix one, to keep (my) life easy.
This relies on links to all the required source files in the distribution for
the make to proceed.  If you are running 2.0, you can in fact use soft links
(except on the ram disk), with Stefan Becker's MakeLink replacement.
Unfortunately, most utilities don't deal with them correctly (come on CBM,
get your butts in gear!).  Also, the syntax for MakeLink is rather cumbersome
(compared to the Unix ln), and currently there is no easy way to use it
except with the provided 'ln' script for use under SKsh.  If anyone writes a
script to do the necessary links under a different shell, please send it to
me and I will include it here on the next release.

The alternative to links is to just copy all the files to the tmp directory,
and you may do this by typing:

	make links

If you are running SKsh, you can get softlinks instead by copying the
provided sksh/ln and sksh/makelinks scripts to the tmp directory, and typing:

	chmod +s ln makelinks
	makelinks

Soft links are excellent for this purpose, as you can edit the original file
and the link is automatically updated, forcing make to do a rebuild.  This
nice behavior does not occur for hard links -- once the hard link is made
the contents are always preserved, even if you modify the original file.
Note that the CBM MakeLink command as distributed with 2.0 cannot do soft
links.  

The build for the Amiga is basically the same as for Unix.  The following
utilities are also needed:

	make		(PD version, ported from mod.sources posting)
	m4		(also PD)
	SKsh's "join"	(freely distributable)

The SKsh join command is used in the makefile, since the Amiga join does not
work correctly from inside make.  The command syntax used is: skshbin:join
<args>, so if you don't have SKsh you need to copy the supplied executable (n
sys/amiga/sksh) to a permanent place and make the appropriate assign for
skshbin:.

'm4' is used to convert the master makefile.m4 into a makefile suited
for your system.  This handles system dependencies, compiler dependencies,
and choice of math library.  From the plplot/tmp directory, you can create
the makefile via:

	% copy /sys/unix/makefile.m4 ""
	% m4 -DAMIGA <makefile.m4 >makefile

The default is to use IEEE single precision math, with the library
libs:mathieeedoubbas.library located at run-time.  By contrast, if you
want to use FFP math, you would build the makefile via:

	% m4 -DAMIGA -DMATH=FFP <makefile.m4 >makefile

I only support SAS/C 6.x, although I've left in the flags I used under 
SAS/C 5.x.

Then, while in the tmp directory:

	% makelinks
or
	% make links
(as per the discussion above)

sets up links (copies) to all the files you will ever need.

	% make

makes the main library.  Finally, to make a demo,

	% make x01c

for the first C demo, or

	% make cdemos

for all demos.  To build plrender:

	% make plrender

Don't forget to copy the font files from the lib directory to a more
suitable place, preferably fonts:plplot or some such.

Maurice LeBrun				mjl@dino.ph.utexas.edu
Institute for Fusion Studies
University of Texas at Austin
