# -----------------------------------------------------------------------
# $Id$
#
# Changed by Andrew Roach
# 12/02/01 5:23 PM
# 20/01/01 11:50 AM
#
# Paul Kirschner
# pek@utrc.utc.com
# 14-Jul-1994
#
# copy source files into the tmp directory
# -----------------------------------------------------------------------

# First time only, should be executed from $(PLTMP)

# The following lines can be changed to add optional features to the DJGPP
# GNUSVGA driver running under GRX20 (23 actually)
# What they do is allow you to dump the image on the screen to a graphics 
# file. 

# With GRX23, Windows bitmap support comes standard, but it is bugged.
# You have to set the number of colours in the "grx20drv" environmental
# variable to "nc 256". Then it will work, otherwise a 16.5 million colour
# map is made, and all colours are black (not good).
# It makes bitmaps that are *fat*. Not nice. It's here because its easy and
# costs nothing, and if your too lazy to download and compile the TIFF
# library, then its the next best thing. Just hit "F12" when the
# image is on screen, and it will be dumped to a file with an odd name
# in the current directory. If you have the TIFF library, I would 
# personally turn off bitmap support.
# To Turn on support for dumping as bitmaps, 
# make sure the next line is uncommented

GRX_DO_BMP = 1

# If you want to add a "stand alone" BMP device driver (in addition to or
# instead of the screen-dump) edit "pldev.h" and make sure "PLD_bmp" is
# defined.


# The Windows bitmaps are FAT and ugly. TIFF files are much smaller and
# nicer. GRX23 sort of has support for TIFFLIB, if you compile an extra
# module in your build. TIFFLIB is available from:
#        ftp://ftp.sgi.com/graphics/tiff
#        http://www.earthlink.net/~ritter/tiff/
# There is one small error in the compile. I can't remember what, but it is
# easy to fix in the makefile. It is just an incorrectly set flag. Other
# versions of TIFFLIB than the one I used might even have it fixed.
# If you want to go to the trouble of downloading and compiling the library
# (and it IS worth it), then your in for a treat.
# This library works like a charm, and saves some very nice small screen 
# images. Just hit "F10" to make it work if there is an image on screen
# To Turn on support for dumping as TIFFs, 
# make sure the next line is uncommented

#GRX_DO_TIFF = 1

# If you want to add a "stand alone" TIFF device driver (in addition to or
# instead of the screen-dump) edit "pldev.h" and make sure "PLD_tiff" is
# defined, then make sure the next line is uncommented

#LDC_LIBS_TIFF =-ltiff

# Well, you can save them babies as JPEGs as well. Why ? Well, you can. 
# I would seriously recommend you downloading the TIFF library and using that
# instead though. PLPLOT only really uses 16/256 colours most of the time
# and even though the JPEG support works, and will save the image as a JPEG, 
# it will be big (lots bigger than the TIFF) and ugly ! I only did this 
# because I have the JPEG library on my system; didn't have the TIFF lib
# (then) and was lazy. It was an unsuccessful experiment, but since I did it,
# I kept it. It uses the Independent JPEG Group's libjpeg library
#            ftp://ftp.uu.net/graphics/jpeg/jpegsrc.v6b.tar.gz
# Just hit "F11" while an image is on the screen, and it will dump the file.
# To Turn on support for saving as JPEGs, 
# make sure the next line is uncommented

# GRX_DO_JPEG = 1

# If you want to add a "stand alone" JPEG device driver (in addition to or
# instead of the screen-dump) edit "pldev.h" and make sure "PLD_jpeg" is
# defined, then make sure the next line is uncommented

# LDC_LIBS_JPEG =-ljpeg



links: linkmain

linkmain:
	mkdir plplot
	copy ..\..\..\..\src\*.c .
	copy ..\..\..\..\include\*.h .\plplot
	copy ..\..\..\..\drivers\*.c .
#	copy ..\..\..\..\fonts\*.* .
	copy ..\..\..\..\utils\*.* .
	copy ..\..\..\..\lib\*.fnt .
	copy ..\src\*.* .
	copy ..\cf\*.h .\plplot

	copy ..\cf\plconfig.in .\plplot\plconfig.h
	echo >>.\plplot\plconfig.h "#define PLPLOT_VERSION \"$(MAJOR_VERSION).$(MINOR_VERSION).$(RELEASE_VERSION)\""
	echo >>.\plplot\plconfig.h "#endif"
	echo >>.\plplot\plconfig.h "#endif	/* __PLCONFIG_H__ */"

	utod *.c
	utod ./plplot/*.h

linkexamples:
	copy ..\..\..\..\examples\c\*.c .
	utod x*.c
	copy ..\..\..\..\examples\c\*.h .\plplot
	utod ./plplot/*demos.h
#	copy ..\..\..\..\examples\f77\*.f .

install_includes:
	mkdir ..\..\..\..\include\plplot
	copy .\plplot\*.h ..\..\..\..\include\plplot

# Add gnusvga to driver list

DRIVERS_C = $(DRIVERS_C) gnusvga.c
ADD_DRIVERS_OBJ = $(DRIVERS_OBJ) gnusvga$O
#DRIVERS_OBJ = $(DRIVERS_OBJ) gnusvga$O

ifdef GRX_DO_BMP
CC_FLAGS_GNUSVGA_BMP =-DGRX_DO_BMP
endif

ifdef GRX_DO_TIFF
LDC_LIBS_TIFF ?=-ltiff
CC_FLAGS_GNUSVGA_TIFF =-DGRX_DO_TIFF
endif

ifdef GRX_DO_JPEG
LDC_LIBS_JPEG ?=-ljpeg
CC_FLAGS_GNUSVGA_JPEG =-DGRX_DO_JPEG
endif


