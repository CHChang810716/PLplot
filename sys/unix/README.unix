Here's how to make *everything* conveniently on a unix-like system.

From the top level directory, just type the following:

	cd tmp
	../configure

The makefile will then be built by running the file makefile.m4 through
the m4 macro processor with an appropriate value for the SYSTEM macro
(this is a bit different from how it was handled prior to 4.99d).  All of
the m4 scripts used in the build are located in the m4 directory; see the
README file there for details on their construction (normally you don't
need to know what's going on unless you need to change a config file).
The configure script automatically gets the system name right, using the
output of `uname`.  There are many other options you can give configure,
or you can specify these as environmental or shell variables if you like.
Type ../configure h for more information.

You must ensure that the appropriate system header files can be found by the
generated makefile.  This is occasionally a problem for X11 header files,
e.g. they might be in /usr/include/X11, /usr/include/X11R4/X11,
/usr/include/X11R5/X11, etc.  The cf_plplot.m4 file is for customizing
settings for your site; the default values will work for many systems.
If not, you should create a directory ~/config, copy cf_plplot.m4 to it,
and modify it accordingly.  The next time you use configure it will soft
link the copy in ~/config and use that.  This way you can set up site-
specific config files once and have the build always work flawlessly.

Then, while in the tmp directory

	% make

makes the main library (default precision, probably single on a
workstation), makes the renderer and the server (if the TK driver is
specified).  Finally, to make a demo,

	% make x01c

for the first C demo, or

	% make x01f

for the first Fortran demo.

The easiest way to install the library is to type "make install".  It
installs into directory /usr/local/plplot by default.  I've found it is
not difficult to get the system administrator to give you ownership of
such a directory on systems that you use.  At the sysadm's option,
softlinks can be made to /usr/local/lib, /usr/local/bin,
/usr/local/include, or whatever, leaving you free to install new plplot
versions as they become available.  It is a good idea to copy the file
README.local to the install directory and edit it accordingly for your
site (this is not done automatically).

The font files (located in the lib directory) will be put into
/usr/local/plplot by "make install", but there are actually several places
where PLPLOT looks for them.  The default search path is:

	current directory
	$(HOME)/lib
	INSTALL_DIR	(typically /usr/local/plplot)
	$(PLFONTS)
	PLFONTDEV1      (/usr/local/lib)
	PLFONTDEV2      (/usr/local/lib/plplot)
	PLFONTDEV3      (/usr/local/plplot)

You probably should also print & read the TeX documentation on the Unix
installation (NOTE: currently very out of date).

Finally, there are several shell scripts in the top level directory to
help you archive all the source files using 'zoo', 'tar', or 'zip'.

System specific notes
---------------------

SunOS: I now rely on ANSI libc functions both for seeking (fsetpos/fgetpos)
and for cleanup (atexit).  If you don't have an ANSI libc handy or if it is
inconvenient to use, you can specify -DNO_ANSI_LIBC when building.  This
will switch to the older ftell/fseek form of seeking and disable some
capabilities of the tek/xterm drivers.  Some older versions of Sunos & acc
require you to link in the ANSI lib explicitly when using from a Fortran
program, but this appears to be fixed in SunOS 4.1.3.  I haven't tried
building shared libraries for SunOS yet but hope to get around to it one of
these days.

HPUX: This is the platform I use every day; you should have no problems.
One nice thing is that shared libraries are particularly easy to build, and
the config file (cf_hp.m4) is set up to do that by default (except when gcc
is being used).

A/IX: I tried building a shared library here but failed due to some missing
externals, I think from X.  I think I need to specify an import file of
external symbols or some such, because of the X library being shared.  If
anyone has success doing this I'd be very interested.

The other platforms on which I know plplot 4.99d works fine includes:
Unicos, Super-UX (NEC), Linux.  If changes to the config files are required
to compile it on other platforms, please forward your fixes.

Maurice LeBrun
mjl@dino.ph.utexas.edu
