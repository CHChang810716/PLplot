#!/bin/sh
# $Id$
# test suite for executing all configured demos (either in plplot/tmp 
# or else in the install area) capable of file output.  Our ultimate aim
# is to compare the generated files with results generated on a system
# that is known to give good results.  However, single-precision
# contamination (even when double is configured) and the consequent large
# roundoff error is currently hampering our cross-platform comparisons.
# So for now, this is only a test suite in the sense that it checks the
# files corresponding to our demo plots can all be generated.  It is
# up to the user to display those files with the appropriate software
# (e.g., gv for postscript files and kview or a browser for png 
# or jpeg files on Linux systems) to make sure they display properly.

version=@VERSION@

usage()
{
   cat <<EOF
Usage: plplot-test.sh [OPTIONS]
Options:
   [--device=DEVICE] (DEVICE = one of psc [default], ps, png, jpeg, cgm, xfig, or plmeta.
   [--front-end=FE] (FE = one of c, cxx, f77, java, octave, python, or tcl. If this option is not specified, then all front-ends will be tested.
   [--version]
   [--help]
EOF
   exit $1
}

# This script is only designed to work from a directory named "examples" 
# with a subdirectory called "c".  Check whether those conditions are true.

current=`pwd | sed 's?^..*/\(examples\)$?\1?'`
if test ! \( "$current" = "examples" -a -d "c" \) ; then
cat << EOF
This script is only designed to work from a directory named "examples" 
with a subdirectory called "c".  One or both of those conditions has been
violated.
EOF
exit 1
fi
# These variables set by default assuming you are going to run this
# script from the installed demos directory $prefix/lib/plplot$version/examples.
cdir=c
export cdir
cxxdir=c++
export cxxdir
f77dir=f77
export f77dir
pythondir=python
export pythondir
tcldir=tcl
export tcldir
octavedir=@PLPLOT_OCTAVE_DIR@//:@OCTAVE_M_DIR@//:@OCTAVE_OCT_DIR@//:@prefix@/@DATA_DIR@/../examples/octave//:
export octavedir
installbindir=@prefix@/bin
export installbindir

fe=""
test_c="no"
test_cxx="no"
test_f77="no"
test_java="no"
test_octave="no"
test_python="no"
test_tcl="no"

while test $# -gt 0; do
   case "$1" in
   -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
   *) optarg= ;;
   esac

   case $1 in
      --device=*)
         device=$optarg
         export device
         ;;
      --version)
         echo $version
	 exit 0
         ;;
      --front-end=*)
         fe=$optarg
	 if test "${fe}" != "c" -a \
		"${fe}" != "cxx" -a \
		"${fe}" != "f77" -a \
		"${fe}" != "java" -a \
		"${fe}" != "octave" -a \
		"${fe}" != "python" -a \
		"${fe}" != "tcl"; then
		usage 0 1>&2
	 fi
	 ;;
      --help)
         usage 0 1>&2
         ;;
      *)
         usage 1 1>&2
         ;;
   esac
   shift
done

if test -z "$device"; then
   device=psc
   export device
fi

case $device in
   ps|psc)
      dsuffix=ps
      export dsuffix
      options=
      export options
      ;;
   png)
      dsuffix=png
      export dsuffix
      options="-fam -fflen 2"
      export options
      ;;
   jpeg)
      dsuffix=jpeg
      export dsuffix
      options="-fam -fflen 2"
      export options
      ;;
   cgm)
      dsuffix=cgm
      export dsuffix
      options=
      export options
      ;;
   xfig)
      dsuffix=fig
      export dsuffix
      options="-fam -fflen 2"
      export options
      ;;
   plmeta)
      dsuffix=plmeta
      export dsuffix
      options=
      export options
      ;;
   *)
      usage 1 1>&2
      ;;
esac

# Find out what front-ends have been configured
if test "${fe}" = ""; then
   test_c=yes
   test_cxx=@enable_cxx@
   test_f77=@enable_f77@
   test_java=@enable_java@
   test_octave=@enable_octave@
   test_python=@enable_python@
   test_tcl=@enable_tcl@
else
   case $fe in
     c)
	test_c="yes";;
     cxx)
	test_cxx="yes";;
     f77)
	test_f77="yes";;
     java)
	test_java="yes";;
     octave)
	test_octave="yes";;
     python)
	test_python="yes";;
     tcl)
	test_tcl="yes";;
    esac
fi

# Find out what options have been configured, and test accordingly.
if test "$test_c" = "yes" ; then
./test_c.sh
fi

if test "$test_cxx" = "yes" ; then
   ./test_cxx.sh
fi

if test "$test_f77" = "yes" ; then
   ./test_f77.sh
fi

if test "$test_java" = "yes" ; then
   ./test_java.sh
fi

if test "$test_octave" = "yes" ; then
   ./test_octave.sh
fi

if test "$test_python" = "yes" ; then
   ./test_python.sh
fi

if test "$test_tcl" = "yes" ; then
   ./test_tcl.sh
fi

