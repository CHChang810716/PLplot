#!/bin/sh
# Test suite for f77 examples.  
# This is called from plplot-test.sh with $f77dir, $device, $dsuffix, 
# and $options defined.

# To build the f77 examples before running this script do the following:
# pushd $f77dir; make; popd 

if test "@F77PARSE_CL@" = ".true."; then
# This stanza only works if fortran has command-line parsing capability.
# However, this is the preferred method because it allows access to
# command-line parsing of the $options (e.g., familying options for png
# and jpeg devices) that have been passed from plplot-test.sh

# Do non-standard example 16a because it illustrates plshade functionality 
# with cmap1 (and also because the result looks nice.)
  $f77dir/x16af -dev $device -o x16af.$dsuffix $options

# Do the standard non-interactive examples.
# skip 14, 17, and 20 because they are interactive, and 14 and 20 not 
# implemented.
# skip 19 because the fortran API is not available for maps.
# skip 21 because it delivers variable results depending on computer timing
# and load (and not implemented yet).
  for index in 01 02 03 04 05 06 07 08 09 10 11 12 13 15 16 18; do
    $f77dir/x${index}f -dev $device -o x${index}f.$dsuffix $options
  done
else
# Fall back to this method if this fortran platform does not have
# command-line parsing capability.  Command-line $options must be ignored 
# for this method.
# Do non-standard example 16a because it illustrates plshade functionality 
# with cmap1 (and also because the result looks nice.)
  $f77dir/x16af <<EOF >/dev/null
$device
x16af.$dsuffix
EOF

# Do the standard non-interactive examples.
# skip 14, 17, and 20 because they are interactive, and 14 and 20 not 
# implemented.
# skip 19 because the fortran API is not available for maps.
# skip 21 because it delivers variable results depending on computer timing
# and load (and not implemented yet).
  for index in 01 02 03 04 05 06 07 08 09 10 11 12 13 15 16 18; do
     $f77dir/x${index}f <<EOF >/dev/null
$device
x${index}f.$dsuffix
EOF
  done
fi
