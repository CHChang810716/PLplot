		PLPLOT DOCUMENTATION IN THE DOCBOOK FORMAT
		    (Notes for contributors/developers)
     $Id$



Introduction
============

You will find in this directory tree the latest PLplot documentation in
DocBook 4.1 XML format.  You will find in the current file
(README.developers) instructions for building the documentation from the
DocBook source files in this directory. The documentation that is built
includes man pages of the API as well as complete versions of the
documentation in html, dvi, postscript, pdf, and info form.

Configuring and Building
========================

If you would like to help with improving the content, you will want to build
the documentation from the DocBook source so you can immediately see and
evaluate the results of your efforts.

Here is how.  Simply add the cmake option -DBUILD_DOC=ON to your normal
cmake command-line options for the PLplot build.  The resulting cmake step
looks for all the tools required for the documentation build and turns off
the documentation build and gives WARNING messages if any of those required
tools are missing.  Those messages should be sufficient for you to figure
out what DocBook/XML related tools you need to install in order to build the
documentation.  N.B. As far as we know, the complete set of required tools
is only available on Linux so you will need a Linux system to do a
documentation build.

The DocBook Back-end Tool Chains
================================

PLplot uses a number of different applications to generate
PLplot documentation in various formats from our source DocBook XML files.

1.  man pages.

Our man pages are generated with a configured home-brew perl script
bin/api2man.pl(.in). That script uses XML::DOM::Parser to parse the
combination of plplotdoc.xml (for entity definitions) and api.xml
(the subset of our DocBook source files which describes our core
library's API) to obtain the information used to generate the man
pages.

2. info pages.

Our info pages are generated by a combination of 

bin/info-clean.pl --> db2x_xsltproc --> db2x_texixml --> makeinfo

where info-clean.pl is a home-brew perl script required (as far as I
can tell from reading comments in it) to get around some of the
db2x_xsltproc limitations.  db2x_xsltproc and db2x_texixml are from
the docbook2x package.

3. web pages.

Our web pages are generated with openjade.

4. dvi file

Our dvi file is generated by

openjade --> jadetex


5. PostScript file

Our PostScript file is generated from the above dvi file
using dvips.


6. pdf file

openjade --> pdfjadetex

Validation
==========

Validation checks that the PLplot Docbook files in doc/docbook/src are
well-formed XML and correspond to the DocBook schema.  You can perform
such validation by typing the

make validate

command at the top of the build tree.  This make target is only available if
the PLplot CMake-based build system has found the onsgmls software
application (which is distributed as part of OpenSP) on your system. This
quick check works regardless of whether you decide to build the
documentation with -DBUILD_DOC=ON or not. Using "make validate" is
especially useful if you are just making a series of simple changes to the
files in doc/docbook/src, and you don't really feel it is necessary to check
every change by doing a complete documentation build.

Testing the documentation that has been built.
==============================================

All tests are performed in the doc/dockbook/src subdirectory _of the build
tree_.  The given test commands are for the bash shell, and $version is
currently 5.9.0.  There are no known DocBook back-end issues revealed by the
following tests.

1.  man pages.

(for MANPAGE in *.3plplot; do nroff -man $MANPAGE ; done) |less

2. info pages.

info --file plplotdoc.info

3. web pages.

Browse with your favorite browser the index.html file within the current src
directory.  konqueror and mozilla/firefox/iceweasel give good looking
results including the Greek letters in Table 3-4.

4. dvi file

xdvi plplot-$version.dvi

5. PostScript file

gv plplot-$version.ps.gz

6. pdf file

xpdf plplot-$version.pdf

Installing the generated documentation (and the rest of the 
generated website) at plplot.sf.net
===========================================================

Follow the directions in README.Release_Manager_Cookbook.  That file is
located in the top-level source tree.
